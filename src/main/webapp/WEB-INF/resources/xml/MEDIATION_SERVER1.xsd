<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:element name="aggregationService" type="aggregationService"/>

  <xs:element name="asn1ParserMapping" type="asn1ParserMapping"/>

  <xs:element name="collectionService" type="collectionService"/>

  <xs:element name="correlationService" type="correlationService"/>

  <xs:element name="dataConsolidationService" type="dataConsolidationService"/>

  <xs:element name="distributionService" type="distributionService"/>

  <xs:element name="ipLogParsingService" type="ipLogParsingService"/>

  <xs:element name="netflowBinaryCollectionService" type="netflowBinaryCollectionService"/>

  <xs:element name="netflowClient" type="netflowClient"/>

  <xs:element name="netflowCollectionService" type="netflowCollectionService"/>

  <xs:element name="parser" type="parser"/>

  <xs:element name="parsingService" type="parsingService"/>

  <xs:element name="processingService" type="processingService"/>

  <xs:element name="server" type="server"/>

  <xs:element name="serverInstance" type="serverInstance"/>

  <xs:element name="snmpAlert" type="snmpAlert"/>

  <xs:element name="snmpAlertWrapper" type="snmpAlertWrapper"/>

  <xs:element name="snmpServerConfig" type="snmpServerConfig"/>

  <xs:element name="sysLogCollectionService" type="sysLogCollectionService"/>

  <xs:complexType name="logsDetail">
    <xs:complexContent>
      <xs:extension base="toStringProcessor">
        <xs:sequence>
          <xs:element name="level" type="logLevelEnum" minOccurs="0"/>
          <xs:element name="rollingType" type="logRollingTypeEnum" minOccurs="0"/>
          <xs:element name="maxRollingUnit" type="xs:int"/>
          <xs:element name="rollingValue" type="xs:int"/>
          <xs:element name="logPathLocation" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="toStringProcessor" abstract="true">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="serverInstance">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="port" type="xs:int"/>
          <xs:element name="fileStatInDBEnable" type="xs:boolean" />
          <xs:element name="fileCdrSummaryDBEnable" type="xs:boolean"/>
          <xs:element name="minDiskSpace" type="xs:string" minOccurs="0"/>
          <xs:element name="snmpAlertEnable" type="xs:boolean"/>
          <xs:element name="syncSIStatus" type="xs:boolean"/>
          <xs:element name="syncChildStatus" type="xs:boolean"/>
          <xs:element name="webservicesEnable" type="xs:boolean"/>
          <xs:element name="restWebservicesEnable" type="xs:boolean"/>
          <xs:element name="serverHome" type="xs:string" minOccurs="0"/>
          <xs:element name="javaHome" type="xs:string" minOccurs="0"/>
          <xs:element name="mediationRoot" type="xs:string" minOccurs="0"/>
          <xs:element name="minMemoryAllocation" type="xs:int"/>
          <xs:element name="maxMemoryAllocation" type="xs:int"/>
          <xs:element name="fileStorageLocation" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="maxConnectionRetry" type="xs:int"/>
          <xs:element name="retryInterval" type="xs:int"/>
          <xs:element name="connectionTimeout" type="xs:int"/>
          <xs:element name="scriptName" type="xs:string" minOccurs="0"/>
          <xs:element name="selfSNMPServerConfig" type="snmpServerConfig" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="snmpListeners" type="snmpServerConfig" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="thresholdSysAlertEnable" type="xs:boolean"/>
          <xs:element name="thresholdTimeInterval" type="xs:int"/>
          <xs:element name="thresholdMemory" type="xs:int"/>
          <xs:element name="loadAverage" type="xs:int"/>
          <xs:element ref="server" minOccurs="0"/>
          <xs:element name="datasourceConfig" type="dataSourceConfig" minOccurs="0"/>
          <xs:element name="logsDetail" type="logsDetail" minOccurs="0"/>
          <xs:element name="services" type="service" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="agentList" type="agent" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="baseModel" abstract="true">
    <xs:complexContent>
      <xs:extension base="toStringProcessor">
        <xs:sequence>
          <xs:element name="createdByStaffId" type="xs:int"/>
          <xs:element name="createdDate" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="lastUpdatedByStaffId" type="xs:int"/>
          <xs:element name="lastUpdatedDate" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="status" type="stateEnum" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="snmpServerConfig">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="version" type="snmpVersionType" minOccurs="0"/>
          <xs:element name="type" type="snmpServerType" minOccurs="0"/>
          <xs:element name="hostIP" type="xs:string" minOccurs="0"/>
          <xs:element name="port" type="xs:string" minOccurs="0"/>
          <xs:element name="portOffset" type="xs:int"/>
          <xs:element name="community" type="snmpCommunityType" minOccurs="0"/>
          <xs:element name="advance" type="xs:boolean"/>
          <xs:element name="configuredAlerts" type="snmpAlertWrapper" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="snmpAlertWrapper">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="alert" type="snmpAlert" minOccurs="0"/>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="serviceThreshold" type="snmpServiceThreshold" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="serviceThresholdConfigured" type="xs:boolean"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="snmpAlert">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="alertId" type="xs:string" minOccurs="0"/>
          <xs:element name="alertType" type="snmpAlertType" minOccurs="0"/>
          <xs:element name="desc" type="xs:string" minOccurs="0"/>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="threshold" type="xs:int"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="snmpAlertType">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="alias" type="xs:string" minOccurs="0"/>
          <xs:element name="category" type="snmpAlertTypeEnum" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="snmpServiceThreshold">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="service" type="service" minOccurs="0"/>
          <xs:element name="threshold" type="xs:int"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="service">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="servInstanceId" type="xs:string" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="syncStatus" type="xs:boolean"/>
          <xs:element name="enableFileStats" type="xs:boolean"/>
          <xs:element name="enableDBStats" type="xs:boolean"/>
          <xs:element name="svctype" type="serviceType" minOccurs="0"/>
          <xs:element name="svcExecParams" type="serviceExecutionParams" minOccurs="0"/>
          <xs:element name="myDrivers" type="drivers" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="svcPathList" type="pathList" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serviceType">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="alias" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="type" type="xs:string" minOccurs="0"/>
          <xs:element name="serviceFullClassName" type="xs:string" minOccurs="0"/>
          <xs:element name="typeOfService" type="serviceTypeEnum" minOccurs="0"/>
          <xs:element name="serviceCategory" type="serviceCategoryEnum" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serviceExecutionParams">
    <xs:sequence>
      <xs:element name="executeOnStartup" type="xs:boolean"/>
      <xs:element name="executionInterval" type="xs:int"/>
      <xs:element name="fileBatchSize" type="xs:int"/>
      <xs:element name="maxThread" type="xs:int"/>
      <xs:element name="minThread" type="xs:int"/>
      <xs:element name="queueSize" type="xs:int"/>
      <xs:element name="sortingCriteria" type="xs:string" minOccurs="0"/>
      <xs:element name="sortingType" type="xs:string" minOccurs="0"/>
      <xs:element name="startupMode" type="startUpModeEnum" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="drivers">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="timeout" type="xs:int"/>
          <xs:element name="applicationOrder" type="xs:int"/>
          <xs:element name="maxRetrycount" type="xs:int"/>
          <xs:element name="fileSeqOrder" type="xs:boolean"/>
          <xs:element name="minFileRange" type="xs:int"/>
          <xs:element name="maxFileRange" type="xs:int"/>
          <xs:element name="driverType" type="driverType" minOccurs="0"/>
          <xs:element name="driverPathList" type="pathList" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="noFileAlert" type="xs:int"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="driverType">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="alias" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="type" type="xs:string" minOccurs="0"/>
          <xs:element name="driverFullClassName" type="xs:string" minOccurs="0"/>
          <xs:element name="category" type="driverCategory" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pathList">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="readFilePath" type="xs:string" minOccurs="0"/>
          <xs:element name="archivePath" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="collectionDriverPathList">
    <xs:complexContent>
      <xs:extension base="commonPathList">
        <xs:sequence>
          <xs:element name="maxFilesCountAlert" type="xs:int"/>
          <xs:element name="remoteFileAction" type="xs:string" minOccurs="0"/>
          <xs:element name="remoteFileActionParamName" type="xs:string" minOccurs="0"/>
          <xs:element name="remoteFileActionValue" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="fileGrepDateEnabled" type="xs:boolean"/>
          <xs:element name="dateFormat" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="position" type="xs:string" minOccurs="0"/>
          <xs:element name="startIndex" type="xs:int"/>
          <xs:element name="endIndex" type="xs:int"/>
          <xs:element name="fileSeqAlertEnabled" type="xs:boolean"/>
          <xs:element name="seqStartIndex" type="xs:int"/>
          <xs:element name="seqEndIndex" type="xs:int"/>
          <xs:element name="maxCounterLimit" type="xs:int"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="commonPathList">
    <xs:complexContent>
      <xs:extension base="pathList">
        <xs:sequence>
          <xs:element name="compressInFileEnabled" type="xs:boolean"/>
          <xs:element name="compressOutFileEnabled" type="xs:boolean"/>
          <xs:element name="readFilenamePrefix" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="readFilenameSuffix" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="readFilenameContains" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="readFilenameExcludeTypes" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="writeFilePath" type="xs:string" minOccurs="0"/>
          <xs:element name="writeFilenamePrefix" type="xs:string" nillable="true" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="distributionDriverPathList">
    <xs:complexContent>
      <xs:extension base="commonPathList">
        <xs:sequence>
          <xs:element name="composerWrappers" type="composer" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="maxFilesCountAlert" type="xs:int"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="composer">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="composerType" type="pluginTypeMaster" minOccurs="0"/>
          <xs:element name="writeFilenamePrefix" type="xs:string" minOccurs="0"/>
          <xs:element name="writeFilenameSuffix" type="xs:string" minOccurs="0"/>
          <xs:element name="fileExtension" type="xs:string" minOccurs="0"/>
          <xs:element name="destPath" type="xs:string" minOccurs="0"/>
          <xs:element name="fileBackupPath" type="xs:string" minOccurs="0"/>
          <xs:element name="composerMapping" type="composerMapping" minOccurs="0"/>
          <xs:element name="charRenameOperationList" type="charRenameOperation" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pluginTypeMaster">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="alias" type="xs:string" minOccurs="0"/>
          <xs:element name="category" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="pluginFullClassName" type="xs:string" minOccurs="0"/>
          <xs:element name="type" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="composerMapping">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="attributeList" type="composerAttribute" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="composerType" type="pluginTypeMaster" minOccurs="0"/>
          <xs:element name="dateFormatEnum" type="xs:string" minOccurs="0"/>
          <xs:element name="destCharset" type="charSetEnum" minOccurs="0"/>
          <xs:element name="destDateFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="destFileExt" type="xs:string" minOccurs="0"/>
          <xs:element name="device" type="device" minOccurs="0"/>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="mappingType" type="xs:int"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="composerAttribute">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="dataType" type="dataTypeEnum" minOccurs="0"/>
          <xs:element name="dateFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="defualtValue" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="destinationField" type="xs:string" minOccurs="0"/>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="sequenceNumber" type="xs:int"/>
          <xs:element name="trimchars" type="xs:string" minOccurs="0"/>
          <xs:element name="unifiedField" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="asciiComposerAttr">
    <xs:complexContent>
      <xs:extension base="composerAttribute">
        <xs:sequence>
          <xs:element name="length" type="xs:int"/>
          <xs:element name="paddingChar" type="xs:string" minOccurs="0"/>
          <xs:element name="paddingEnable" type="xs:boolean"/>
          <xs:element name="paddingType" type="positionEnum" minOccurs="0"/>
          <xs:element name="prefix" type="xs:string" minOccurs="0"/>
          <xs:element name="replaceConditionList" type="xs:string" minOccurs="0"/>
          <xs:element name="suffix" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="asn1ComposerAttribute">
    <xs:complexContent>
      <xs:extension base="composerAttribute">
        <xs:sequence>
          <xs:element name="ASN1DataType" type="xs:string" minOccurs="0"/>
          <xs:element name="argumentDataType" type="xs:string" minOccurs="0"/>
          <xs:element name="attrType" type="asn1ATTRTYPE" minOccurs="0"/>
          <xs:element name="childAttributes" type="xs:string" minOccurs="0"/>
          <xs:element name="choiceId" type="xs:string" minOccurs="0"/>
          <xs:element name="destFieldDataFormat" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fixedLengthASCIIComposerAttribute">
    <xs:complexContent>
      <xs:extension base="asciiComposerAttr">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="device">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="decodeType" type="xs:string" minOccurs="0"/>
          <xs:element name="isPreConfigured" type="xs:int"/>
          <xs:element name="deviceType" type="deviceType" minOccurs="0"/>
          <xs:element name="vendorType" type="vendorType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="deviceType">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="vendorType">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="asciiComposerMapping">
    <xs:complexContent>
      <xs:extension base="composerMapping">
        <xs:sequence>
          <xs:element name="fieldSeparator" type="xs:string" minOccurs="0"/>
          <xs:element name="fieldSeparatorEnum" type="xs:string" minOccurs="0"/>
          <xs:element name="fileHeaderContainsFields" type="xs:boolean"/>
          <xs:element name="fileHeaderEnable" type="xs:boolean"/>
          <xs:element name="fileHeaderParser" type="fileHeaderFooterTypeEnum" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="defaultComposerMapping">
    <xs:complexContent>
      <xs:extension base="composerMapping">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="asn1ComposerMapping">
    <xs:complexContent>
      <xs:extension base="composerMapping">
        <xs:sequence>
          <xs:element name="recMainAttribute" type="xs:string" minOccurs="0"/>
          <xs:element name="startFormat" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="detailLocalComposerMapping">
    <xs:complexContent>
      <xs:extension base="composerMapping">
        <xs:sequence>
          <xs:element name="headerAttributeDateFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="keyValueSeparator" type="xs:string" minOccurs="0"/>
          <xs:element name="srcCharset" type="charSetEnum" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fixedLengthASCIIComposerMapping">
    <xs:complexContent>
      <xs:extension base="composerMapping">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="charRenameOperation">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="sequenceNo" type="xs:int"/>
          <xs:element name="query" type="xs:string" minOccurs="0"/>
          <xs:element name="position" type="xs:string" minOccurs="0"/>
          <xs:element name="startIndex" type="xs:int" minOccurs="0"/>
          <xs:element name="endIndex" type="xs:int" minOccurs="0"/>
          <xs:element name="paddingType" type="xs:string" minOccurs="0"/>
          <xs:element name="defaultValue" type="xs:string" minOccurs="0"/>
          <xs:element name="length" type="xs:int"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="processingPathList">
    <xs:complexContent>
      <xs:extension base="commonPathList">
        <xs:sequence>
          <xs:element name="maxFilesCountAlert" type="xs:int"/>
          <xs:element name="writeCdrHeaderFooterEnabled" type="xs:boolean"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="parsingPathList">
    <xs:complexContent>
      <xs:extension base="pathList">
        <xs:sequence>
          <xs:element name="parserWrappers" type="parser" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="parser">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="parserType" type="pluginTypeMaster" minOccurs="0"/>
          <xs:element name="readFilenamePrefix" type="xs:string" minOccurs="0"/>
          <xs:element name="readFilenameSuffix" type="xs:string" minOccurs="0"/>
          <xs:element name="readFilenameContains" type="xs:string" minOccurs="0"/>
          <xs:element name="readFilenameExcludeTypes" type="xs:string" minOccurs="0"/>
          <xs:element name="writeFilePath" type="xs:string" minOccurs="0"/>
          <xs:element name="compressInFileEnabled" type="xs:boolean"/>
          <xs:element name="compressOutFileEnabled" type="xs:boolean"/>
          <xs:element name="maxFileCountAlert" type="xs:int"/>
          <xs:element name="writeFileSplit" type="xs:boolean"/>
          <xs:element name="writeFilenamePrefix" type="xs:string" minOccurs="0"/>
          <xs:element name="parserMapping" type="parserMapping" minOccurs="0"/>
          <xs:element name="writeCdrHeaderFooterEnabled" type="xs:boolean"/>
          <xs:element name="writeCdrDefaultAttributes" type="xs:boolean"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="parserMapping">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="parserType" type="pluginTypeMaster" minOccurs="0"/>
          <xs:element name="device" type="device" minOccurs="0"/>
          <xs:element name="dateFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="srcDateFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="srcCharSetName" type="charSetEnum" minOccurs="0"/>
          <xs:element name="mappingType" type="xs:int"/>
          <xs:element name="parserAttributes" type="parserAttribute" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="parserAttribute">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="attributeOrder" type="xs:int"/>
          <xs:element name="defaultValue" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="sourceField" type="xs:string" minOccurs="0"/>
          <xs:element name="sourceFieldFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="trimChars" type="xs:string" minOccurs="0"/>
          <xs:element name="unifiedField" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="asn1ParserAttribute">
    <xs:complexContent>
      <xs:extension base="parserAttribute">
        <xs:sequence>
          <xs:element name="ASN1DataType" type="xs:string" minOccurs="0"/>
          <xs:element name="attrType" type="asn1ATTRTYPE" minOccurs="0"/>
          <xs:element name="childAttributes" type="xs:string" minOccurs="0"/>
          <xs:element name="recordInitilializer" type="xs:boolean"/>
          <xs:element name="srcDataFormat" type="sourceFieldDataFormatEnum" minOccurs="0"/>
          <xs:element name="unifiedFieldHoldsChoiceId" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="natFlowParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence>
          <xs:element name="readTemplatesInitially" type="xs:boolean"/>
          <xs:element name="optionTemplateEnable" type="xs:boolean"/>
          <xs:element name="optionTemplateId" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="optionTemplateKey" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="optionTemplateValue" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="optionCopytoTemplateId" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="optionCopyTofield" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="filterEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="filterProtocol" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="filterTransport" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="filterPort" type="xs:string" nillable="true" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="natflowASN1ParserMapping">
    <xs:complexContent>
      <xs:extension base="natFlowParserMapping">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="asciiParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence>
          <xs:element name="fieldSeparator" type="xs:string" minOccurs="0"/>
          <xs:element name="fieldSeparatorEnum" type="xs:string" minOccurs="0"/>
          <xs:element name="fileFooterContains" type="xs:string" minOccurs="0"/>
          <xs:element name="fileFooterEnable" type="xs:boolean"/>
          <xs:element name="fileFooterParser" type="fileHeaderFooterTypeEnum" minOccurs="0"/>
          <xs:element name="fileFooterRows" type="xs:int"/>
          <xs:element name="fileHeaderContainsFields" type="xs:boolean"/>
          <xs:element name="fileHeaderEnable" type="xs:boolean"/>
          <xs:element name="fileHeaderParser" type="fileHeaderFooterTypeEnum" minOccurs="0"/>
          <xs:element name="fileHeaderRow" type="xs:int"/>
          <xs:element name="fileHeaderStartIndex" type="xs:int"/>
          <xs:element name="fileTypeEnum" type="fileTypeEnum" minOccurs="0"/>
          <xs:element name="find" type="xs:string" minOccurs="0"/>
          <xs:element name="keyValueRecordEnable" type="xs:boolean"/>
          <xs:element name="keyValueSeparator" type="xs:string" minOccurs="0"/>
          <xs:element name="keyValueSeparatorEnum" type="xs:string" minOccurs="0"/>
          <xs:element name="recordHeaderEnable" type="xs:boolean"/>
          <xs:element name="recordHeaderLength" type="xs:string" minOccurs="0"/>
          <xs:element name="recordHeaderSepEnum" type="xs:string" minOccurs="0"/>
          <xs:element name="recordHeaderSeparator" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="replace" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="asn1ParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence>
          <xs:element name="headerOffset" type="xs:int"/>
          <xs:element name="recMainAttribute" type="xs:string" minOccurs="0"/>
          <xs:element name="recOffset" type="xs:int"/>
          <xs:element name="removeAddByte" type="xs:boolean"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="detailLocalParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence>
          <xs:element name="attributeSeperator" type="xs:string" minOccurs="0"/>
          <xs:element name="vendorNameSeparatorEnable" type="xs:boolean"/>
          <xs:element name="vendorSeparatorValue" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fixedLengthASCIIParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fixedLengthBinaryParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
	<xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
   <xs:complexType name="pdfParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
	<xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="regexParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence>
          <xs:element name="avilablelogPatternRegexId" type="xs:string" minOccurs="0"/>
          <xs:element name="logPatternRegex" type="xs:string" minOccurs="0"/>
          <xs:element name="logPatternRegexId" type="xs:string" minOccurs="0"/>
          <xs:element name="patternList" type="regExPattern" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="regExPattern">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="attributeList" type="regexParserAttribute" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="patternRegEx" type="xs:string" minOccurs="0"/>
          <xs:element name="patternRegExId" type="xs:string" minOccurs="0"/>
          <xs:element name="patternRegExName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="regexParserAttribute">
    <xs:complexContent>
      <xs:extension base="parserAttribute">
        <xs:sequence>
          <xs:element name="regex" type="xs:string" minOccurs="0"/>
          <xs:element name="sampleData" type="xs:string" minOccurs="0"/>
          <xs:element name="seqNumber" type="xs:int"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="sstpXmlParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="xmlParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="collectionDriver">
    <xs:complexContent>
      <xs:extension base="drivers">
        <xs:sequence>
          <xs:element name="fileGroupingParameter" type="fileGroupingParameter" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fileGroupingParameter">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="fileGroupEnable" type="xs:boolean"/>
          <xs:element name="groupingType" type="fileGroupEnum" minOccurs="0"/>
          <xs:element name="enableForDuplicate" type="xs:boolean"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ftpCollectionDriver">
    <xs:complexContent>
      <xs:extension base="collectionDriver">
        <xs:sequence>
          <xs:element name="ftpConnectionParams" type="connectionParameter" minOccurs="0"/>
          <xs:element name="myFileFetchParams" type="fileFetchParams" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="connectionParameter">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="iPAddressHost" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="port" type="xs:int" nillable="true"/>
          <xs:element name="username" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="password" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="timeout" type="xs:int"/>
          <xs:element name="fileSeparator" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="fileTransferMode" type="fileTransferModeEnum" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fileFetchParams">
    <xs:sequence>
      <xs:element name="fileFetchRuleEnabled" type="xs:boolean"/>
      <xs:element name="fileFetchType" type="xs:string" minOccurs="0"/>
      <xs:element name="fileFetchIntervalMin" type="xs:int"/>
      <xs:element name="timeZone" type="xs:string" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="sftpCollectionDriver">
    <xs:complexContent>
      <xs:extension base="ftpCollectionDriver">
        <xs:sequence>
          <xs:element name="certKey" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="localCollectionDriver">
    <xs:complexContent>
      <xs:extension base="collectionDriver">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="distributionDriver">
    <xs:complexContent>
      <xs:extension base="drivers">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ftpDistributionDriver">
    <xs:complexContent>
      <xs:extension base="distributionDriver">
        <xs:sequence>
          <xs:element name="ftpConnectionParams" type="connectionParameter" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="sftpDistributionDriver">
    <xs:complexContent>
      <xs:extension base="ftpDistributionDriver">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="localDistributionDriver">
    <xs:complexContent>
      <xs:extension base="distributionDriver">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="databaseDistributionDriver">
    <xs:complexContent>
      <xs:extension base="distributionDriver">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="hadoopDistributionDriver">
    <xs:complexContent>
      <xs:extension base="distributionDriver">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="collectionService">
    <xs:complexContent>
      <xs:extension base="service">
        <xs:sequence>
          <xs:element name="serviceSchedulingParams" type="serviceSchedulingParams" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serviceSchedulingParams">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="schedulingEnabled" type="xs:boolean"/>
          <xs:element name="schType" type="xs:string" minOccurs="0"/>
          <xs:element name="date" type="xs:string" minOccurs="0"/>
          <xs:element name="day" type="xs:string" minOccurs="0"/>
          <xs:element name="time" type="xs:string" nillable="true" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="netflowBinaryCollectionService">
    <xs:complexContent>
      <xs:extension base="collectionService">
        <xs:sequence>
          <xs:element name="serverIp" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="serverPort" type="xs:int"/>
          <xs:element name="netFlowPort" type="xs:int"/>
          <xs:element name="sktRcvBufferSize" type="xs:long"/>
          <xs:element name="sktSendBufferSize" type="xs:long"/>
          <xs:element name="newLineCharAvailable" type="xs:boolean"/>
          <xs:element name="bulkWriteLimit" type="xs:int"/>
          <xs:element name="maxPktSize" type="xs:long"/>
          <xs:element name="maxWriteBufferSize" type="xs:long"/>
          <xs:element name="parallelFileWriteCount" type="xs:int"/>
          <xs:element name="snmpAlertEnable" type="xs:boolean"/>
          <xs:element name="snmpTimeInterval" type="xs:int"/>
          <xs:element name="maxIdelCommuTime" type="xs:int"/>
          <xs:element name="netFLowClientList" type="netflowClient" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="netflowClient">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="clientIpAddress" type="xs:string" minOccurs="0"/>
          <xs:element name="clientPort" type="xs:int"/>
          <xs:element name="fileNameFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="appendFileSequenceInFileName" type="xs:boolean"/>
          <xs:element name="minFileSeqValue" type="xs:int"/>
          <xs:element name="maxFileSeqValue" type="xs:int"/>
          <xs:element name="outFileLocation" type="xs:string" minOccurs="0"/>
          <xs:element name="rollingType" type="rollingTypeEnum" minOccurs="0"/>
          <xs:element name="volLogRollingUnit" type="xs:int"/>
          <xs:element name="timeLogRollingUnit" type="xs:int"/>
          <xs:element name="inputCompressed" type="xs:boolean"/>
          <xs:element name="bkpBinaryfileLocation" type="xs:string" minOccurs="0"/>
          <xs:element name="snmpAlertEnable" type="xs:boolean"/>
          <xs:element name="alertInterval" type="xs:int"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="netflowCollectionService">
    <xs:complexContent>
      <xs:extension base="netflowBinaryCollectionService">
        <xs:sequence>
          <xs:element name="enableParallelBinaryWrite" type="xs:boolean"/>
          <xs:element name="binaryfileLocation" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="readTemplateOnInit" type="xs:boolean"/>
          <xs:element name="optionTemplateEnable" type="xs:boolean"/>
          <xs:element name="optionTemplateId" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="optionTemplateKey" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="optionTemplateValue" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="optionCopytoTemplateId" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="optionCopyTofield" type="xs:string" nillable="true" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="sysLogCollectionService">
    <xs:complexContent>
      <xs:extension base="netflowBinaryCollectionService">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="parsingService">
    <xs:complexContent>
      <xs:extension base="service">
        <xs:sequence>
          <xs:element name="dateFieldForSummary" type="unifiedFieldEnum" minOccurs="0"/>
          <xs:element name="equalCheckField" type="xs:string" minOccurs="0"/>
          <xs:element name="equalCheckValue" type="xs:string" minOccurs="0"/>
          <xs:element name="fileGroupingParameter" type="fileGroupingParameter" minOccurs="0"/>
          <xs:element name="fileSeqOrderEnable" type="xs:boolean"/>
          <xs:element name="fileSplitEnabled" type="xs:boolean"/>
          <xs:element name="fileStatInsertEnable" type="xs:boolean"/>
          <xs:element name="maxFileRange" type="xs:int"/>
          <xs:element name="minFileRange" type="xs:int"/>
          <xs:element name="noFileAlert" type="xs:int"/>
          <xs:element name="overrideFileDateEnabled" type="xs:boolean"/>
          <xs:element name="overrideFileDateType" type="cdrFileDateTypeEnum" minOccurs="0"/>
          <xs:element name="recordBatchSize" type="xs:int" minOccurs="0"/>
          <xs:element name="storeCDRFileSummaryDB" type="xs:boolean"/>
          <xs:element name="typeForSummary" type="cdrDateSummaryTypeEnum" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="distributionService">
    <xs:complexContent>
      <xs:extension base="service">
        <xs:sequence>
          <xs:element name="fileGroupingParameter" type="fileGroupingParameter" minOccurs="0"/>
          <xs:element name="fileMergeEnabled" type="xs:boolean"/>
          <xs:element name="processRecordLimit" type="xs:int"/>
          <xs:element name="serviceSchedulingParams" type="serviceSchedulingParams" minOccurs="0"/>
          <xs:element name="thirdPartyTransferEnabled" type="xs:boolean"/>
          <xs:element name="timestenDatasourceName" type="xs:string" minOccurs="0"/>
          <xs:element name="writeRecordLimit" type="xs:int"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="processingService">
    <xs:complexContent>
      <xs:extension base="service">
        <xs:sequence>
          <xs:element name="dateFieldForSummary" type="unifiedFieldEnum" minOccurs="0"/>
          <xs:element name="acrossFileDuplicateCDRCacheLimit" type="xs:int"/>
          <xs:element name="acrossFileDuplicateDateField" type="xs:string" minOccurs="0"/>
          <xs:element name="acrossFileDuplicateDateFieldFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="acrossFileDuplicateDateInterval" type="xs:int"/>
          <xs:element name="acrossFileDuplicateDateIntervalType" type="timeUnitEnum" minOccurs="0"/>
          <xs:element name="acrossFileDuplicatePurgeCacheInterval" type="xs:int"/>
          <xs:element name="alertDescription" type="xs:string" minOccurs="0"/>
          <xs:element name="alertId" type="xs:string" minOccurs="0"/>
          <xs:element name="duplicateRecordPolicyEnabled" type="xs:boolean"/>
          <xs:element name="duplicateRecordPolicyType" type="duplicateRecordPolicyTypeEnum" minOccurs="0"/>
          <xs:element name="fileGroupingParameter" type="fileGroupingParameterProcessing" minOccurs="0"/>
          <xs:element name="fileSeqOrderEnable" type="xs:boolean"/>
          <xs:element name="globalSeqDeviceName" type="xs:string" minOccurs="0"/>
          <xs:element name="globalSeqEnabled" type="xs:boolean"/>
          <xs:element name="globalSeqMaxLimit" type="xs:int"/>
          <xs:element name="maxFileRange" type="xs:int"/>
          <xs:element name="minFileRange" type="xs:int"/>
          <xs:element name="noFileAlert" type="xs:int"/>
          <xs:element name="recordBatchSize" type="xs:int"/>
          <xs:element name="unifiedFields" type="xs:string" minOccurs="0"/>
          <xs:element name="overrideFileDateEnabled" type="xs:boolean"/>
          <xs:element name="overrideFileDateType" type="cdrFileDateTypeEnum" minOccurs="0"/>
          <xs:element name="recordBatchSize" type="xs:int" minOccurs="0"/>
          <xs:element name="storeCDRFileSummaryDB" type="xs:boolean"/>
          <xs:element name="typeForSummary" type="cdrDateSummaryTypeEnum" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fileGroupingParameterProcessing">
    <xs:complexContent>
      <xs:extension base="fileGroupingParameter">
        <xs:sequence>
          <xs:element name="archivePath" type="xs:string" minOccurs="0"/>
          <xs:element name="duplicateDirPath" type="xs:string" minOccurs="0"/>
          <xs:element name="enableForArchive" type="xs:boolean"/>
          <xs:element name="enableForFilter" type="xs:boolean"/>
          <xs:element name="enableForInvalid" type="xs:boolean"/>
          <xs:element name="filterDirPath" type="xs:string" minOccurs="0"/>
          <xs:element name="filterGroupType" type="filterGroupTypeEnum" minOccurs="0"/>
          <xs:element name="invalidDirPath" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="aggregationService">
    <xs:complexContent>
      <xs:extension base="service">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="correlationService">
    <xs:complexContent>
      <xs:extension base="service">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="dataConsolidationService">
    <xs:complexContent>
      <xs:extension base="service">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ipLogParsingService">
    <xs:complexContent>
      <xs:extension base="service">
        <xs:sequence>
          <xs:element name="correlEnabled" type="xs:boolean"/>
          <xs:element name="createRecDestPath" type="xs:string" minOccurs="0"/>
          <xs:element name="dataType" type="hashDataTypeEnum" minOccurs="0"/>
          <xs:element name="deleteRecDestPath" type="xs:string" minOccurs="0"/>
          <xs:element name="destPortField" type="xs:int"/>
          <xs:element name="destPortFilter" type="xs:int"/>
          <xs:element name="equalCheckField" type="unifiedFieldEnum" minOccurs="0"/>
          <xs:element name="equalCheckValue" type="xs:string" minOccurs="0"/>
          <xs:element name="fileGroupingParameter" type="fileGroupingParameterParsing" minOccurs="0"/>
          <xs:element name="fileStatsEnabled" type="xs:boolean"/>
          <xs:element name="fileStatsLoc" type="xs:string" minOccurs="0"/>
          <xs:element name="hashSeparator" type="xs:string" minOccurs="0"/>
          <xs:element name="indexType" type="xs:string" minOccurs="0"/>
          <xs:element name="mappedSourceField" type="xs:string" minOccurs="0"/>
          <xs:element name="outFileHeaders" type="xs:string" minOccurs="0"/>
          <xs:element name="partionParamList" type="partitionParam" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="purgeDelayInterval" type="xs:int"/>
          <xs:element name="purgeInterval" type="xs:int"/>
          <xs:element name="recordBatchSize" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fileGroupingParameterParsing">
    <xs:complexContent>
      <xs:extension base="fileGroupingParameter">
        <xs:sequence>
          <xs:element name="enableForArchive" type="xs:boolean"/>
          <xs:element name="archivePath" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="partitionParam">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="partitionField" type="partitionFieldEnum" minOccurs="0"/>
          <xs:element name="partitionRange" type="xs:string" minOccurs="0"/>
          <xs:element name="unifiedField" type="unifiedFieldEnum" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="server">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="ipAddress" type="xs:string" minOccurs="0"/>
          <xs:element name="utilityPort" type="xs:int"/>
          <xs:element name="serverType" type="serverType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverType">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="alias" type="xs:string" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="dataSourceConfig">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="type" type="xs:string" minOccurs="0"/>
          <xs:element name="connURL" type="xs:string" minOccurs="0"/>
          <xs:element name="username" type="xs:string" minOccurs="0"/>
          <xs:element name="password" type="xs:string" minOccurs="0"/>
          <xs:element name="minPoolSize" type="xs:int"/>
          <xs:element name="maxPoolsize" type="xs:int"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="agent">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="agentType" type="agentType" minOccurs="0"/>
          <xs:element name="executionInterval" type="xs:long"/>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="initialDelay" type="xs:int"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="agentType">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="type" type="xs:string" minOccurs="0"/>
          <xs:element name="alias" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="agentFullClassName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fileRenameAgent">
    <xs:complexContent>
      <xs:extension base="agent">
        <xs:sequence>
          <xs:element name="serviceList" type="serviceFileRenameConfig" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serviceFileRenameConfig">
    <xs:sequence>
      <xs:element name="charRenameOpList" type="charRenameOperation" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="destinationPath" type="xs:string" minOccurs="0"/>
      <xs:element name="extAfterRename" type="xs:string" minOccurs="0"/>
      <xs:element name="fileExtensitonList" type="xs:string" minOccurs="0"/>
      <xs:element name="id" type="xs:int"/>
      <xs:element name="service" type="service" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="packetStatisticsAgent">
    <xs:complexContent>
      <xs:extension base="agent">
        <xs:sequence>
          <xs:element name="serviceList" type="servicePacketStatsConfig" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="storageLocation" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="servicePacketStatsConfig">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="enable" type="xs:boolean"/>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="service" type="service" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="logLevelEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALL"/>
      <xs:enumeration value="ERROR"/>
      <xs:enumeration value="INFO"/>
      <xs:enumeration value="DEBUG"/>
      <xs:enumeration value="WARN"/>
      <xs:enumeration value="OFF"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="logRollingTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="VOLUME_BASED"/>
      <xs:enumeration value="TIME_BASED"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="snmpVersionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="V0"/>
      <xs:enumeration value="V1"/>
      <xs:enumeration value="V2"/>
      <xs:enumeration value="V3"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="snmpServerType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Self"/>
      <xs:enumeration value="Listener"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="snmpCommunityType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Public"/>
      <xs:enumeration value="Private"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="snmpAlertTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="SERVER_INSTANCE"/>
      <xs:enumeration value="COLLECTION_SERVICE"/>
      <xs:enumeration value="DATA_CONSOLIDATION_SERVICE"/>
      <xs:enumeration value="DISTRIBUTION_SERVICE"/>
      <xs:enumeration value="GTPPRIME_COLLECTION_SERVICE"/>
      <xs:enumeration value="IPLOG_PARSING_SERVICE"/>
      <xs:enumeration value="NATFLOWBINARY_COLLECTION_SERVICE"/>
      <xs:enumeration value="NATFLOW_COLLECTION_SERVICE"/>
      <xs:enumeration value="PARSING_SERVICE"/>
      <xs:enumeration value="PROCESSING_SERVICE"/>
      <xs:enumeration value="RADIUS_COLLECTION_SERVICE"/>
      <xs:enumeration value="SYSLOG_COLLECTION_SERVICE"/>
      <xs:enumeration value="GENERIC"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="stateEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ACTIVE"/>
      <xs:enumeration value="INACTIVE"/>
      <xs:enumeration value="DELETED"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="serviceTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="MAIN"/>
      <xs:enumeration value="ADDITIONAL"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="serviceCategoryEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ONLINE"/>
      <xs:enumeration value="OFFLINE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="startUpModeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Automatic"/>
      <xs:enumeration value="Manual"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="driverCategory">
    <xs:restriction base="xs:string">
      <xs:enumeration value="COLLECTION"/>
      <xs:enumeration value="DISTRIBUTION"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="dataTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="INTEGER"/>
      <xs:enumeration value="STRING"/>
      <xs:enumeration value="DATE"/>
      <xs:enumeration value="IP"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="positionEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="left"/>
      <xs:enumeration value="right"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="asn1ATTRTYPE">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ATTRIBUTE"/>
      <xs:enumeration value="HEADER"/>
      <xs:enumeration value="TRAILER"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="charSetEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UTF8"/>
      <xs:enumeration value="UTF16"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="fileHeaderFooterTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="STANDARD"/>
      <xs:enumeration value="BAF"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="sourceFieldDataFormatEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="HexToDecimal"/>
      <xs:enumeration value="HexTOIp"/>
      <xs:enumeration value="Tbcd"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="fileTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="KEY_VALUE_RECORD"/>
      <xs:enumeration value="FILE_HEADER_FOOTER"/>
      <xs:enumeration value="RECORD_HEADER"/>
      <xs:enumeration value="DELIMITER"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="fileGroupEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DAY"/>
      <xs:enumeration value="MONTH"/>
      <xs:enumeration value="YEAR"/>
      <xs:enumeration value="NA"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="fileTransferModeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="BINARY"/>
      <xs:enumeration value="ASCII"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="rollingTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="TIME_BASED"/>
      <xs:enumeration value="VOLUME_BASED"/>
      <xs:enumeration value="BOTH"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="unifiedFieldEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="APartyLocationCode"/>
      <xs:enumeration value="APartyMDN"/>
      <xs:enumeration value="APartyMIN"/>
      <xs:enumeration value="BPartyLocationCode"/>
      <xs:enumeration value="BPartyMDN"/>
      <xs:enumeration value="BPartyMIN"/>
      <xs:enumeration value="CPartyLocationCode"/>
      <xs:enumeration value="CPartyMDN"/>
      <xs:enumeration value="CPartyMIN"/>
      <xs:enumeration value="CallDirection"/>
      <xs:enumeration value="DistanceBand"/>
      <xs:enumeration value="Duration"/>
      <xs:enumeration value="EgressCallDirection"/>
      <xs:enumeration value="EgressEndDate"/>
      <xs:enumeration value="EgressStartDate"/>
      <xs:enumeration value="EgressTrunkGroupName"/>
      <xs:enumeration value="EndDate"/>
      <xs:enumeration value="EventSubType"/>
      <xs:enumeration value="EventType"/>
      <xs:enumeration value="General1"/>
      <xs:enumeration value="General10"/>
      <xs:enumeration value="General11"/>
      <xs:enumeration value="General12"/>
      <xs:enumeration value="General13"/>
      <xs:enumeration value="General14"/>
      <xs:enumeration value="General15"/>
      <xs:enumeration value="General16"/>
      <xs:enumeration value="General17"/>
      <xs:enumeration value="General18"/>
      <xs:enumeration value="General19"/>
      <xs:enumeration value="General2"/>
      <xs:enumeration value="General20"/>
      <xs:enumeration value="General21"/>
      <xs:enumeration value="General22"/>
      <xs:enumeration value="General23"/>
      <xs:enumeration value="General24"/>
      <xs:enumeration value="General25"/>
      <xs:enumeration value="General26"/>
      <xs:enumeration value="General27"/>
      <xs:enumeration value="General28"/>
      <xs:enumeration value="General29"/>
      <xs:enumeration value="General3"/>
      <xs:enumeration value="General31"/>
      <xs:enumeration value="General32"/>
      <xs:enumeration value="General33"/>
      <xs:enumeration value="General34"/>
      <xs:enumeration value="General35"/>
      <xs:enumeration value="General36"/>
      <xs:enumeration value="General37"/>
      <xs:enumeration value="General38"/>
      <xs:enumeration value="General39"/>
      <xs:enumeration value="General4"/>
      <xs:enumeration value="General40"/>
      <xs:enumeration value="General41"/>
      <xs:enumeration value="General42"/>
      <xs:enumeration value="General43"/>
      <xs:enumeration value="General44"/>
      <xs:enumeration value="General45"/>
      <xs:enumeration value="General46"/>
      <xs:enumeration value="General47"/>
      <xs:enumeration value="General48"/>
      <xs:enumeration value="General49"/>
      <xs:enumeration value="General5"/>
      <xs:enumeration value="General50"/>
      <xs:enumeration value="General51"/>
      <xs:enumeration value="General52"/>
      <xs:enumeration value="General53"/>
      <xs:enumeration value="General54"/>
      <xs:enumeration value="General55"/>
      <xs:enumeration value="General56"/>
      <xs:enumeration value="General57"/>
      <xs:enumeration value="General58"/>
      <xs:enumeration value="General59"/>
      <xs:enumeration value="General6"/>
      <xs:enumeration value="General60"/>
      <xs:enumeration value="General61"/>
      <xs:enumeration value="General62"/>
      <xs:enumeration value="General63"/>
      <xs:enumeration value="General64"/>
      <xs:enumeration value="General65"/>
      <xs:enumeration value="General66"/>
      <xs:enumeration value="General67"/>
      <xs:enumeration value="General68"/>
      <xs:enumeration value="General69"/>
      <xs:enumeration value="General7"/>
      <xs:enumeration value="General70"/>
      <xs:enumeration value="General71"/>
      <xs:enumeration value="General72"/>
      <xs:enumeration value="General73"/>
      <xs:enumeration value="General74"/>
      <xs:enumeration value="General75"/>
      <xs:enumeration value="General76"/>
      <xs:enumeration value="General77"/>
      <xs:enumeration value="General78"/>
      <xs:enumeration value="General79"/>
      <xs:enumeration value="General8"/>
      <xs:enumeration value="General80"/>
      <xs:enumeration value="General9"/>
      <xs:enumeration value="IngressCallDirection"/>
      <xs:enumeration value="IngressEndDate"/>
      <xs:enumeration value="IngressStartDate"/>
      <xs:enumeration value="IngressTrunkGroupName"/>
      <xs:enumeration value="OnNetCode"/>
      <xs:enumeration value="OriginalRecordNumber"/>
      <xs:enumeration value="PartnerId1"/>
      <xs:enumeration value="PartnerId2"/>
      <xs:enumeration value="RatingStream"/>
      <xs:enumeration value="RecordNumber"/>
      <xs:enumeration value="SourceUnitName"/>
      <xs:enumeration value="StartDate"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="cdrFileDateTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="MAXIMUM"/>
      <xs:enumeration value="MINIMUM"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="cdrDateSummaryTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DAY"/>
      <xs:enumeration value="HOUR"/>
      <xs:enumeration value="MINUTE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="timeUnitEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DAY"/>
      <xs:enumeration value="HOUR"/>
      <xs:enumeration value="MINUTE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="duplicateRecordPolicyTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ACROSS_FILE"/>
      <xs:enumeration value="IN_FILE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="filterGroupTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="PolicyRulewise"/>
      <xs:enumeration value="PolicyGroupwise"/>
      <xs:enumeration value="NA"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="hashDataTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NAT_DATA_RECORD"/>
      <xs:enumeration value="USAGE_DATA_RECORD"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="partitionFieldEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Date"/>
      <xs:enumeration value="PRIVATE_IP"/>
      <xs:enumeration value="PUBLIC_IP"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>

