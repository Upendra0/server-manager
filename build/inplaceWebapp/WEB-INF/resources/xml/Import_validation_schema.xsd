<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<xs:element name="aggregationService" type="aggregationService" />

	<xs:element name="asn1ParserMapping" type="asn1ParserMapping" />

    <xs:element name="rapParserMapping" type="rapParserMapping" />

    <xs:element name="tapParserMapping" type="tapParserMapping" />

    <xs:element name="nrtrdeParserMapping" type="nrtrdeParserMapping" />

	<xs:element name="auditActivity" type="auditActivity" />

	<xs:element name="auditEntity" type="auditEntity" />

	<xs:element name="auditSubEntity" type="auditSubEntity" />

	<xs:element name="collectionService" type="collectionService" />

	<xs:element name="correlationService" type="correlationService" />

	<xs:element name="dataConsolidationService" type="dataConsolidationService" />

	<xs:element name="distributionService" type="distributionService" />

	<xs:element name="processingService" type="processingService" />

	<xs:element name="field" type="natFlowDictionaryAttribute" />

	<xs:element name="ipLogParsingService" type="ipLogParsingService" />
	
	<xs:element name="diameterCollectionService" type="diameterCollectionService" />
	
	<xs:element name="diameterPeer" type="diameterPeer" />
	
	<xs:element name="diameterAVP" type="diameterAVP" />
	
	<xs:element name="netflowBinaryCollectionService" type="netflowBinaryCollectionService" />

	<xs:element name="netflowClient" type="netflowClient" />

	<xs:element name="netflowCollectionService" type="netflowCollectionService" />

	<xs:element name="parser" type="parser" />

	<xs:element name="parsingService" type="parsingService" />

	<xs:element name="radiusCollectionService" type="radiusCollectionService" />

	<xs:element name="server" type="server" />

	<xs:element name="serverInstance" type="serverInstance" />
	
	<xs:element name="kafkaDataSourceObjectWrapper" type="kafkaDataSourceObjectWrapper" />

	<xs:element name="snmpAlert" type="snmpAlert" />

	<xs:element name="snmpAlertCustomObjectWrapper" type="snmpAlertCustomObjectWrapper" />

	<xs:element name="snmpAlertWrapper" type="snmpAlertWrapper" />

	<xs:element name="snmpServerConfig" type="snmpServerConfig" />

	<xs:element name="sysLogCollectionService" type="sysLogCollectionService" />

	<xs:element name="mqttCollectionService" type="mqttCollectionService" />
	
	<xs:element name="coAPCollectionService" type="coAPCollectionService" />

	<xs:element name="gtpPrimeCollectionService" type="gtpPrimeCollectionService" />
	
	<xs:element name="http2CollectionService" type="http2CollectionService" />
	
	<xs:element name="systemAudit" type="systemAudit" />

	<xs:element name="systemAuditDetails" type="systemAuditDetails" />

	<xs:element name="policy" type="policy" />

	<xs:element name="policyAction" type="policyAction" />

	<xs:element name="policyCondition" type="policyCondition" />

	<xs:element name="policyGroup" type="policyGroup" />

	<xs:element name="policyGroupRel" type="policyGroupRel" />

	<xs:element name="policyGroupRuleRel" type="policyGroupRuleRel" />

	<xs:element name="policyRule" type="policyRule" />

  <xs:complexType name="sysLogCollectionService">
    <xs:complexContent>
      <xs:extension base="netflowBinaryCollectionService">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="mqttCollectionService">
    <xs:complexContent>
      <xs:extension base="netflowBinaryCollectionService">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
   <xs:complexType name="coAPCollectionService">
    <xs:complexContent>
      <xs:extension base="netflowBinaryCollectionService">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
    <xs:complexType name="gtpPrimeCollectionService">
    <xs:complexContent>
      <xs:extension base="netflowBinaryCollectionService">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="http2CollectionService">
    <xs:complexContent>
      <xs:extension base="netflowBinaryCollectionService">
        <xs:sequence>
        	<xs:element name="secureScheme" type="secureSchemeTypeEnum" minOccurs="0"/>
        	<xs:element name="encryption" type="xs:boolean" minOccurs="0"/>
        	<xs:element name="keystoreFileName" type="xs:string" minOccurs="0"/>
        	<xs:element name="keystoreFilePath" type="xs:string" minOccurs="0"/>
        	<xs:element name="keystorePassword" type="xs:string" minOccurs="0"/>
        	<xs:element name="keymanagerPassword" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="netflowBinaryCollectionService">
    <xs:complexContent>
      <xs:extension base="collectionService">
        <xs:sequence>
          <xs:element name="serverIp" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="serverPort" type="xs:int" minOccurs="0"/>
          <xs:element name="netFlowPort" type="xs:int" minOccurs="0"/>
          <xs:element name="sktRcvBufferSize" type="xs:long" minOccurs="0"/>
          <xs:element name="sktSendBufferSize" type="xs:long" minOccurs="0"/>
          <xs:element name="newLineCharAvailable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="bulkWriteLimit" type="xs:int" minOccurs="0"/>
          <xs:element name="maxPktSize" type="xs:long" minOccurs="0"/>
          <xs:element name="maxWriteBufferSize" type="xs:long" minOccurs="0"/>
          <xs:element name="isTCPProtocol" type="xs:boolean" minOccurs="0"/>
          <xs:element name="parallelFileWriteCount" type="xs:int" minOccurs="0"/>
          <xs:element name="snmpAlertEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="snmpTimeInterval" type="xs:int" minOccurs="0"/>
          <xs:element name="maxIdelCommuTime" type="xs:int" minOccurs="0"/>
          <xs:element name="redirectionIP" type="xs:string" minOccurs="0"/>
          <xs:element name="maxReadRate" type="xs:int" minOccurs="0"/>	        
           <xs:element name="receiverBufferSize" type="xs:long" minOccurs="0"/>
          <xs:element name="connectAttemptsMax" type="xs:int" minOccurs="0"/>
          <xs:element name="reconnectAttemptsMax" type="xs:int" minOccurs="0"/>
          <xs:element name="reconnectDelay" type="xs:int" minOccurs="0"/>                   
          <xs:element name="netFLowClientList" type="netflowClient" minOccurs="0" maxOccurs="unbounded"/>          
          <xs:element name="natFlowProxyClients" type="natFlowProxyClient" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="proxyClientEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="proxyServicePort" type="xs:int" minOccurs="0"/>
          <xs:element name="packetThreshold" type="xs:int" minOccurs="0"/>
          <xs:element name="bitThreshold" type="xs:int" minOccurs="0"/>     
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="diameterCollectionService">
    <xs:complexContent>
      <xs:extension base="collectionService">
        <xs:sequence>
          <xs:element name="stackIp" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="stackPort" type="xs:int" minOccurs="0" />
          <xs:element name="stackIdentity" type="xs:string" minOccurs="0"/>
          <xs:element name="stackRealm" type="xs:string" minOccurs="0"/>
          <xs:element name="sessionCleanupInterval" type="xs:int" minOccurs="0"/>
          <xs:element name="sessionTimeout" type="xs:int" minOccurs="0"/>
          <xs:element name="actionOnOverload" type="xs:string" minOccurs="0"/>
          <xs:element name="resultCodeOnOverload" type="xs:int" minOccurs="0"/>
          <xs:element name="duplicateRequestCheck" type="xs:boolean" minOccurs="0"/>
          <xs:element name="duplicatePurgeInterval" type="xs:int" minOccurs="0"/>
          <xs:element name="fieldSeparator" type="xs:string" minOccurs="0"/>
          <xs:element name="keyValueSeparator" type="xs:string" minOccurs="0"/>
          <xs:element name="groupFieldSeparator" type="xs:string" minOccurs="0"/>
          <xs:element name="diameterPeerList" type="diameterPeer" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="diameterPeer">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="identity" type="xs:string" minOccurs="0"/>
          <xs:element name="realmName" type="xs:string" minOccurs="0"/>
          <xs:element name="watchDogInterval" type="xs:int" minOccurs="0"/>
          <xs:element name="requestTimeOut" type="xs:int" minOccurs="0"/>
          <xs:element name="fileNameFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="outFileLocation" type="xs:string" minOccurs="0"/>
          <xs:element name="fileSeqEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="appendFilePaddingInFileName" type="xs:boolean" minOccurs="0"/>
          <xs:element name="minFileSeq" type="xs:int" minOccurs="0"/>
          <xs:element name="maxFileSeq" type="xs:int" minOccurs="0"/>
          <xs:element name="logRollingUnitVol" type="xs:int" minOccurs="0"/>
          <xs:element name="logRollingUnitTime" type="xs:int" minOccurs="0"/>
          <xs:element name="inputCompressed" type="xs:boolean" minOccurs="0"/>
          <xs:element name="diameterAVPs" type="diameterAVP" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="diameterAVP">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0" />
          <xs:element name="vendorId" type="xs:int" minOccurs="0" />
          <xs:element name="attributeId" type="xs:int" minOccurs="0" />
          <xs:element name="value" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="collectionService">
    <xs:complexContent>
      <xs:extension base="service">
        <xs:sequence>
          <xs:element name="serviceSchedulingParams" type="serviceSchedulingParams" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="service">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="servInstanceId" type="xs:string" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="syncStatus" type="xs:boolean" minOccurs="0"/>
          <xs:element name="enableFileStats" type="xs:boolean" minOccurs="0"/>
          <xs:element name="enableDBStats" type="xs:boolean" minOccurs="0"/>
          <xs:element name="fileCDRSummaryFlag" type="xs:boolean" minOccurs="0"/>
          <xs:element name="svctype" type="serviceType" minOccurs="0"/>
          <xs:element name="svcExecParams" type="serviceExecutionParams" minOccurs="0"/>
          <xs:element name="myDrivers" type="drivers" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="svcPathList" type="pathList" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="baseModel" abstract="true">
    <xs:complexContent>
      <xs:extension base="toStringProcessor">
        <xs:sequence>
          <xs:element name="createdByStaffId" type="xs:int" minOccurs="0"/>
          <xs:element name="createdDate" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="lastUpdatedByStaffId" type="xs:int" minOccurs="0"/>
          <xs:element name="lastUpdatedDate" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="status" type="stateEnum" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="toStringProcessor" abstract="true">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="netflowClient">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="clientIpAddress" type="xs:string" minOccurs="0"/>
          <xs:element name="clientPort" type="xs:int" minOccurs="0"/>
          <xs:element name="fileNameFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="appendFileSequenceInFileName" type="xs:boolean" minOccurs="0"/>
          <xs:element name="appendFilePaddingInFileName" type="xs:boolean" minOccurs="0"/>
          <xs:element name="minFileSeqValue" type="xs:int" minOccurs="0"/>
          <xs:element name="maxFileSeqValue" type="xs:int" minOccurs="0"/>
          <xs:element name="outFileLocation" type="xs:string" minOccurs="0"/>
          <xs:element name="rollingType" type="rollingTypeEnum" minOccurs="0"/>
          <xs:element name="volLogRollingUnit" type="xs:int" minOccurs="0"/>
          <xs:element name="timeLogRollingUnit" type="xs:int" minOccurs="0"/>
          <xs:element name="inputCompressed" type="xs:boolean" minOccurs="0"/>
          <xs:element name="bkpBinaryfileLocation" type="xs:string" minOccurs="0"/>
          <xs:element name="snmpAlertEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="alertInterval" type="xs:int" minOccurs="0"/>
          <xs:element name="nodeAliveRequest" type="xs:boolean" minOccurs="0"/>
          <xs:element name="echoRequest" type="xs:int" minOccurs="0"/>
          <xs:element name="requestExpiryTime" type="xs:int" minOccurs="0"/>
          <xs:element name="requestRetry" type="xs:int" minOccurs="0"/>
          <xs:element name="redirectionIp" type="xs:string" minOccurs="0"/>
          <xs:element name="requestBufferCount" type="xs:int" minOccurs="0"/>
          <xs:element name="sharedSecretKey" type="xs:string" minOccurs="0"/>
          <xs:element name="topicName" type="xs:string" minOccurs="0"/>
          <xs:element name="resourcesName" type="xs:string" minOccurs="0"/>
          <xs:element name="registerObserver" type="xs:boolean" minOccurs="0"/>
          <xs:element name="observerTimeout" type="xs:int" minOccurs="0"/>
          <xs:element name="requestType" type="requestTypeEnum" minOccurs="0"/>
          <xs:element name="messageType" type="messageTypeEnum" minOccurs="0"/>
          <xs:element name="requestTimeout" type="xs:int" minOccurs="0"/>
          <xs:element name="requestRetryCount" type="xs:int" minOccurs="0"/>
          <xs:element name="reqExecutionInterval" type="xs:int" minOccurs="0"/>
          <xs:element name="reqExecutionFreq" type="xs:int" minOccurs="0"/>
          <xs:element name="exchangeLifeTime" type="xs:long" minOccurs="0"/>
          <xs:element name="enableSecurity" type="xs:boolean" minOccurs="0"/>
          <xs:element name="securityType" type="securityTypeEnum" minOccurs="0"/>
          <xs:element name="securityIdentity" type="xs:string" minOccurs="0"/>
          <xs:element name="securityKey" type="xs:string" minOccurs="0"/>
          <xs:element name="secCerLocation" type="xs:string" minOccurs="0"/>
          <xs:element name="secCerPasswd" type="xs:string" minOccurs="0"/>
          <xs:element name="enableProxy" type="xs:boolean" minOccurs="0"/>
          <xs:element name="proxySchema" type="proxySchemaTypeEnum" minOccurs="0"/>
          <xs:element name="proxyResources" type="xs:string" minOccurs="0"/>
          <xs:element name="proxyServerIp" type="xs:string" minOccurs="0"/>
          <xs:element name="proxyServerPort" type="xs:int" minOccurs="0"/>
          <xs:element name="jsonValidate" type="xs:boolean" minOccurs="0"/>
          <xs:element name="contentType" type="xs:string" minOccurs="0"/>
          <xs:element name="uri" type="xs:string" minOccurs="0"/>
          <xs:element name="enableKafka" type="xs:boolean" minOccurs="0"/>
          <xs:element name="kafkaDataSourceConfig" type="kafkaDataSourceConfig" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="natFlowProxyClient">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="proxyIp" type="xs:string" minOccurs="0"/>
          <xs:element name="proxyPort" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serviceSchedulingParams">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="schedulingEnabled" type="xs:boolean" minOccurs="0"/>
          <xs:element name="schType" type="xs:string" minOccurs="0"/>
          <xs:element name="date" type="xs:string" minOccurs="0"/>
          <xs:element name="day" type="xs:string" minOccurs="0"/>
          <xs:element name="time" type="xs:string" nillable="true" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serviceType">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="alias" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="type" type="xs:string" minOccurs="0"/>
          <xs:element name="serviceFullClassName" type="xs:string" minOccurs="0"/>
          <xs:element name="typeOfService" type="serviceTypeEnum" minOccurs="0"/>
          <xs:element name="serviceCategory" type="serviceCategoryEnum" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serviceExecutionParams">
    <xs:sequence>
      <xs:element name="executeOnStartup" type="xs:boolean" minOccurs="0"/>
      <xs:element name="executionInterval" type="xs:int" minOccurs="0"/>
      <xs:element name="fileBatchSize" type="xs:int" minOccurs="0"/>
      <xs:element name="maxThread" type="xs:int" minOccurs="0"/>
      <xs:element name="minThread" type="xs:int" minOccurs="0"/>
      <xs:element name="queueSize" type="xs:int" minOccurs="0"/>
      <xs:element name="sortingCriteria" type="xs:string" minOccurs="0"/>
      <xs:element name="sortingType" type="xs:string" minOccurs="0"/>
      <xs:element name="startupMode" type="startUpModeEnum" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="drivers">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="timeout" type="xs:int" minOccurs="0"/>
          <xs:element name="applicationOrder" type="xs:int" minOccurs="0"/>
          <xs:element name="maxRetrycount" type="xs:int" minOccurs="0"/>
          <xs:element name="fileSeqOrder" type="xs:boolean" minOccurs="0"/>
          <xs:element name="minFileRange" type="xs:int" minOccurs="0"/>
          <xs:element name="maxFileRange" type="xs:int" minOccurs="0"/>
          <xs:element name="driverType" type="driverType" minOccurs="0"/>
          <xs:element name="driverPathList" type="pathList" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="noFileAlert" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="driverType">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int"  minOccurs="0"/>
          <xs:element name="alias" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="type" type="xs:string" minOccurs="0"/>
          <xs:element name="driverFullClassName" type="xs:string" minOccurs="0"/>
          <xs:element name="category" type="driverCategory" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pathList">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="pathId" type="xs:string" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="readFilePath" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="collectionDriverPathList">
    <xs:complexContent>
      <xs:extension base="commonPathList">
        <xs:sequence>
          <xs:element name="maxFilesCountAlert" type="xs:int" minOccurs="0"/>
          <xs:element name="remoteFileAction" type="xs:string" minOccurs="0"/>
          <xs:element name="remoteFileActionParamName" type="xs:string" minOccurs="0"/>
          <xs:element name="remoteFileActionValue" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="remoteFileActionParamNameTwo" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="remoteFileActionValueTwo" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="fileGrepDateEnabled" type="xs:boolean" minOccurs="0"/>
          <xs:element name="dateFormat" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="position" type="xs:string" minOccurs="0"/>
          <xs:element name="startIndex" type="xs:int" minOccurs="0"/>
          <xs:element name="endIndex" type="xs:int" minOccurs="0"/>
          <xs:element name="fileSeqAlertEnabled" type="xs:boolean" minOccurs="0"/>
          <xs:element name="seqStartIndex" type="xs:int" minOccurs="0"/>
          <xs:element name="seqEndIndex" type="xs:int" minOccurs="0"/>
          <!-- 
          <xs:element name="minValue" type="xs:int"/>
          <xs:element name="maxValue" type="xs:int"/> -->
          <!-- <xs:element name="maxCounterLimit" type="xs:int"/> -->
          <xs:element name="referenceDevice" type="xs:string" minOccurs="0"/>
          <xs:element name="parentDevice" type="device" minOccurs="0"/>
          <xs:element name="duplicateCheckParamName" type="xs:string" minOccurs="0"/>
          <xs:element name="duplicateFileSuffix" type="xs:boolean" minOccurs="0"/>
          <xs:element name="timeInterval" type="xs:int" minOccurs="0"/>
          <xs:element name="missingFileSequenceId" type="fileSequenceMgmt" minOccurs="0"/>
          <xs:element name="fileSizeCheckEnabled" type="xs:boolean" minOccurs="0"/>
          <xs:element name="fileSizeCheckMinValue" type="xs:int" minOccurs="0"/>
          <xs:element name="fileSizeCheckMaxValue" type="xs:int" minOccurs="0"/>
          <xs:element name="validFileTimeInterval" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="fileSequenceMgmt">
  <xs:complexContent>
      <xs:extension base="baseModel">
  	<xs:sequence>
  		 <xs:element name="id" type="xs:int" minOccurs="0"/>
  		 <xs:element name="elementType" type="xs:string" minOccurs="0"/>
  		 <xs:element name="referenceDevice" type="xs:string" minOccurs="0"/>
  		 <xs:element name="minValue" type="xs:int" minOccurs="0"/>
  		 <xs:element name="maxValue" type="xs:int" minOccurs="0"/>
  		 <xs:element name="resetFrequency" type="xs:string" minOccurs="0"/>
  		 <xs:element name="missingFileStartIndex" type="xs:int" minOccurs="0"/>
  		 <xs:element name="missingFileEndIndex" type="xs:int" minOccurs="0"/>
  	</xs:sequence>
  	</xs:extension>
  	</xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="commonPathList">
    <xs:complexContent>
      <xs:extension base="pathList">
        <xs:sequence>
          <xs:element name="charRenameOperationList" type="charRenameOperation" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="compressInFileEnabled" type="xs:boolean" minOccurs="0"/>
          <xs:element name="compressOutFileEnabled" type="xs:boolean" minOccurs="0"/>
          <xs:element name="readFilenamePrefix" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="readFilenameSuffix" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="readFilenameContains" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="readFilenameExcludeTypes" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="writeFilePath" type="xs:string" minOccurs="0"/>
          <xs:element name="writeFilenamePrefix" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="fileNamePattern" type="xs:string" nillable="true" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="distributionDriverPathList">
    <xs:complexContent>
      <xs:extension base="commonPathList">
        <xs:sequence>
          <xs:element name="composerWrappers" type="composer" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="dateFormat" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="dbReadFileNameExtraSuffix" type="xs:string" nillable="true" minOccurs="0"/>          
          <xs:element name="endIndex" type="xs:int" nillable="true" minOccurs="0"/>
          <xs:element name="fileGrepDateEnabled" type="xs:boolean" nillable="true" minOccurs="0"/>
          <xs:element name="maxFilesCountAlert" type="xs:int" minOccurs="0"/>
          <xs:element name="parentDevice" type="device" minOccurs="0"/>
          <xs:element name="position" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="startIndex" type="xs:int" nillable="true" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="composer">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="composerType" type="pluginTypeMaster" minOccurs="0"/>
          <xs:element name="writeFilenamePrefix" type="xs:string" minOccurs="0"/>
          <xs:element name="writeFilenameSuffix" type="xs:string" minOccurs="0"/>
          <xs:element name="fileExtension" type="xs:string" minOccurs="0"/>
          <xs:element name="defaultFileExtensionRemoveEnabled" type="xs:boolean" minOccurs="0"/>
          <xs:element name="fileSplitEnabled" type="xs:boolean" minOccurs="0"/>
          <xs:element name="destPath" type="xs:string" minOccurs="0"/>
          <xs:element name="fileBackupPath" type="xs:string" minOccurs="0"/>
          <xs:element name="composerMapping" type="composerMapping" minOccurs="0"/>
          <xs:element name="charRenameOperationList" type="charRenameOperation" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pluginTypeMaster">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="alias" type="xs:string" minOccurs="0"/>
          <xs:element name="category" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="pluginFullClassName" type="xs:string" minOccurs="0"/>
          <xs:element name="type" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="composerMapping">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="attributeList" type="composerAttribute" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="composerType" type="pluginTypeMaster" minOccurs="0"/>
          <xs:element name="dateFormatEnum" type="xs:string" minOccurs="0"/>
          <xs:element name="destCharset" type="charSetEnum" minOccurs="0"/>
          <xs:element name="destDateFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="destFileExt" type="xs:string" minOccurs="0"/>
          <xs:element name="device" type="device" minOccurs="0"/>
          <xs:element name="groupAttributeList" type="composerGroupAttribute" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="mappingType" type="xs:int" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="composerAttribute">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="associatedByGroup" type="xs:boolean"  minOccurs="0"/>
          <xs:element name="dataType" type="dataTypeEnum" minOccurs="0"/>
          <xs:element name="dateFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="defualtValue" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="destinationField" type="xs:string" minOccurs="0"/>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="sequenceNumber" type="xs:int" minOccurs="0"/>
          <xs:element name="trimPosition" type="xs:string" minOccurs="0"/>
          <xs:element name="trimchars" type="xs:string" minOccurs="0"/>
          <xs:element name="unifiedField" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="composerGroupAttribute">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
        <xs:element name="associatedByGroup" type="xs:boolean"  minOccurs="0"/>
        <xs:element name="attributeList" type="composerAttribute" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="groupAttributeList" type="composerGroupAttribute" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="id" type="xs:int" minOccurs="0"/>
        <xs:element name="name" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="asciiComposerAttr">
    <xs:complexContent>
      <xs:extension base="composerAttribute">
        <xs:sequence>
          <xs:element name="length" type="xs:int" minOccurs="0"/>
          <xs:element name="paddingChar" type="xs:string" minOccurs="0"/>
          <xs:element name="paddingEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="paddingType" type="positionEnum" minOccurs="0"/>
          <xs:element name="prefix" type="xs:string" minOccurs="0"/>
          <xs:element name="replaceConditionList" type="xs:string" minOccurs="0"/>
          <xs:element name="suffix" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="asn1ComposerAttribute">
    <xs:complexContent>
      <xs:extension base="composerAttribute">
        <xs:sequence>
          <xs:element name="argumentDataType" type="xs:string" minOccurs="0"/>          
          <xs:element name="attrType" type="asn1ATTRTYPE" minOccurs="0"/>
          <xs:element name="childAttributes" type="xs:string" minOccurs="0"/>
          <xs:element name="choiceId" type="xs:string" minOccurs="0"/>
          <xs:element name="destFieldDataFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="asn1DataType" type="xs:string" minOccurs="0"/>          
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="tapComposerAttribute">
    <xs:complexContent>
      <xs:extension base="composerAttribute">
        <xs:sequence>
          <xs:element name="argumentDataType" type="xs:string" minOccurs="0"/>
          <xs:element name="asn1DataType" type="xs:string" minOccurs="0"/>
          <xs:element name="attrType" type="asn1ATTRTYPE" minOccurs="0"/>
          <xs:element name="childAttributes" type="xs:string" minOccurs="0"/>
          <xs:element name="choiceId" type="xs:string" minOccurs="0"/>
          <xs:element name="cloneRecordEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="composeFromJsonEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="destFieldDataFormat" type="xs:string" minOccurs="0"/>          
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="rapComposerAttribute">
    <xs:complexContent>
      <xs:extension base="composerAttribute">
        <xs:sequence>
          <xs:element name="argumentDataType" type="xs:string" minOccurs="0"/>
          <xs:element name="asn1DataType" type="xs:string" minOccurs="0"/>
          <xs:element name="attrType" type="asn1ATTRTYPE" minOccurs="0"/>
          <xs:element name="childAttributes" type="xs:string" minOccurs="0"/>
          <xs:element name="choiceId" type="xs:string" minOccurs="0"/>
          <xs:element name="cloneRecordEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="composeFromJsonEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="destFieldDataFormat" type="xs:string" minOccurs="0"/>          
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="nrtrdeComposerAttribute">
    <xs:complexContent>
      <xs:extension base="composerAttribute">
        <xs:sequence>
          <xs:element name="argumentDataType" type="xs:string" minOccurs="0"/>
          <xs:element name="asn1DataType" type="xs:string" minOccurs="0"/>
          <xs:element name="attrType" type="asn1ATTRTYPE" minOccurs="0"/>
          <xs:element name="childAttributes" type="xs:string" minOccurs="0"/>
          <xs:element name="choiceId" type="xs:string" minOccurs="0"/>
          <xs:element name="cloneRecordEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="composeFromJsonEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="destFieldDataFormat" type="xs:string" minOccurs="0"/>          
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fixedLengthASCIIComposerAttribute">
    <xs:complexContent>
      <xs:extension base="composerAttribute">
		 <xs:sequence>
          <xs:element name="fixedLength" type="xs:int" minOccurs="0"/>
          <xs:element name="fixedLengthDateFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="paddingChar" type="xs:string" minOccurs="0"/>
          <xs:element name="paddingType" type="xs:string" minOccurs="0"/>
          <xs:element name="prefix" type="xs:string" minOccurs="0"/>
          <xs:element name="suffix" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="xmlComposerAttribute">
    <xs:complexContent>
      <xs:extension base="composerAttribute">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="device">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="decodeType" type="xs:string" minOccurs="0"/>
          <xs:element name="isPreConfigured" type="xs:int" minOccurs="0"/>
          <xs:element name="deviceType" type="deviceType" minOccurs="0"/>
          <xs:element name="vendorType" type="vendorType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="circle">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>         
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="deviceType">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="vendorType">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="asciiComposerMapping">
    <xs:complexContent>
      <xs:extension base="composerMapping">
        <xs:sequence>
          <xs:element name="fieldSeparator" type="xs:string" minOccurs="0"/>
          <xs:element name="fieldSeparatorEnum" type="xs:string" minOccurs="0"/>
           <xs:element name="fileFooterEnable" type="xs:boolean" minOccurs="0"/>
           <xs:element name="fileFooterSummary" type="xs:string" minOccurs="0"/>
           <xs:element name="fileFooterSummaryEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="fileHeaderContainsFields" type="xs:boolean" minOccurs="0"/>
          <xs:element name="fileHeaderEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="fileHeaderParser" type="fileHeaderFooterTypeEnum" minOccurs="0"/>
          <xs:element name="fileHeaderSummary" type="xs:string" minOccurs="0"/>
           <xs:element name="fileHeaderSummaryEnable" type="xs:boolean" minOccurs="0"/>
         
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="defaultComposerMapping">
    <xs:complexContent>
      <xs:extension base="composerMapping">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="asn1ComposerMapping">
    <xs:complexContent>
      <xs:extension base="composerMapping">
        <xs:sequence>
          <xs:element name="multiContainerDelimiter" type="xs:string" minOccurs="0" />
          <xs:element name="recMainAttribute" type="xs:string" minOccurs="0"/>
          <xs:element name="startFormat" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="tapComposerMapping">
    <xs:complexContent>
      <xs:extension base="composerMapping">
        <xs:sequence>
          <xs:element name="composeAsSingleRecordEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="multiContainerDelimiter" type="xs:string" minOccurs="0" />
          <xs:element name="recMainAttribute" type="xs:string" minOccurs="0"/>
          <xs:element name="startFormat" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="rapComposerMapping">
    <xs:complexContent>
      <xs:extension base="composerMapping">
        <xs:sequence>
          <xs:element name="composeAsSingleRecordEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="multiContainerDelimiter" type="xs:string" minOccurs="0" />
          <xs:element name="recMainAttribute" type="xs:string" minOccurs="0"/>
          <xs:element name="startFormat" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="nrtrdeComposerMapping">
    <xs:complexContent>
      <xs:extension base="composerMapping">
        <xs:sequence>
          <xs:element name="composeAsSingleRecordEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="multiContainerDelimiter" type="xs:string" minOccurs="0" />
          <xs:element name="recMainAttribute" type="xs:string" minOccurs="0"/>
          <xs:element name="startFormat" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="detailLocalComposerMapping">
    <xs:complexContent>
      <xs:extension base="composerMapping">
        <xs:sequence>
          <xs:element name="headerAttributeDateFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="keyValueSeparator" type="xs:string" minOccurs="0"/>
          <xs:element name="srcCharset" type="charSetEnum" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fixedLengthASCIIComposerMapping">
    <xs:complexContent>
      <xs:extension base="asciiComposerMapping">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
   <xs:complexType name="xmlComposerMapping">
    <xs:complexContent>
      <xs:extension base="composerMapping">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="charRenameOperation">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="sequenceNo" type="xs:int" minOccurs="0"/>
          <xs:element name="query" type="xs:string" minOccurs="0"/>
          <xs:element name="position" type="xs:string" minOccurs="0"/>
          <xs:element name="startIndex" type="xs:int" minOccurs="0"/>
          <xs:element name="endIndex" type="xs:int" minOccurs="0"/>
          <xs:element name="paddingType" type="xs:string" minOccurs="0"/>
          <xs:element name="defaultValue" type="xs:string" minOccurs="0"/>
          <xs:element name="length" type="xs:int" minOccurs="0"/>
          <xs:element name="paddingValue" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="dateFormat" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="srcDateFormat" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="dateType" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="cacheEnable" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="processingPathList">
    <xs:complexContent>
      <xs:extension base="commonPathList">
        <xs:sequence>
        	<xs:element name="maxFilesCountAlert" type="xs:int" minOccurs="0"/>
        	<xs:element name="policyAlias" type="xs:string" minOccurs="0"/>
        	<xs:element name="fileGrepDateEnabled" type="xs:boolean" minOccurs="0"/>
        	<xs:element name="dateFormat" type="xs:string" nillable="true" minOccurs="0"/>
        	<xs:element name="position" type="xs:string" minOccurs="0"/>
        	<xs:element name="startIndex" type="xs:int" minOccurs="0"/>
        	<xs:element name="endIndex" type="xs:int" minOccurs="0"/>
        	<xs:element name="parentDevice" type="device" minOccurs="0"/>
        	<xs:element name="acrossFileDuplicateCDRCacheLimit" type="xs:int" minOccurs="0"/>
        	<xs:element name="writeCdrHeaderFooterEnabled" type="xs:boolean" minOccurs="0"/>
        	<xs:element name="acrossFileDuplicateDateField" type="xs:string" minOccurs="0"/>
        	<xs:element name="acrossFileDuplicateDateFieldFormat" type="xs:string" minOccurs="0"/>
        	<xs:element name="acrossFileDuplicateDateInterval" type="xs:int" minOccurs="0"/>
        	<xs:element name="acrossFileDuplicateDateIntervalType" type="timeUnitEnum" minOccurs="0"/>
        	<xs:element name="alertDescription" type="xs:string" minOccurs="0" />
        	<xs:element name="alertId" type="xs:string" minOccurs="0"/>
        	<xs:element name="duplicateRecordPolicyEnabled" type="xs:boolean" minOccurs="0"/>
        	<xs:element name="duplicateRecordPolicyType" type="duplicateRecordPolicyTypeEnum" minOccurs="0"/>
        	<xs:element name="unifiedFields" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="dataConsolidationPathList">
    <xs:complexContent>
      <xs:extension base="commonPathList">
        <xs:sequence>
        	<xs:element name="conMappingList" type="consolidationMapping" minOccurs="0" maxOccurs="unbounded"/>
        	<xs:element name="maxCounterLimit" type="xs:int" minOccurs="0"/>
        	<xs:element name="parentDevice" type="device" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="aggregationServicePathList">
    <xs:complexContent>
      <xs:extension base="commonPathList">
        <xs:sequence>
        	<xs:element name="maxFilesCountAlert" type="xs:int" minOccurs="0"/>
        	<xs:element name="fileGrepDateEnabled" type="xs:boolean" minOccurs="0"/>
        	<xs:element name="dateFormat" type="xs:string" minOccurs="0"/>
        	<xs:element name="startIndex" type="xs:int" minOccurs="0"/>
        	<xs:element name="endIndex" type="xs:int" minOccurs="0"/>
        	<xs:element name="position" type="xs:string" minOccurs="0"/>
        	<xs:element name="wPathNonAggregate" type="xs:string" minOccurs="0"/>
        	<xs:element name="wPathAggregateError" type="xs:string" minOccurs="0"/>
        	<xs:element name="oFilePathName" type="xs:string" minOccurs="0"/>
        	<xs:element name="oFileMinRange" type="xs:int" minOccurs="0"/>
        	<xs:element name="oFileMaxRange" type="xs:int" minOccurs="0"/>
        	<xs:element name="oFileSeqEnables" type="xs:boolean" minOccurs="0"/>
        	<xs:element name="oFilePathNameForNonAgg" type="xs:string" minOccurs="0"/>
        	<xs:element name="oFileMinRangeForNonAgg" type="xs:int" minOccurs="0"/>
        	<xs:element name="oFileMaxRangeForNonAgg" type="xs:int" minOccurs="0"/>
        	<xs:element name="oFileSeqEnablesForNonAgg" type="xs:boolean" minOccurs="0"/>
        	<xs:element name="oFilePathNameForError" type="xs:string" minOccurs="0"/>
        	<xs:element name="oFileMinRangeForError" type="xs:int" minOccurs="0"/>
        	<xs:element name="oFileMaxRangeForError" type="xs:int" minOccurs="0"/>
        	<xs:element name="oFileSeqEnablesForError" type="xs:boolean" minOccurs="0"/>
        	<xs:element name="parentDevice" type="device" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
    
  <xs:complexType name="consolidationMapping">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
            <xs:element name="compressedOutput" type="xs:boolean" minOccurs="0"/>
            <xs:element name="conditionList" type="xs:string" minOccurs="0"/>
            <xs:element name="destPath" type="xs:string" minOccurs="0"/>
	      	<xs:element name="fieldNameForCount" type="xs:string" minOccurs="0"/>
	      	<xs:element name="fileName" type="xs:string" minOccurs="0"/>
	      	<xs:element name="fileSequence" type="xs:boolean" minOccurs="0"/>
	      	<xs:element name="id" type="xs:int" minOccurs="0"/>
	      	<xs:element name="logicalOperator" type="xs:string" minOccurs="0"/>
	      	<xs:element name="mappingName" type="xs:string" minOccurs="0"/>
	      	<xs:element name="maxSeqRange" type="xs:int" minOccurs="0"/>
	      	<xs:element name="minSeqRange" type="xs:int" minOccurs="0"/>
	      	<xs:element name="processRecordLimit" type="xs:int" minOccurs="0"/>
	      	<xs:element name="recordSortingField" type="xs:string" minOccurs="0"/>
	      	<xs:element name="recordSortingFieldType" type="xs:string" minOccurs="0"/>
	      	<xs:element name="recordSortingType" type="xs:string" minOccurs="0"/>
	      	<xs:element name="writeOnlyConfiguredAttribute" type="xs:boolean" minOccurs="0"/>
      	</xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  
  <xs:complexType name="dataConsolidation">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
        	<xs:element name="acrossFilePartition" type="xs:int" minOccurs="0"/>
        	<xs:element name="consAttList" type="dataConsolidationAttribute" minOccurs="0" maxOccurs="unbounded"/>
        	<xs:element name="consGrpAttList" type="dataConsolidationGroupAttribute" minOccurs="0" maxOccurs="unbounded"/>
        	<xs:element name="consName" type="xs:string" minOccurs="0"/>
        	<xs:element name="dateFieldName" type="xs:string" minOccurs="0"/>
        	<xs:element name="id" type="xs:int" minOccurs="0"/>
        	<xs:element name="segregationType" type="segregationType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="dataConsolidationAttribute">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
        	<xs:element name="dataType" type="xs:string" minOccurs="0"/>
        	<xs:element name="description" type="xs:string" minOccurs="0"/>
        	<xs:element name="fieldName" type="xs:string" minOccurs="0"/>
        	<xs:element name="id" type="xs:int" minOccurs="0"/>
        	<xs:element name="operation" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>      
        
  <xs:complexType name="dataConsolidationGroupAttribute">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
        <xs:element name="destinationField" type="xs:string" minOccurs="0"/>
        <xs:element name="groupingField" type="xs:string" minOccurs="0"/>
        <xs:element name="id" type="xs:int" minOccurs="0"/>
        <xs:element name="lookUpEnable" type="xs:boolean" minOccurs="0"/>
        <xs:element name="lookUpTableColumnName" type="xs:string" minOccurs="0"/>
        <xs:element name="lookUpTableName" type="xs:string" minOccurs="0"/>
        <xs:element name="regExEnable" type="xs:boolean" minOccurs="0"/>
        <xs:element name="regExExpression" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:simpleType name="processingType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="FILE-BASED"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="acrossFileProcessingType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="SINGLE"/>
      <xs:enumeration value="MULTIPLE"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="segregationType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DAY"/>
      <xs:enumeration value="HOUR"/>
      <xs:enumeration value="MINUTE"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="consolidationType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="IN_FILE"/>
      <xs:enumeration value="ACROSS_FILE"/>
    </xs:restriction>
  </xs:simpleType>
        
  <xs:complexType name="parsingPathList">
    <xs:complexContent>
      <xs:extension base="commonPathList">
        <xs:sequence>
          <xs:element name="parserWrappers" type="parser" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="fileGrepDateEnabled" type="xs:boolean" minOccurs="0"/>
          <xs:element name="dateFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="position" type="xs:string" minOccurs="0"/>
          <xs:element name="startIndex" type="xs:int" minOccurs="0"/>
          <xs:element name="endIndex" type="xs:int" minOccurs="0"/>
          <xs:element name="parentDevice" type="device" minOccurs="0"/>
          <xs:element name="circle" type="circle" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="mandatoryFields" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="parser">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="parserType" type="pluginTypeMaster" minOccurs="0"/>
          <xs:element name="readFilenamePrefix" type="xs:string" minOccurs="0"/>
          <xs:element name="readFilenameSuffix" type="xs:string" minOccurs="0"/>
          <xs:element name="readFilenameContains" type="xs:string" minOccurs="0"/>
          <xs:element name="readFilenameExcludeTypes" type="xs:string" minOccurs="0"/>
          <xs:element name="writeFilePath" type="xs:string" minOccurs="0"/>
          <xs:element name="compressInFileEnabled" type="xs:boolean" minOccurs="0" />
          <xs:element name="compressOutFileEnabled" type="xs:boolean" minOccurs="0"/>
          <xs:element name="maxFileCountAlert" type="xs:int" minOccurs="0"/>
          <xs:element name="writeFileSplit" type="xs:boolean" minOccurs="0"/>
          <xs:element name="writeFilenamePrefix" type="xs:string" minOccurs="0"/>
          <xs:element name="parserMapping" type="parserMapping" minOccurs="0"/>
          <xs:element name="fileNamePattern" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="writeCdrHeaderFooterEnabled" type="xs:boolean" minOccurs="0" />
          <xs:element name="writeCdrDefaultAttributes" type="xs:boolean" minOccurs="0" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="parserMapping">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="parserType" type="pluginTypeMaster" minOccurs="0"/>
          <xs:element name="device" type="device" minOccurs="0"/>
          <xs:element name="dateFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="srcDateFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="srcCharSetName" type="charSetEnum" minOccurs="0"/>
          <xs:element name="mappingType" type="xs:int" minOccurs="0"/>
          <xs:element name="parserAttributes" type="parserAttribute" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="groupAttributeList" type="parserGroupAttribute" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="parserAttribute">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="associatedByGroup" type="xs:boolean"  minOccurs="0"/>
          <xs:element name="attributeOrder" type="xs:int" minOccurs="0"/>
          <xs:element name="dateFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="defaultValue" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="sourceField" type="xs:string" minOccurs="0"/>
          <xs:element name="sourceFieldFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="trimChars" type="xs:string" minOccurs="0"/>
          <xs:element name="trimPosition" type="xs:string" minOccurs="0"/>
          <xs:element name="unifiedField" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="parserGroupAttribute">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
        <xs:element name="associatedByGroup" type="xs:boolean"  minOccurs="0"/>
        <xs:element name="attributeList" type="parserAttribute" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="groupAttributeList" type="parserGroupAttribute" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="id" type="xs:int" minOccurs="0"/>
        <xs:element name="name" type="xs:string" minOccurs="0"/>      	
        <xs:element name="parserPageConfigurationList" type="parserPageConfiguration" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="tableEndIdentifier" type="xs:string"  minOccurs="0"/>  
        <xs:element name="tableEndIdentifierCol" type="xs:string" minOccurs="0"/>
        <xs:element name="tableEndIdentifierOccurence" type="xs:string"  minOccurs="0"/>
		<xs:element name="tableEndIdentifierRowLocation" type="xs:string"  minOccurs="0"/>	   
	    <xs:element name="tableEndIdentifierTdNo" type="xs:string"  minOccurs="0"/>
	    <xs:element name="tableRowIdentifier" type="xs:string"  minOccurs="0"/>
	    <xs:element name="tableRowsToIgnore" type="xs:string"  minOccurs="0"/>
	    <xs:element name="tableStartIdentifier" type="xs:string"  minOccurs="0"/>
        <xs:element name="tableStartIdentifierCol" type="xs:string" minOccurs="0"/>
	    <xs:element name="tableStartIdentifierTdNo" type="xs:string"  minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="parserPageConfiguration">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="extractionMethod" type="xs:string" minOccurs="0"/>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="pageNumber" type="xs:string" minOccurs="0"/>
          <xs:element name="pageSize" type="xs:string" minOccurs="0"/>
          <xs:element name="parserGroupAttribute" type="parserGroupAttribute" minOccurs="0"/>
          <xs:element name="tableCols" type="xs:string" minOccurs="0"/>
          <xs:element name="tableLocation" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="natFlowParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence>
          <xs:element name="readTemplatesInitially" type="xs:boolean" minOccurs="0"/>
          <xs:element name="optionTemplateEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="optionTemplateId" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="optionTemplateKey" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="optionTemplateValue" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="optionCopytoTemplateId" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="optionCopyTofield" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="skipAttributeForValidation" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="overrideTemplate" type="xs:boolean" minOccurs="0"/>
          <xs:element name="defaultTemplate" type="xs:boolean" minOccurs="0"/>
          <xs:element name="filterEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="filterProtocol" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="filterTransport" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="filterPort" type="xs:string" nillable="true" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="natflowASN1ParserMapping">
    <xs:complexContent>
      <xs:extension base="natFlowParserMapping">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="asciiParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence><xs:element name="excludeCharactersMax" type="xs:int" minOccurs="0"/>
          <xs:element name="excludeCharactersMin" type="xs:int" minOccurs="0"/>
          <xs:element name="excludeLinesStart" type="xs:string" minOccurs="0"/>
          <xs:element name="fieldSeparator" type="xs:string" minOccurs="0"/>
          <xs:element name="fieldSeparatorEnum" type="xs:string" minOccurs="0"/>
          <xs:element name="fileFooterContains" type="xs:string" minOccurs="0"/>
          <xs:element name="fileFooterEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="fileFooterParser" type="fileHeaderFooterTypeEnum" minOccurs="0"/>
          <xs:element name="fileFooterRows" type="xs:int" minOccurs="0"/>
          <xs:element name="fileHeaderContainsFields" type="xs:boolean" minOccurs="0"/>
          <xs:element name="fileHeaderEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="fileHeaderParser" type="fileHeaderFooterTypeEnum" minOccurs="0"/>
          <xs:element name="fileHeaderRow" type="xs:int" minOccurs="0"/>
          <xs:element name="fileHeaderStartIndex" type="xs:int" minOccurs="0"/>
          <xs:element name="fileTypeEnum" type="fileTypeEnum" minOccurs="0"/>
          <xs:element name="find" type="xs:string" minOccurs="0"/>
          <xs:element name="keyValueRecordEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="keyValueSeparator" type="xs:string" minOccurs="0"/>
          <xs:element name="linearKeyValueRecordEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="keyValueSeparatorEnum" type="xs:string" minOccurs="0"/>
          <xs:element name="recordHeaderEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="recordHeaderIdentifier" type="xs:string" minOccurs="0"/>
          <xs:element name="recordHeaderLength" type="xs:string" minOccurs="0"/>
          <xs:element name="recordHeaderSepEnum" type="xs:string" minOccurs="0"/>
          <xs:element name="recordHeaderSeparator" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="replace" type="xs:string" minOccurs="0"/>
           
        
          
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="varLengthAsciiParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence>
          <xs:element name="dataDefinitionPath" type="xs:string" minOccurs="0"/>
          <xs:element name="excludeCharactersMax" type="xs:int" minOccurs="0"/>
          <xs:element name="excludeCharactersMin" type="xs:int" minOccurs="0"/>
          <xs:element name="excludeLinesStart" type="xs:string" minOccurs="0"/>
          <xs:element name="fieldSeparator" type="xs:string" minOccurs="0"/>
          <xs:element name="fieldSeparatorEnum" type="xs:string" minOccurs="0"/>
          <xs:element name="fileFooterContains" type="xs:string" minOccurs="0"/>
          <xs:element name="fileFooterEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="fileFooterParser" type="fileHeaderFooterTypeEnum" minOccurs="0"/>
          <xs:element name="fileFooterRows" type="xs:int" minOccurs="0"/>
          <xs:element name="fileHeaderContainsFields" type="xs:boolean" minOccurs="0"/>
          <xs:element name="fileHeaderEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="fileHeaderParser" type="fileHeaderFooterTypeEnum" minOccurs="0"/>
          <xs:element name="fileHeaderRow" type="xs:int" minOccurs="0"/>
          <xs:element name="fileHeaderStartIndex" type="xs:int" minOccurs="0"/>
          <xs:element name="fileTypeEnum" type="fileTypeEnum" minOccurs="0"/>
          <xs:element name="find" type="xs:string" minOccurs="0"/>
          <xs:element name="keyValueRecordEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="keyValueSeparator" type="xs:string" minOccurs="0"/>
          <xs:element name="linearKeyValueRecordEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="keyValueSeparatorEnum" type="xs:string" minOccurs="0"/>
          <xs:element name="recordHeaderEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="recordHeaderIdentifier" type="xs:string" minOccurs="0"/>
          <xs:element name="recordHeaderLength" type="xs:string" minOccurs="0"/>
          <xs:element name="recordHeaderSepEnum" type="xs:string" minOccurs="0"/>
          <xs:element name="recordHeaderSeparator" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="replace" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="varLengthBinaryParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence>
          <xs:element name="dataDefinitionPath" type="xs:string" minOccurs="0"/>
          <xs:element name="extractionRuleKey" type="xs:string" minOccurs="0"/>
          <xs:element name="extractionRuleValue" type="xs:string" minOccurs="0"/>
          <xs:element name="fileHeaderSize" type="xs:int" minOccurs="0"/>
          <xs:element name="recordLengthAttribute" type="xs:string" minOccurs="0"/>
          <xs:element name="skipFileHeader" type="xs:boolean" minOccurs="0"/>
          <xs:element name="skipSubFileHeader" type="xs:boolean" minOccurs="0"/>
          <xs:element name="subFileHeaderSize" type="xs:int" minOccurs="0"/>
          <xs:element name="subFileLength" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="asn1ParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence>
          <xs:element name="bufferSize" type="xs:string" minOccurs="0"/>
          <xs:element name="decodeFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="headerOffset" type="xs:int" minOccurs="0"/>
          <xs:element name="recMainAttribute" type="xs:string" minOccurs="0"/>
          <xs:element name="recOffset" type="xs:int" minOccurs="0"/>
		  <xs:element name="recordStartIds" type="xs:string" minOccurs="0"/>
          <xs:element name="removeAddByte" type="xs:boolean" minOccurs="0"/>
          <xs:element name="removeAddHeaderFooter" type="xs:boolean" minOccurs="0"/>
          <xs:element name="removeFillers" type="xs:boolean" minOccurs="0"/>
          <xs:element name="rootNodeName" type="xs:string" minOccurs="0"/>
          <xs:element name="skipAttributeMapping" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

<xs:complexType name="rapParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence>
          <xs:element name="bufferSize" type="xs:string" minOccurs="0"/>
          <xs:element name="decodeFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="headerOffset" type="xs:int" minOccurs="0"/>
          <xs:element name="recMainAttribute" type="xs:string" minOccurs="0"/>
          <xs:element name="recOffset" type="xs:int" minOccurs="0"/>
          <xs:element name="recordStartIds" type="xs:string" minOccurs="0"/>
          <xs:element name="removeAddByte" type="xs:boolean" minOccurs="0"/>
          <xs:element name="removeAddHeaderFooter" type="xs:boolean" minOccurs="0"/>
          <xs:element name="removeFillers" type="xs:boolean" minOccurs="0"/>
          <xs:element name="rootNodeName" type="xs:string" minOccurs="0"/>
          <xs:element name="skipAttributeMapping" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

<xs:complexType name="tapParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence>
          <xs:element name="bufferSize" type="xs:string" minOccurs="0"/>
          <xs:element name="decodeFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="headerOffset" type="xs:int" minOccurs="0"/>
          <xs:element name="recMainAttribute" type="xs:string" minOccurs="0"/>
          <xs:element name="recOffset" type="xs:int" minOccurs="0"/>
          <xs:element name="recordStartIds" type="xs:string" minOccurs="0"/>
          <xs:element name="removeAddByte" type="xs:boolean" minOccurs="0"/>
          <xs:element name="removeAddHeaderFooter" type="xs:boolean" minOccurs="0"/>
          <xs:element name="removeFillers" type="xs:boolean" minOccurs="0"/>
          <xs:element name="rootNodeName" type="xs:string" minOccurs="0"/>
          <xs:element name="skipAttributeMapping" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

<xs:complexType name="nrtrdeParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence>
          <xs:element name="bufferSize" type="xs:string" minOccurs="0"/>
          <xs:element name="decodeFormat" type="xs:string" minOccurs="0"/>
          <xs:element name="headerOffset" type="xs:int" minOccurs="0"/>
          <xs:element name="recMainAttribute" type="xs:string" minOccurs="0"/>
          <xs:element name="recOffset" type="xs:int" minOccurs="0"/>
          <xs:element name="recordStartIds" type="xs:string" minOccurs="0"/>
          <xs:element name="removeAddByte" type="xs:boolean" minOccurs="0"/>
          <xs:element name="removeAddHeaderFooter" type="xs:boolean" minOccurs="0"/>
          <xs:element name="removeFillers" type="xs:boolean" minOccurs="0"/>
          <xs:element name="rootNodeName" type="xs:string" minOccurs="0"/>
          <xs:element name="skipAttributeMapping" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>


  <xs:complexType name="detailLocalParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence>
          <xs:element name="attributeSeperator" type="xs:string" minOccurs="0"/>
          <xs:element name="vendorNameSeparatorEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="vendorSeparatorValue" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fixedLengthASCIIParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence>
	      <xs:element name="fileHeaderContainsFields" type="xs:boolean" minOccurs="0"/>
	      <xs:element name="fileHeaderEnable" type="xs:boolean" minOccurs="0"/>
      	</xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="fixedLengthBinaryParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence>
	      <xs:element name="recordLength" type="xs:int" minOccurs="0"/>
      	</xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="pdfParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence>
	      <xs:element name="fileParsed" type="xs:boolean" minOccurs="0"/>
	      <xs:element name="multiInvoice" type="xs:boolean" minOccurs="0"/>
	      <xs:element name="multiPages" type="xs:boolean" minOccurs="0"/>
	      <xs:element name="recordWisePdfFormat" type="xs:boolean" minOccurs="0"/>
      	</xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="regexParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence>
          <xs:element name="avilablelogPatternRegexId" type="xs:string" minOccurs="0"/>
          <xs:element name="logPatternRegex" type="xs:string" minOccurs="0"/>
          <xs:element name="logPatternRegexId" type="xs:string" minOccurs="0"/>
          <xs:element name="patternList" type="regExPattern" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="jsonParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jsonParserAttribute">
    <xs:complexContent>
      <xs:extension base="parserAttribute">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="mtSiemensParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="mtSiemensParserAttribute">
    <xs:complexContent>
      <xs:extension base="parserAttribute">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  	  
  <xs:complexType name="regExPattern">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="attributeList" type="regexParserAttribute" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="patternRegEx" type="xs:string" minOccurs="0"/>
          <xs:element name="patternRegExId" type="xs:string" minOccurs="0"/>
          <xs:element name="patternRegExName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="regexParserAttribute">
    <xs:complexContent>
      <xs:extension base="parserAttribute">
        <xs:sequence>
          <xs:element name="regex" type="xs:string" minOccurs="0"/>
          <xs:element name="sampleData" type="xs:string" minOccurs="0"/>
          <xs:element name="seqNumber" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="sstpXmlParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="xmlParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence>
        	<xs:element name="commonFields" type="xs:string" minOccurs="0"/>
        	<xs:element name="recordWiseXmlFormat" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="htmlParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence>
          <xs:element name="isFileParsed" type="xs:boolean" minOccurs="0"/>	
          <xs:element name="recordWiseExcelFormat" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="xlsParserMapping">
    <xs:complexContent>
      <xs:extension base="parserMapping">
        <xs:sequence>
          <xs:element name="isFileParsed" type="xs:boolean" minOccurs="0"/>	
          <xs:element name="recordWiseExcelFormat" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="collectionDriver">
    <xs:complexContent>
      <xs:extension base="drivers">
        <xs:sequence>
          <xs:element name="fileGroupingParameter" type="fileGroupingParameterCollection" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

 <xs:complexType name="fileGroupingParameterCollection">
    <xs:complexContent>
      <xs:extension base="fileGroupingParameter">
        <xs:sequence>
          <xs:element name="duplicateDirPath" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
 

  <xs:complexType name="fileGroupingParameter">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="fileGroupEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="groupingType" type="fileGroupEnum" minOccurs="0"/>
          <xs:element name="enableForDuplicate" type="xs:boolean" minOccurs="0"/>
          <xs:element name="sourcewiseArchive" type="xs:boolean" minOccurs="0"/>
          <xs:element name="groupingDateType" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ftpCollectionDriver">
    <xs:complexContent>
      <xs:extension base="collectionDriver">
        <xs:sequence>
          <xs:element name="ftpConnectionParams" type="connectionParameter" minOccurs="0"/>
          <xs:element name="myFileFetchParams" type="fileFetchParams" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="connectionParameter">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="port" type="xs:int" nillable="true" minOccurs="0"/>
          <xs:element name="username" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="password" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="timeout" type="xs:int" minOccurs="0"/>
          <xs:element name="fileSeparator" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="fileTransferMode" type="fileTransferModeEnum" minOccurs="0"/>
          <xs:element name="keyFileLocation" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="iPAddressHostList" type="hostParameters" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="validateInProcessFile" type="xs:boolean" minOccurs="0"/> 
          <xs:element name="activeDistribution" type="xs:boolean" minOccurs="0"/> 
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
	
	<xs:complexType name="hostParameters">
    <xs:sequence>
      <xs:element name="iPAddressHost" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="fileFetchParams">
    <xs:sequence>
      <xs:element name="fileFetchRuleEnabled" type="xs:boolean" minOccurs="0"/>
      <xs:element name="fileFetchType" type="xs:string" minOccurs="0"/>
      <xs:element name="fileFetchIntervalMin" type="xs:int" minOccurs="0"/>
      <xs:element name="timeZone" type="xs:string" nillable="true" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="sftpCollectionDriver">
    <xs:complexContent>
      <xs:extension base="ftpCollectionDriver">
        <xs:sequence>
          <xs:element name="certKey" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="localCollectionDriver">
    <xs:complexContent>
      <xs:extension base="collectionDriver">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="distributionDriver">
    <xs:complexContent>
      <xs:extension base="drivers">
        <xs:sequence>
        	<xs:element name="driverControlFileParams" type="ControlFileParams" minOccurs="0"/>
        	<xs:element name="controlFileSeq" type="controlFileParameter" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ftpDistributionDriver">
    <xs:complexContent>
      <xs:extension base="distributionDriver">
        <xs:sequence>
          <xs:element name="ftpConnectionParams" type="connectionParameter" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="sftpDistributionDriver">
    <xs:complexContent>
      <xs:extension base="ftpDistributionDriver">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="localDistributionDriver">
    <xs:complexContent>
      <xs:extension base="distributionDriver">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="databaseDistributionDriver">
    <xs:complexContent>
      <xs:extension base="distributionDriver">
        <xs:sequence>
        	<xs:element name="attributeList" type="databaseDistributionDriverAttribute" minOccurs="0" maxOccurs="unbounded"/>
        	<xs:element name="tableName" type="xs:string" minOccurs="0"/> 
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="hadoopDistributionDriver">
    <xs:complexContent>
      <xs:extension base="distributionDriver">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="ControlFileParams">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="controlFileEnabled" type="xs:boolean" minOccurs="0"/>
          <xs:element name="controlFileLocation" type="xs:string" minOccurs="0"/>
          <xs:element name="attributes" type="xs:string" minOccurs="0"/>
          <xs:element name="attributeSeparator" type="xs:string" minOccurs="0"/>
          <xs:element name="fileRollingDuration" type="xs:int" minOccurs="0"/>
          <xs:element name="fileRollingStartTime" type="xs:string" minOccurs="0"/>
          <xs:element name="controlFileName" type="xs:string" minOccurs="0"/>
          <xs:element name="fileSeqEnable" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="controlFileParameter">
    <xs:complexContent>
	  <xs:extension base="baseModel">
	    <xs:sequence>
	      <xs:element name="id" type="xs:int" minOccurs="0" />
	      <xs:element name="startRange" type="xs:int" minOccurs="0" />
	      <xs:element name="endRange" type="xs:int" minOccurs="0"/>
	      <xs:element name="nextValue" type="xs:int" minOccurs="0"/>
	      <xs:element name="resetFrequency" type="xs:string" minOccurs="0"/>
	      <xs:element name="paddingEnable" type="xs:boolean" minOccurs="0"/>
	    </xs:sequence>
	  </xs:extension>
	</xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="parsingService">
    <xs:complexContent>
      <xs:extension base="service">
        <xs:sequence>
          <xs:element name="dateFieldForSummary" type="xs:string" minOccurs="0"/>
          <xs:element name="equalCheckField" type="xs:string" minOccurs="0"/>
          <xs:element name="equalCheckFunction" type="xs:string" minOccurs="0"/>
          <xs:element name="equalCheckValue" type="xs:string" minOccurs="0"/>
          <xs:element name="errorPath" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="fileGroupingParameter" type="fileGroupingParameterParsing" minOccurs="0"/>
          <xs:element name="fileSeqOrderEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="fileStatInsertEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="maxFileRange" type="xs:int" minOccurs="0"/>
          <xs:element name="minFileRange" type="xs:int" minOccurs="0"/>
          <xs:element name="noFileAlert" type="xs:int" minOccurs="0"/>
          <xs:element name="overrideFileDateEnabled" type="xs:boolean" minOccurs="0"/>
          <xs:element name="overrideFileDateType" type="cdrFileDateTypeEnum" minOccurs="0"/>
          <xs:element name="recordBatchSize" type="xs:int" minOccurs="0"/>
          <xs:element name="storeCDRFileSummaryDB" type="xs:boolean" minOccurs="0"/>
          <xs:element name="typeForSummary" type="cdrDateSummaryTypeEnum" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="distributionService">
    <xs:complexContent>
      <xs:extension base="service">
        <xs:sequence>
          <xs:element name="errorPath" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="fileGroupingParameter" type="fileGroupingParameterParsing" minOccurs="0"/>
          <xs:element name="fileMergeEnabled" type="xs:boolean" minOccurs="0"/>
          <xs:element name="fileMergeGroupingBy" type="fileMergeGroupingByEnum" minOccurs="0"/>
          <xs:element name="processRecordLimit" type="xs:int" minOccurs="0"/>
          <xs:element name="remainingFileMergeEnabled" type="xs:boolean" minOccurs="0"/>
          <xs:element name="serviceSchedulingParams" type="serviceSchedulingParams" minOccurs="0"/>
          <xs:element name="thirdPartyTransferEnabled" type="xs:boolean" minOccurs="0"/>
          <xs:element name="timestenDatasourceName" type="xs:string" minOccurs="0"/>
          <xs:element name="writeRecordLimit" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="processingService">
    <xs:complexContent>
      <xs:extension base="service">
        <xs:sequence>
			<xs:element name="acrossFileDuplicateCDRCacheLimit" type="xs:int" minOccurs="0"/>
        	<xs:element name="acrossFileDuplicateDateField" type="xs:string" minOccurs="0"/>
        	<xs:element name="acrossFileDuplicateDateFieldFormat" type="xs:string" minOccurs="0"/>
        	<xs:element name="acrossFileDuplicateDateInterval" type="xs:int" minOccurs="0"/>
        	<xs:element name="acrossFileDuplicateDateIntervalType" type="timeUnitEnum" minOccurs="0"/>
        	<xs:element name="acrossFileDuplicatePurgeCacheInterval" type="xs:int" minOccurs="0"/>
        	<xs:element name="dateFieldForSummary" type="xs:string" minOccurs="0"/>
        	<xs:element name="alertDescription" type="xs:string" minOccurs="0" />
        	<xs:element name="alertId" type="xs:string" minOccurs="0"/>
        	<xs:element name="duplicateRecordPolicyEnabled" type="xs:boolean" minOccurs="0"/>
        	<xs:element name="duplicateRecordPolicyType" type="duplicateRecordPolicyTypeEnum" minOccurs="0"/>
        	<xs:element name="errorPath" type="xs:string" nillable="true" minOccurs="0"/>
        	<xs:element name="fileGroupingParameter" type="fileGroupingParameterProcessing" minOccurs="0"/>
        	<xs:element name="fileSeqOrderEnable" type="xs:boolean" minOccurs="0"/>
        	<xs:element name="globalSeqDeviceName" type="xs:string" nillable="true" minOccurs="0"/>
        	<xs:element name="globalSeqEnabled" type="xs:boolean" minOccurs="0"/>
        	<xs:element name="globalSeqMaxLimit" type="xs:int" minOccurs="0"/>
        	<xs:element name="maxFileRange" type="xs:int" minOccurs="0"/>
        	<xs:element name="minFileRange" type="xs:int" minOccurs="0"/>
        	<xs:element name="noFileAlert" type="xs:int" minOccurs="0"/>
        	<xs:element name="overrideFileDateEnabled" type="xs:boolean" minOccurs="0"/>
          	<xs:element name="overrideFileDateType" type="cdrFileDateTypeEnum" minOccurs="0"/>
        	<xs:element name="recordBatchSize" type="xs:int" minOccurs="0"/>
        	<xs:element name="storeCDRFileSummaryDB" type="xs:boolean" minOccurs="0"/>
          	<xs:element name="typeForSummary" type="cdrDateSummaryTypeEnum" minOccurs="0"/>
        	<xs:element name="unifiedFields" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

   
  <xs:complexType name="fileGroupingParameterProcessing">
    <xs:complexContent>
      <xs:extension base="fileGroupingParameter">
        <xs:sequence>
          <xs:element name="archivePath" type="xs:string" minOccurs="0"/>
          <xs:element name="duplicateDirPath" type="xs:string" minOccurs="0"/>
          <xs:element name="enableForArchive" type="xs:boolean" minOccurs="0"/>
          <xs:element name="enableForFilter" type="xs:boolean" minOccurs="0"/>
          <xs:element name="enableForInvalid" type="xs:boolean" minOccurs="0"/>
          <xs:element name="filterDirPath" type="xs:string" minOccurs="0"/>
          <xs:element name="filterGroupType" type="filterGroupTypeEnum" minOccurs="0"/>
          <xs:element name="invalidDirPath" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="fileGroupingParameterConsolidation">
    <xs:complexContent>
      <xs:extension base="fileGroupingParameter">
        <xs:sequence>
          <xs:element name="enableForArchive" type="xs:boolean" minOccurs="0"/>
          <xs:element name="archivePath" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
 <!--  <xs:complexType name="aggregationService">
    <xs:complexContent>
      <xs:extension base="service">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType> -->

  <xs:complexType name="correlationService">
    <xs:complexContent>
      <xs:extension base="service">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="dataConsolidationService">
    <xs:complexContent>
      <xs:extension base="service">
         <xs:sequence>
         	<xs:element name="acrossFileMaxBatchSize" type="xs:int" minOccurs="0"/>
         	<xs:element name="acrossFileMinBatchSize" type="xs:int" minOccurs="0"/>
         	<xs:element name="acrossFilePartition" type="xs:int" minOccurs="0"/>
         	<xs:element name="acrossFileProcessingType" type="acrossFileProcessingType" minOccurs="0"/>
         	<xs:element name="consolidation" type="dataConsolidation" minOccurs="0" maxOccurs="unbounded"/>
         	<xs:element name="consolidationType" type="consolidationType" minOccurs="0"/>
         	<xs:element name="fileGroupParam" type="fileGroupingParameterConsolidation" minOccurs="0"/>
         	<xs:element name="maxFileBatchSize" type="xs:int" minOccurs="0"/>
         	<xs:element name="maxFileRange" type="xs:int" minOccurs="0"/>
         	<xs:element name="mergeDelimiter" type="xs:string" minOccurs="0"/>
         	<xs:element name="minFileBatchSize" type="xs:int" minOccurs="0"/>
         	<xs:element name="minFileRange" type="xs:int" minOccurs="0"/>
         	<xs:element name="noFileAlertInterval" type="xs:int" minOccurs="0"/>
         	<xs:element name="processingType" type="processingType" minOccurs="0"/>
         </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="aggregationService">
    <xs:complexContent>
      <xs:extension base="service">
         <xs:sequence>
         	<xs:element name="minFileRange" type="xs:int" minOccurs="0"/>
         	<xs:element name="maxFileRange" type="xs:int" minOccurs="0"/>
         	<xs:element name="noFileAlert" type="xs:int" minOccurs="0"/>
         	<xs:element name="errorPath" type="xs:string" minOccurs="0"/>
			<xs:element name="delimiter" type="xs:string" minOccurs="0"/>
         	<xs:element name="fileGroupingParameter" type="fileGroupingParameterAggregation" minOccurs="0"/>
         	<xs:element name="serviceSchedulingParams" type="serviceSchedulingParams" minOccurs="0"/>
         	<xs:element name="aggregationDefinition" type="aggregationDefinition" minOccurs="0"/>
         </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="aggregationDefinition">
     <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="aggDefName" type="xs:string" minOccurs="0"/>
          <xs:element name="noOfPartition" type="xs:int" minOccurs="0"/>
          <xs:element name="partCDRField" type="xs:string" minOccurs="0"/>
          <xs:element name="fLegVal" type="xs:string" minOccurs="0"/>
          <xs:element name="lLegVal" type="xs:string" minOccurs="0"/>
          <xs:element name="unifiedDateFiled" type="xs:string" minOccurs="0"/>
          <xs:element name="aggInterval" type="xs:int" minOccurs="0"/>
          <xs:element name="outputFileField" type="xs:string" minOccurs="0"/>
          <xs:element name="aggConditionList" type="aggregationCondition" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="aggKeyAttrList" type="aggregationKeyAttribute" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="aggAttrList" type="aggregationAttribute" minOccurs="0" maxOccurs="unbounded"/>
	    </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="aggregationCondition">
     <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="condExpression" type="xs:string" minOccurs="0"/>
          <xs:element name="condAction" type="xs:string" minOccurs="0"/>
	    </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="aggregationKeyAttribute">
     <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="fieldName" type="xs:string" minOccurs="0"/>
	    </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>  
  
  <xs:complexType name="aggregationAttribute">
     <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="outputFieldName" type="xs:string" minOccurs="0"/>
          <xs:element name="outputExpression" type="xs:string" minOccurs="0"/>
          <xs:element name="outputDataType" type="xs:string" minOccurs="0"/>
	    </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="fileGroupingParameterAggregation">
    <xs:complexContent>
      <xs:extension base="fileGroupingParameter">
        <xs:sequence>
          <xs:element name="archivePath" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="ipLogParsingService">
    <xs:complexContent>
      <xs:extension base="service">
        <xs:sequence>
          <xs:element name="correlEnabled" type="xs:boolean" minOccurs="0"/>
          <xs:element name="createRecDestPath" type="xs:string" minOccurs="0"/>
          <xs:element name="dataType" type="hashDataTypeEnum" minOccurs="0"/>
          <xs:element name="deleteRecDestPath" type="xs:string" minOccurs="0"/>
          <xs:element name="destPortField" type="xs:string" minOccurs="0"/>
          <xs:element name="destPortFilter" type="xs:string" minOccurs="0"/>
          <xs:element name="equalCheckField" type="xs:string" minOccurs="0"/>
          <xs:element name="equalCheckFunction" type="xs:string" minOccurs="0"/>
          <xs:element name="equalCheckValue" type="xs:string" minOccurs="0"/>
          <xs:element name="fileGroupingParameter" type="fileGroupingParameterParsing" minOccurs="0"/>
          <xs:element name="fileStatsEnabled" type="xs:boolean" minOccurs="0"/>
          <xs:element name="fileStatsLoc" type="xs:string" minOccurs="0"/>
          <xs:element name="hashSeparator" type="xs:string" minOccurs="0"/>
          <xs:element name="indexType" type="xs:string" minOccurs="0"/>
          <xs:element name="mappedSourceField" type="xs:string" minOccurs="0"/>
          <xs:element name="outFileHeaders" type="xs:string" minOccurs="0"/>
          <xs:element name="outputFileHeader" type="xs:string" minOccurs="0"/>
          <xs:element name="partionParamList" type="partitionParam" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="purgeDelayInterval" type="xs:int" minOccurs="0"/>
          <xs:element name="purgeInterval" type="xs:int" minOccurs="0"/>
          <xs:element name="recordBatchSize" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fileGroupingParameterParsing">
    <xs:complexContent>
      <xs:extension base="fileGroupingParameter">
        <xs:sequence>
          <xs:element name="enableForArchive" type="xs:boolean" minOccurs="0"/>
          <xs:element name="archivePath" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="partitionParam">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="baseUnifiedField" type="xs:string" minOccurs="0"/>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="netMask" type="xs:int" minOccurs="0"/>
          <xs:element name="partitionField" type="partitionFieldEnum" minOccurs="0"/>
          <xs:element name="partitionRange" type="xs:string" minOccurs="0"/>
          <xs:element name="unifiedField" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="netflowCollectionService">
    <xs:complexContent>
      <xs:extension base="netflowBinaryCollectionService">
        <xs:sequence>
          <xs:element name="enableParallelBinaryWrite" type="xs:boolean" minOccurs="0"/>
          <xs:element name="binaryfileLocation" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="readTemplateOnInit" type="xs:boolean" minOccurs="0"/>
          <xs:element name="optionTemplateEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="optionTemplateId" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="optionTemplateKey" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="optionTemplateValue" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="optionCopytoTemplateId" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="optionCopyTofield" type="xs:string" nillable="true" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverInstance">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="port" type="xs:int" minOccurs="0"/>
          <xs:element name="fileStatInDBEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="fileCdrSummaryDBEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="minDiskSpace" type="xs:string" minOccurs="0"/>
          <xs:element name="snmpAlertEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="syncSIStatus" type="xs:boolean" minOccurs="0"/>
          <xs:element name="syncChildStatus" type="xs:boolean" minOccurs="0"/>
          <xs:element name="webservicesEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="restWebservicesEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="serverHome" type="xs:string" minOccurs="0"/>
          <xs:element name="javaHome" type="xs:string" minOccurs="0"/>
          <xs:element name="mediationRoot" type="xs:string" minOccurs="0"/>
          <xs:element name="reprocessingBackupPath" type="xs:string" minOccurs="0"/>
          <xs:element name="minMemoryAllocation" type="xs:int" minOccurs="0"/>
          <xs:element name="maxMemoryAllocation" type="xs:int" minOccurs="0"/>
          <xs:element name="fileStorageLocation" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="maxConnectionRetry" type="xs:int" minOccurs="0"/>
          <xs:element name="retryInterval" type="xs:int" minOccurs="0"/>
          <xs:element name="connectionTimeout" type="xs:int" minOccurs="0"/>
          <xs:element name="scriptName" type="xs:string" minOccurs="0"/>
          <xs:element name="selfSNMPServerConfig" type="snmpServerConfig" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="snmpListeners" type="snmpServerConfig" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="thresholdSysAlertEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="thresholdTimeInterval" type="xs:int" minOccurs="0"/>
          <xs:element name="thresholdMemory" type="xs:int" minOccurs="0"/>
          <xs:element name="loadAverage" type="xs:int" minOccurs="0"/>
          <xs:element ref="server" minOccurs="0"/>
          <xs:element name="databaseInit" type="xs:boolean" minOccurs="0"/>
          <xs:element name="serverManagerDatasourceConfig" type="dataSourceConfig" minOccurs="0"/>
          <xs:element name="iploggerDatasourceConfig" type="dataSourceConfig" minOccurs="0"/>
          <xs:element name="logsDetail" type="logsDetail" minOccurs="0"/>
          <xs:element name="services" type="service" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="agentList" type="agent" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="policyList" type="policy" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="policyGroupList" type="policyGroup" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="policyRuleList" type="policyRule" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="policyConditionList" type="policyCondition" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="policyActionList" type="policyAction" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="databaseQueryList" type="databaseQuery" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="snmpServerConfig">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="version" type="snmpVersionType" minOccurs="0"/>
          <xs:element name="type" type="snmpServerType" minOccurs="0"/>
          <xs:element name="hostIP" type="xs:string" minOccurs="0"/>
          <xs:element name="port" type="xs:string" minOccurs="0"/>
          <xs:element name="portOffset" type="xs:int" minOccurs="0"/>
          <xs:element name="community" type="xs:string" minOccurs="0"/>
          <xs:element name="advance" type="xs:boolean" minOccurs="0"/>
          <xs:element name="configuredAlerts" type="snmpAlertWrapper" minOccurs="0" maxOccurs="unbounded"/>
          
          <xs:element name="snmpV3AuthAlgorithm" type="xs:string" minOccurs="0"/>
          <xs:element name="snmpV3AuthPassword" type="xs:string" minOccurs="0"/>
          <xs:element name="snmpV3PrivAlgorithm" type="xs:string" minOccurs="0"/>
          <xs:element name="snmpV3PrivPassword" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="snmpAlertWrapper">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="alert" type="snmpAlert" minOccurs="0"/>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="serviceThreshold" type="snmpServiceThreshold" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="serviceThresholdConfigured" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="snmpAlert">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="alertId" type="xs:string" minOccurs="0"/>
          <xs:element name="alertType" type="snmpAlertType" minOccurs="0"/>
          <xs:element name="desc" type="xs:string" minOccurs="0"/>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="threshold" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="snmpAlertType">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="alias" type="xs:string" minOccurs="0"/>
          <xs:element name="category" type="snmpAlertTypeEnum" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="snmpServiceThreshold">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="service" type="service" minOccurs="0"/>
          <xs:element name="threshold" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="server">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="ipAddress" type="xs:string" minOccurs="0"/>
          <xs:element name="utilityPort" type="xs:int" minOccurs="0"/>
          <xs:element name="serverType" type="serverType" minOccurs="0"/>
          <xs:element name="serverId" type="xs:string" minOccurs="0"/>
          <xs:element name="groupServerId" type="xs:string" minOccurs="0"/>
          <xs:element name="containerEnvironment" type="xs:boolean" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serverType">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="alias" type="xs:string" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="dataSourceConfig">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="type" type="xs:string" minOccurs="0"/>
          <xs:element name="connURL" type="xs:string" minOccurs="0"/>
          <xs:element name="username" type="xs:string" minOccurs="0"/>
          <xs:element name="password" type="xs:string" minOccurs="0"/>
          <xs:element name="minPoolSize" type="xs:int" minOccurs="0"/>
          <xs:element name="maxPoolsize" type="xs:int" minOccurs="0"/>
          <xs:element name="failTimeout" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="logsDetail">
    <xs:complexContent>
      <xs:extension base="toStringProcessor">
        <xs:sequence>
          <xs:element name="level" type="logLevelEnum" minOccurs="0"/>
          <xs:element name="rollingType" type="xs:string" minOccurs="0"/>
          <xs:element name="logPathLocation" type="xs:string" minOccurs="0"/>
          <xs:element name="rollingValue" type="xs:int" minOccurs="0"/>
          <xs:element name="maxRollingUnit" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="agent">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="agentType" type="agentType" minOccurs="0"/>
          <xs:element name="executionInterval" type="xs:long" minOccurs="0"/>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="initialDelay" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="agentType">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="type" type="xs:string" minOccurs="0"/>
          <xs:element name="alias" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="agentFullClassName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fileRenameAgent">
    <xs:complexContent>
      <xs:extension base="agent">
        <xs:sequence>
          <xs:element name="serviceList" type="serviceFileRenameConfig" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="serviceFileRenameConfig">
  <xs:complexContent>
  <xs:extension base="baseModel">
    <xs:sequence>
      <xs:element name="id" type="xs:int" minOccurs="0"/>
      <xs:element name="service" type="service" minOccurs="0"/>    
      <xs:element name="destinationPath" type="xs:string" minOccurs="0"/>
      <xs:element name="fileExtensitonList" type="xs:string" minOccurs="0"/>
      <xs:element name="extAfterRename" type="xs:string" minOccurs="0"/>
      <xs:element name="charRenameOperationEnable" type="xs:boolean" minOccurs="0"/>      
      <xs:element name="charRenameOpList" type="charRenameOperation" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:extension>
  </xs:complexContent>  
  </xs:complexType>

  <xs:complexType name="packetStatisticsAgent">
    <xs:complexContent>
      <xs:extension base="agent">
        <xs:sequence>
          <xs:element name="serviceList" type="servicePacketStatsConfig" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="storageLocation" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="servicePacketStatsConfig">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="enable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="service" type="service" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="natFlowDictionaryAttribute">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="elementId" type="xs:string"/>
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="dataType" type="xs:string"/>
        <xs:attribute name="applicability" type="xs:string"/>
        <xs:attribute name="group" type="xs:string"/>
        <xs:attribute name="dataTypeSemantics" type="xs:string"/>
        <xs:attribute name="fieldStatus" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fixedLengthASCIIParserAttribute">
    <xs:complexContent>
      <xs:extension base="parserAttribute">
        <xs:sequence>
          <xs:element name="endLength" type="xs:int" minOccurs="0"/>
          <xs:element name="length" type="xs:string" minOccurs="0"/>
          <xs:element name="postfix" type="xs:string" minOccurs="0"/>
          <xs:element name="prefix" type="xs:string" minOccurs="0"/>
          <xs:element name="rightDelimiter" type="xs:string" minOccurs="0"/>
          <xs:element name="startLength" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="fixedLengthBinaryParserAttribute">
    <xs:complexContent>
      <xs:extension base="parserAttribute">
        <xs:sequence>
          <xs:element name="bitEndLength" type="xs:int" minOccurs="0"/>
          <xs:element name="bitStartLength" type="xs:int" minOccurs="0"/>
          <xs:element name="endLength" type="xs:int" minOccurs="0"/>
          <xs:element name="length" type="xs:string" minOccurs="0"/>
          <xs:element name="multiRecord" type="xs:boolean" minOccurs="0"/>
          <xs:element name="postfix" type="xs:string" minOccurs="0"/>
          <xs:element name="prefix" type="xs:string" minOccurs="0"/>
          <xs:element name="readAsBits" type="xs:boolean" minOccurs="0"/>
          <xs:element name="startLength" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="pdfParserAttribute">
    <xs:complexContent>
      <xs:extension base="parserAttribute">
        <xs:sequence>
          <xs:element name="columnEndsWith" type="xs:string" minOccurs="0"/>
          <xs:element name="columnIdentifier" type="xs:string" minOccurs="0"/>
          <xs:element name="columnStartLocation" type="xs:string" minOccurs="0"/>
          <xs:element name="columnStartsWith" type="xs:string" minOccurs="0"/>
          <xs:element name="location" type="xs:string" minOccurs="0"/>
          <xs:element name="mandatory" type="xs:string" minOccurs="0"/>
          <xs:element name="multiLineAttribute" type="xs:string" minOccurs="0"/>
          <xs:element name="multipleValues" type="xs:string" minOccurs="0"/>
          <xs:element name="pageNumber" type="xs:string" minOccurs="0"/>
          <xs:element name="referenceCol" type="xs:string" minOccurs="0"/>
          <xs:element name="referenceRow" type="xs:string" minOccurs="0"/>
          <xs:element name="rowTextAlignment" type="xs:string" minOccurs="0"/>
          <xs:element name="tableFooter" type="xs:boolean" minOccurs="0"/>
          <xs:element name="valueSeparator" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="htmlParserAttribute">
    <xs:complexContent>
      <xs:extension base="parserAttribute">
        <xs:sequence>
          <xs:element name="containsFieldAttribute" type="xs:string" minOccurs="0"/>
          <xs:element name="fieldExtractionMethod" type="xs:string" minOccurs="0"/>
          <xs:element name="fieldIdentifier" type="xs:string" minOccurs="0"/>
          <xs:element name="fieldSectionId" type="xs:string" minOccurs="0"/>
          <xs:element name="tdNo" type="xs:string" minOccurs="0"/>
          <xs:element name="valueIndex" type="xs:string" minOccurs="0"/>
          <xs:element name="valueSeparator" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="xlsParserAttribute">
    <xs:complexContent>
      <xs:extension base="parserAttribute">
        <xs:sequence>
          <xs:element name="columnContains" type="xs:string" minOccurs="0"/>
          <xs:element name="columnStartsWith" type="xs:string" minOccurs="0"/>
          <xs:element name="excelCol" type="xs:string" minOccurs="0"/>
          <xs:element name="excelRow" type="xs:string" minOccurs="0"/>
          <xs:element name="relativeExcelRow" type="xs:string" minOccurs="0"/>
          <xs:element name="startsWith" type="xs:string" minOccurs="0"/>
          <xs:element name="tableFooter" type="xs:boolean" minOccurs="0"/>
          <xs:element name="tableRowAttribute" type="xs:boolean" minOccurs="0"/>      	
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="kafkaDataSourceObjectWrapper">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="kafkaDataSourceConfigList" type="kafkaDataSourceConfig" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="kafkaDataSourceConfig">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="name" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="kafkaServerIpAddress" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="kafkaServerPort" type="xs:int" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="maxRetryCount" type="xs:int" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="maxResponseWait" type="xs:int" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="kafkaProducerRetryCount" type="xs:int" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="kafkaProducerRequestTimeout" type="xs:int" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="kafkaProducerRetryBackoff" type="xs:int" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="kafkaProducerDeliveryTimeout" type="xs:int" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="snmpAlertCustomObjectWrapper">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="alertCustomObjectList" type="snmpAlertCustomObject" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="snmpAlertCustomObject">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="alertId" type="xs:string" minOccurs="0"/>
          <xs:element name="alertName" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="servicecThresholdList" type="snmpServiceThresholdCustom" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="serverInstanceId" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="snmpServiceThresholdCustom">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="serviceId" type="xs:int" minOccurs="0"/>
          <xs:element name="servicecThreshold" type="xs:int" minOccurs="0"/>
          <xs:element name="svcAlias" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="baseFilter">
    <xs:sequence>
      <xs:element name="field" type="xs:string" minOccurs="0"/>
      <xs:element name="kclass" type="xs:string" minOccurs="0"/>
      <xs:element name="liKlass" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="value" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="xmlParserAttribute">
    <xs:complexContent>
      <xs:extension base="parserAttribute">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="entityRegexCache">
    <xs:complexContent>
      <xs:extension base="toStringProcessor">
        <xs:sequence>
          <xs:element name="entitiesRegex" type="entitiesRegex" minOccurs="0"/>
          <xs:element name="entityValidationRange">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="key" minOccurs="0" type="xs:string"/>
                      <xs:element name="value" minOccurs="0" type="entityValidationRange"/>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="entitiesRegex">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="entity" type="xs:string" minOccurs="0"/>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="key" type="xs:string" minOccurs="0"/>
          <xs:element name="validationRangeList" type="entityValidationRange" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="value" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="entityValidationRange">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="entitiesRegex" type="entitiesRegex" minOccurs="0"/>
          <xs:element name="entityType" type="xs:string" minOccurs="0"/>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="maxRange" type="xs:int" minOccurs="0"/>
          <xs:element name="minRange" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="systemAudit">
    <xs:sequence>
      <xs:element name="actionType" type="xs:string" minOccurs="0"/>
      <xs:element name="auditDate" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="IPAddress" type="xs:string" minOccurs="0"/>
      <xs:element name="id" type="xs:int" minOccurs="0"/>
      <xs:element name="remark" type="xs:string" minOccurs="0"/>
      <xs:element name="staffId" type="xs:string" minOccurs="0"/>
      <xs:element name="status" type="stateEnum" minOccurs="0"/>
      <xs:element name="systemAuditActivity" type="auditActivity" minOccurs="0"/>
      <xs:element ref="systemAuditDetails" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="systemAuditEntity" type="auditEntity" minOccurs="0"/>
      <xs:element name="systemAuditSubEntity" type="auditSubEntity" minOccurs="0"/>
      <xs:element name="userName" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="auditActivity">
    <xs:complexContent>
      <xs:extension base="toStringProcessor">
        <xs:sequence>
          <xs:element name="alias" type="xs:string" minOccurs="0"/>
          <xs:element ref="auditSubEntity" minOccurs="0"/>
          <xs:element name="discription" type="xs:string" minOccurs="0"/>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="message" type="xs:string" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="status" type="stateEnum" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="auditSubEntity">
    <xs:complexContent>
      <xs:extension base="toStringProcessor">
        <xs:sequence>
          <xs:element name="alias" type="xs:string" minOccurs="0"/>
          <xs:element name="auditActivities" type="auditActivity" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="auditEntity" minOccurs="0"/>
          <xs:element name="discription" type="xs:string" minOccurs="0"/>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="status" type="stateEnum" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="auditEntity">
    <xs:complexContent>
      <xs:extension base="toStringProcessor">
        <xs:sequence>
          <xs:element name="alias" type="xs:string" minOccurs="0"/>
          <xs:element name="auditSubEntities" type="auditSubEntity" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="discription" type="xs:string" minOccurs="0"/>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="status" type="stateEnum" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="systemAuditDetails">
    <xs:sequence>
      <xs:element name="fieldname" type="xs:string" minOccurs="0"/>
      <xs:element name="id" type="xs:int" minOccurs="0"/>
      <xs:element name="newvalue" type="xs:string" minOccurs="0"/>
      <xs:element name="oldvalue" type="xs:string" minOccurs="0"/>
      <xs:element name="status" type="stateEnum" minOccurs="0"/>
      <xs:element ref="systemAudit" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="searchStaffAudit">
    <xs:sequence>
      <xs:element name="actionType" type="xs:string" minOccurs="0"/>
      <xs:element name="auditActivityId" type="xs:int" minOccurs="0"/>
      <xs:element name="durationFrom" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="durationTo" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="entityId" type="xs:int" minOccurs="0"/>
      <xs:element name="subEntityId" type="xs:int" minOccurs="0"/>
      <xs:element name="userName" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="asn1ParserAttribute">
    <xs:complexContent>
      <xs:extension base="parserAttribute">
        <xs:sequence>
          <xs:element name="ASN1DataType" type="xs:string" minOccurs="0"/>
          <xs:element name="attrType" type="asn1ATTRTYPE" minOccurs="0"/>
          <xs:element name="childAttributes" type="xs:string" minOccurs="0"/>
          <xs:element name="recordInitilializer" type="xs:boolean" minOccurs="0"/>
          <xs:element name="srcDataFormat" type="sourceFieldDataFormatEnum" minOccurs="0"/>
          <xs:element name="unifiedFieldHoldsChoiceId" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="rapParserAttribute">
    <xs:complexContent>
      <xs:extension base="parserAttribute">
        <xs:sequence>
          <xs:element name="ASN1DataType" type="xs:string" minOccurs="0"/>
          <xs:element name="attrType" type="asn1ATTRTYPE" minOccurs="0"/>
          <xs:element name="childAttributes" type="xs:string" minOccurs="0"/>
          <xs:element name="parseAsJson" type="xs:boolean" minOccurs="0"/>
          <xs:element name="recordInitilializer" type="xs:boolean" minOccurs="0"/>
          <xs:element name="srcDataFormat" type="sourceFieldDataFormatEnum" minOccurs="0"/>
          <xs:element name="unifiedFieldHoldsChoiceId" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="tapParserAttribute">
    <xs:complexContent>
      <xs:extension base="parserAttribute">
        <xs:sequence>
          <xs:element name="ASN1DataType" type="xs:string" minOccurs="0"/>
          <xs:element name="attrType" type="asn1ATTRTYPE" minOccurs="0"/>
          <xs:element name="childAttributes" type="xs:string" minOccurs="0"/>
          <xs:element name="parseAsJson" type="xs:boolean" minOccurs="0"/>
          <xs:element name="recordInitilializer" type="xs:boolean" minOccurs="0"/>
          <xs:element name="srcDataFormat" type="sourceFieldDataFormatEnum" minOccurs="0"/>
          <xs:element name="unifiedFieldHoldsChoiceId" type="xs:string" minOccurs="0"/>
          
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="nrtrdeParserAttribute">
    <xs:complexContent>
      <xs:extension base="parserAttribute">
        <xs:sequence>
          <xs:element name="ASN1DataType" type="xs:string" minOccurs="0"/>
          <xs:element name="attrType" type="asn1ATTRTYPE" minOccurs="0"/>
          <xs:element name="childAttributes" type="xs:string" minOccurs="0"/>
          <xs:element name="parseAsJson" type="xs:boolean" minOccurs="0"/>
          <xs:element name="recordInitilializer" type="xs:boolean" minOccurs="0"/>
          <xs:element name="srcDataFormat" type="sourceFieldDataFormatEnum" minOccurs="0"/>
          <xs:element name="unifiedFieldHoldsChoiceId" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="searchServices">
    <xs:sequence>
      <xs:element name="serverInstanceName" type="xs:string" minOccurs="0"/>
      <xs:element name="serviceId" type="xs:int" minOccurs="0"/>
      <xs:element name="serviceInstanceName" type="xs:string" minOccurs="0"/>
      <xs:element name="serviceType" type="xs:string" minOccurs="0"/>
      <xs:element name="syncStatus" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="searchDeviceMapping">
    <xs:sequence>
      <xs:element name="decodeType" type="xs:string" minOccurs="0"/>
      <xs:element name="deviceName" type="xs:string" minOccurs="0"/>
      <xs:element name="deviceTypeName" type="xs:string" minOccurs="0"/>
      <xs:element name="mappingName" type="xs:string" minOccurs="0"/>
      <xs:element name="vendorTypeName" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="profileEntity">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="entityAlias" type="xs:string" minOccurs="0"/>
          <xs:element name="entityType" type="xs:string" minOccurs="0"/>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="isDefault" type="xs:boolean" minOccurs="0"/>
          <xs:element name="serverType" type="serverType" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="license">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="componentType" type="xs:string" minOccurs="0"/>
          <xs:element name="customer" type="xs:string" minOccurs="0"/>
          <xs:element name="dailyRecords" type="xs:string" minOccurs="0"/>
          <xs:element name="endDate" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="hostName" type="xs:string" minOccurs="0"/>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="licenceType" type="licenseTypeEnum" minOccurs="0"/>
          <xs:element name="location" type="xs:string" minOccurs="0"/>
          <xs:element name="monthlyRecords" type="xs:string" minOccurs="0"/>
          <xs:element name="productType" type="xs:string" minOccurs="0"/>
          <xs:element ref="serverInstance" minOccurs="0"/>
          <xs:element name="smServerId" type="xs:string" minOccurs="0"/>
          <xs:element name="startDate" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="tps" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>


  <xs:complexType name="asciiParserAttribute">
    <xs:complexContent>
      <xs:extension base="parserAttribute">
        <xs:sequence>
          <xs:element name="ipPortSeperator" type="xs:string" minOccurs="0"/>
          <xs:element name="portUnifiedField" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="natFlowParserAttribute">
    <xs:complexContent>
      <xs:extension base="parserAttribute">
        <xs:sequence>
          <xs:element name="destDateFormat" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

	
  
  <xs:complexType name="varLengthAsciiParserAttribute">
    <xs:complexContent>
      <xs:extension base="parserAttribute">
        <xs:sequence>
          <xs:element name="sourceFieldName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="varLengthBinaryParserAttribute">
    <xs:complexContent>
      <xs:extension base="parserAttribute">
        <xs:sequence>
          <xs:element name="attrType" type="asn1ATTRTYPE" minOccurs="0"/>
		  <xs:element name="endLength" type="xs:int" minOccurs="0"/>
          <xs:element name="length" type="xs:int" minOccurs="0"/>
          <xs:element name="postfix" type="xs:string" minOccurs="0"/>
		  <xs:element name="prefix" type="xs:string" minOccurs="0"/>
          <xs:element name="rightDelimiter" type="xs:string" minOccurs="0"/>
		  <xs:element name="sourceFieldName" type="xs:string" minOccurs="0"/>
          <xs:element name="startLength" type="xs:int" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="radiusCollectionService">
    <xs:complexContent>
      <xs:extension base="netflowBinaryCollectionService">
        <xs:sequence/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="auditUserDetails">
    <xs:sequence>
      <xs:element name="loggedInStaffId" type="xs:int" minOccurs="0"/>
      <xs:element name="loggedInUserName" type="xs:string" minOccurs="0"/>
      <xs:element name="remarkName" type="xs:string" minOccurs="0"/>
      <xs:element name="userIpAddress" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

	<xs:complexType name="policyGroupRuleRel">
		<xs:complexContent>
			<xs:extension base="baseModel">
				<xs:sequence>
					<xs:element name="id" type="xs:int" minOccurs="0"/>
					<xs:element name="applicationOrder" type="xs:int" minOccurs="0" />
					<xs:element ref="policyRule" minOccurs="0" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="policyRule">
		<xs:complexContent>
			<xs:extension base="baseModel">
				<xs:sequence>
					<xs:element name="id" type="xs:int" minOccurs="0" />
					<xs:element name="alias" type="xs:string" minOccurs="0" />
					<xs:element name="name" type="xs:string" minOccurs="0" />
					<xs:element name="operator" type="xs:string" minOccurs="0" />
					<xs:element name="globalSequenceRuleId" type="xs:string" minOccurs="0" />
					<xs:element name="description" type="xs:string" minOccurs="0" />
					<xs:element name="alert" type="snmpAlert" minOccurs="0" />
					<xs:element name="alertDescription" type="xs:string" minOccurs="0" />
					<xs:element name="policyConditions" type="policyConditions" minOccurs="0" maxOccurs="unbounded" />
					<xs:element name="policyActions" type="policyActions" minOccurs="0" maxOccurs="unbounded" />
					<xs:element name="policyConditionStr" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
					<xs:element name="policyActionStr" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
					<xs:element name="category" type="xs:string" minOccurs="0" />
					<xs:element name="severity" type="xs:string" minOccurs="0" />
					<xs:element name="errorCode" type="xs:string" minOccurs="0" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="policyAction">
		<xs:complexContent>
			<xs:extension base="baseModel">
				<xs:sequence>
					<xs:element name="id" type="xs:int" minOccurs="0" />
					<xs:element name="alias" type="xs:string" minOccurs="0" />
					<xs:element name="name" type="xs:string" minOccurs="0" />
					<xs:element name="description" type="xs:string" minOccurs="0" />
					<xs:element name="action" type="xs:string" minOccurs="0" />
					<xs:element name="operator" type="xs:string" minOccurs="0" />
					<xs:element name="value" type="xs:string" minOccurs="0" />
					<xs:element name="actionExpression" type="xs:string" minOccurs="0" />
					<xs:element name="type" type="xs:string" minOccurs="0" />					
					<xs:element name="databaseQueryAlias" type="xs:string" minOccurs="0" />
					<xs:element name="actionExpressionForSync" type="xs:string" minOccurs="0" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="policyCondition">
		<xs:complexContent>
			<xs:extension base="baseModel">
				<xs:sequence>
					<xs:element name="id" type="xs:int" minOccurs="0" />
					<xs:element name="alias" type="xs:string" minOccurs="0" />
					<xs:element name="name" type="xs:string" minOccurs="0" />
					<xs:element name="unifiedField" type="xs:string" minOccurs="0" />
					<xs:element name="description" type="xs:string" minOccurs="0" />
					<xs:element name="operator" type="xs:string" minOccurs="0" />
					<xs:element name="value" type="xs:string" minOccurs="0" />
					<xs:element name="conditionExpression" type="xs:string" minOccurs="0" />
					<xs:element name="type" type="xs:string" minOccurs="0" />					
					<xs:element name="databaseQueryAlias" type="xs:string" minOccurs="0" />
					<xs:element name="conditionExpressionForSync" type="xs:string" minOccurs="0" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
  
  <xs:complexType name="policyGroupRel">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="applicationOrder" type="xs:int" minOccurs="0"/>
          <xs:element name="group" type="policyGroup" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="policyConditions">
    <xs:complexContent>
      <xs:extension base="toStringProcessor">
        <xs:sequence>
          <xs:element name="policyCondition" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="policyActions">
    <xs:complexContent>
      <xs:extension base="toStringProcessor">
        <xs:sequence>
          <xs:element name="policyAction" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
    <xs:complexType name="policyRules">
    <xs:complexContent>
      <xs:extension base="toStringProcessor">
        <xs:sequence>
          <xs:element name="policyRule" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="policyGroups">
    <xs:complexContent>
      <xs:extension base="toStringProcessor">
        <xs:sequence>
          <xs:element name="policyGroup" type="xs:string" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="policyGroup">
		<xs:complexContent>
			<xs:extension base="baseModel">
				<xs:sequence>
					<xs:element name="id" type="xs:int" minOccurs="0" />
					<xs:element name="alias" type="xs:string" minOccurs="0" />
					<xs:element name="name" type="xs:string" minOccurs="0" />
					<xs:element name="description" type="xs:string" minOccurs="0" />
					<xs:element name="policyRules" type="policyRules" minOccurs="0" maxOccurs="unbounded" />
					<xs:element name="policyRuleStr" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
  <xs:complexType name="policy">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="alias" type="xs:string" minOccurs="0"/>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="policyGroups" type="policyGroups" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="policyGroupStr" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
 <xs:complexType name="databaseQuery">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="alias" type="xs:string" minOccurs="0"/>
          <xs:element name="queryName" type="xs:string" minOccurs="0"/>
          <xs:element name="queryValue" type="xs:string" minOccurs="0"/>
          <xs:element name="returnMultipleRowsEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="cacheEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="logicalOperator" type="xs:string" minOccurs="0"/>
          <xs:element name="conditionExpressionEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="conditionExpression" type="xs:string" minOccurs="0"/>
          <xs:element name="databaseQueryConditions" type="databaseQueryCondition" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="databaseQueryActions" type="databaseQueryAction" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="outputDbField" type="xs:string" minOccurs="0"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
          <xs:element name="associationStatus" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>


<xs:complexType name="databaseQueryCondition">
	<xs:complexContent>
		<xs:extension base="baseModel">
			<xs:sequence>
				  <xs:element name="id" type="xs:int" minOccurs="0"/>
		          <xs:element name="databaseFieldName" type="xs:string" minOccurs="0"/>
		          <xs:element name="policyConditionOperatorEnum" type="xs:string" minOccurs="0"/>
		          <xs:element name="unifiedField" type="xs:string" minOccurs="0"/>
		          <xs:element name="databaseKey" type="xs:boolean" minOccurs="0"/>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>


<xs:complexType name="databaseQueryAction">
	<xs:complexContent>
		<xs:extension base="baseModel">
			<xs:sequence>
				 <xs:element name="id" type="xs:int" minOccurs="0"/>
		          <xs:element name="databaseFieldName" type="xs:string" minOccurs="0"/>
		          <xs:element name="unifiedField" type="xs:string" minOccurs="0"/>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>





  <xs:simpleType name="snmpCommunityType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Public"/>
      <xs:enumeration value="Private"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="rollingTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="TIME_BASED"/>
      <xs:enumeration value="VOLUME_BASED"/>
      <xs:enumeration value="BOTH"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="requestTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="GET"/>
      <xs:enumeration value="POST"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="messageTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Confirmable"/>
      <xs:enumeration value="NonConfirmable"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="securityTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="PSK"/>
      <xs:enumeration value="X509"/>
      <xs:enumeration value="RPK"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="proxySchemaTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="HTTP"/>
      <xs:enumeration value="HTTPS"/>
      <xs:enumeration value="COAP"/>
      <xs:enumeration value="COAPS"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="stateEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ACTIVE"/>
      <xs:enumeration value="INACTIVE"/>
      <xs:enumeration value="DELETED"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="serviceTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="MAIN"/>
      <xs:enumeration value="ADDITIONAL"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="serviceCategoryEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ONLINE"/>
      <xs:enumeration value="OFFLINE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="startUpModeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Automatic"/>
      <xs:enumeration value="Manual"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="driverCategory">
    <xs:restriction base="xs:string">
      <xs:enumeration value="COLLECTION"/>
      <xs:enumeration value="DISTRIBUTION"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="dataTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="INTEGER"/>
      <xs:enumeration value="STRING"/>
      <xs:enumeration value="DATE"/>
      <xs:enumeration value="IP"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="positionEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="left"/>
      <xs:enumeration value="right"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="asn1ATTRTYPE">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ATTRIBUTE"/>
      <xs:enumeration value="HEADER"/>
      <xs:enumeration value="TRAILER"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="charSetEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UTF8"/>
      <xs:enumeration value="UTF16"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="fileHeaderFooterTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="STANDARD"/>
      <xs:enumeration value="BAF"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="fileTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="KEY_VALUE_RECORD"/>
      <xs:enumeration value="FILE_HEADER_FOOTER"/>
      <xs:enumeration value="RECORD_HEADER"/>
      <xs:enumeration value="DELIMITER"/>
      <xs:enumeration value="LINEAR_KEY_VALUE_RECORD"></xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="fileGroupEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DAY"/>
      <xs:enumeration value="MONTH"/>
      <xs:enumeration value="YEAR"/>
      <xs:enumeration value="YEAR-MONTH"/>
      <xs:enumeration value="YEAR-MONTH-DAY"/>
      <xs:enumeration value="NA"/>      
      <xs:enumeration value="NA"/>

    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="fileTransferModeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="BINARY"/>
      <xs:enumeration value="ASCII"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="unifiedFiedEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="APartyLocationCode"/>
      <xs:enumeration value="APartyMDN"/>
      <xs:enumeration value="APartyMIN"/>
      <xs:enumeration value="BPartyLocationCode"/>
      <xs:enumeration value="BPartyMDN"/>
      <xs:enumeration value="BPartyMIN"/>
      <xs:enumeration value="CPartyLocationCode"/>
      <xs:enumeration value="CPartyMDN"/>
      <xs:enumeration value="CPartyMIN"/>
      <xs:enumeration value="CallDirection"/>
      <xs:enumeration value="DistanceBand"/>
      <xs:enumeration value="Duration"/>
      <xs:enumeration value="EgressCallDirection"/>
      <xs:enumeration value="EgressEndDate"/>
      <xs:enumeration value="EgressStartDate"/>
      <xs:enumeration value="EgressTrunkGroupName"/>
      <xs:enumeration value="EndDate"/>
      <xs:enumeration value="EventSubType"/>
      <xs:enumeration value="EventType"/>
      <xs:enumeration value="General1"/>
      <xs:enumeration value="General10"/>
      <xs:enumeration value="General11"/>
      <xs:enumeration value="General12"/>
      <xs:enumeration value="General13"/>
      <xs:enumeration value="General14"/>
      <xs:enumeration value="General15"/>
      <xs:enumeration value="General16"/>
      <xs:enumeration value="General17"/>
      <xs:enumeration value="General18"/>
      <xs:enumeration value="General19"/>
      <xs:enumeration value="General2"/>
      <xs:enumeration value="General20"/>
      <xs:enumeration value="General21"/>
      <xs:enumeration value="General22"/>
      <xs:enumeration value="General23"/>
      <xs:enumeration value="General24"/>
      <xs:enumeration value="General25"/>
      <xs:enumeration value="General26"/>
      <xs:enumeration value="General27"/>
      <xs:enumeration value="General28"/>
      <xs:enumeration value="General29"/>
      <xs:enumeration value="General3"/>
      <xs:enumeration value="General31"/>
      <xs:enumeration value="General32"/>
      <xs:enumeration value="General33"/>
      <xs:enumeration value="General34"/>
      <xs:enumeration value="General35"/>
      <xs:enumeration value="General36"/>
      <xs:enumeration value="General37"/>
      <xs:enumeration value="General38"/>
      <xs:enumeration value="General39"/>
      <xs:enumeration value="General4"/>
      <xs:enumeration value="General40"/>
      <xs:enumeration value="General41"/>
      <xs:enumeration value="General42"/>
      <xs:enumeration value="General43"/>
      <xs:enumeration value="General44"/>
      <xs:enumeration value="General45"/>
      <xs:enumeration value="General46"/>
      <xs:enumeration value="General47"/>
      <xs:enumeration value="General48"/>
      <xs:enumeration value="General49"/>
      <xs:enumeration value="General5"/>
      <xs:enumeration value="General50"/>
      <xs:enumeration value="General51"/>
      <xs:enumeration value="General52"/>
      <xs:enumeration value="General53"/>
      <xs:enumeration value="General54"/>
      <xs:enumeration value="General55"/>
      <xs:enumeration value="General56"/>
      <xs:enumeration value="General57"/>
      <xs:enumeration value="General58"/>
      <xs:enumeration value="General59"/>
      <xs:enumeration value="General6"/>
      <xs:enumeration value="General60"/>
      <xs:enumeration value="General61"/>
      <xs:enumeration value="General62"/>
      <xs:enumeration value="General63"/>
      <xs:enumeration value="General64"/>
      <xs:enumeration value="General65"/>
      <xs:enumeration value="General66"/>
      <xs:enumeration value="General67"/>
      <xs:enumeration value="General68"/>
      <xs:enumeration value="General69"/>
      <xs:enumeration value="General7"/>
      <xs:enumeration value="General70"/>
      <xs:enumeration value="General71"/>
      <xs:enumeration value="General72"/>
      <xs:enumeration value="General73"/>
      <xs:enumeration value="General74"/>
      <xs:enumeration value="General75"/>
      <xs:enumeration value="General76"/>
      <xs:enumeration value="General77"/>
      <xs:enumeration value="General78"/>
      <xs:enumeration value="General79"/>
      <xs:enumeration value="General8"/>
      <xs:enumeration value="General80"/>
      <xs:enumeration value="General81"/>
      <xs:enumeration value="General82"/>
      <xs:enumeration value="General83"/>
      <xs:enumeration value="General84"/>
      <xs:enumeration value="General85"/>
      <xs:enumeration value="General86"/>
      <xs:enumeration value="General87"/>
      <xs:enumeration value="General88"/>
      <xs:enumeration value="General89"/>
      <xs:enumeration value="General9"/>
      <xs:enumeration value="General90"/>
      <xs:enumeration value="General91"/>
      <xs:enumeration value="General92"/>
      <xs:enumeration value="General93"/>
      <xs:enumeration value="General94"/>
      <xs:enumeration value="General95"/>
      <xs:enumeration value="General96"/>
      <xs:enumeration value="General97"/>
      <xs:enumeration value="General98"/>
      <xs:enumeration value="General99"/>
      <xs:enumeration value="General100"/>
      <xs:enumeration value="IngressCallDirection"/>
      <xs:enumeration value="IngressEndDate"/>
      <xs:enumeration value="IngressStartDate"/>
      <xs:enumeration value="IngressTrunkGroupName"/>
      <xs:enumeration value="OnNetCode"/>
      <xs:enumeration value="OriginalRecordNumber"/>
      <xs:enumeration value="PartnerId1"/>
      <xs:enumeration value="PartnerId2"/>
      <xs:enumeration value="RatingStream"/>
      <xs:enumeration value="RecordNumber"/>
      <xs:enumeration value="SourceUnitName"/>
      <xs:enumeration value="StartDate"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="cdrFileDateTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="MAXIMUM"/>
      <xs:enumeration value="MINIMUM"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="cdrDateSummaryTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DAY"/>
      <xs:enumeration value="HOUR"/>
      <xs:enumeration value="MINUTE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="timeUnitEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DAY"/>
      <xs:enumeration value="HOUR"/>
      <xs:enumeration value="MINUTE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="duplicateRecordPolicyTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ACROSS_FILE"/>
      <xs:enumeration value="IN_FILE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="filterGroupTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Rulewise"/>
      <xs:enumeration value="Groupwise"/>
      <xs:enumeration value="NA"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="hashDataTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NAT_DATA_RECORD"/>
      <xs:enumeration value="USAGE_DATA_RECORD"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="partitionFieldEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Date"/>
      <xs:enumeration value="PRIVATE_IP"/>
      <xs:enumeration value="PUBLIC_IP"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="fileActionParamEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="destpath"/>
      <xs:enumeration value="ext"/>
      <xs:enumeration value="na"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="sortingCriteriaEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="FILE_NAME"/>
      <xs:enumeration value="LAST_MODIFIED_DATE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="snmpVersionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="V0"/>
      <xs:enumeration value="V1"/>
      <xs:enumeration value="V2"/>
      <xs:enumeration value="V3"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="snmpServerType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Self"/>
      <xs:enumeration value="Listener"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="snmpAlertTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="SERVER_INSTANCE"/>
      <xs:enumeration value="COLLECTION_SERVICE"/>
      <xs:enumeration value="DATA_CONSOLIDATION_SERVICE"/>
      <xs:enumeration value="DISTRIBUTION_SERVICE"/>
      <xs:enumeration value="GTPPRIME_COLLECTION_SERVICE"/>
      <xs:enumeration value="IPLOG_PARSING_SERVICE"/>
      <xs:enumeration value="NATFLOWBINARY_COLLECTION_SERVICE"/>
      <xs:enumeration value="NATFLOW_COLLECTION_SERVICE"/>
      <xs:enumeration value="PARSING_SERVICE"/>
      <xs:enumeration value="PROCESSING_SERVICE"/>
      <xs:enumeration value="RADIUS_COLLECTION_SERVICE"/>
      <xs:enumeration value="SYSLOG_COLLECTION_SERVICE"/>
      <xs:enumeration value="MQTT_COLLECTION_SERVICE"/>
      <xs:enumeration value="AGGREGATION_SERVICE" />
      <xs:enumeration value="DIAMETER_COLLECTION_SERVICE" />
      <xs:enumeration value="COAP_COLLECTION_SERVICE"/>
      <xs:enumeration value="HTTP2_COLLECTION_SERVICE"/>
      <xs:enumeration value="COLLECTION_SERVICE"/>
      <xs:enumeration value="GENERIC"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="logLevelEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALL"/>
      <xs:enumeration value="ERROR"/>
      <xs:enumeration value="INFO"/>
      <xs:enumeration value="DEBUG"/>
      <xs:enumeration value="WARN"/>
      <xs:enumeration value="OFF"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="logRollingTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="VOLUME_BASED"/>
      <xs:enumeration value="TIME_BASED"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="pluginTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ASCII_PARSING_PLUGIN"/>
      <xs:enumeration value="ASN1_PARSING_PLUGIN"/>
      <xs:enumeration value="DETAIL_LOCAL_PARSING_PLUGIN"/>
      <xs:enumeration value="DIGITEL_BINARY_PARSING_PLUGIN"/>
      <xs:enumeration value="FIXED_LENGTH_ASCII_PARSING_PLUGIN"/>
      <xs:enumeration value="FIXED_LENGTH_BINARY_PARSING_PLUGIN"/>
      <xs:enumeration value="MT_ALCATEL_BINARY_PARSING_PLUGIN"/>
      <xs:enumeration value="MT_SIEMENS_BINARY_PARSING_PLUGIN"/>
      <xs:enumeration value="NATFLOW_ASN_PARSING_PLUGIN"/>
      <xs:enumeration value="NATFLOW_PARSING_PLUGIN"/>
      <xs:enumeration value="REGEX_PARSING_PLUGIN"/>
      <xs:enumeration value="XML_PARSING_PLUGIN"/>
      <xs:enumeration value="JSON_PARSING_PLUGIN"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="serviceSubtypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="COLLECTION_SERVICE"/>
      <xs:enumeration value="PARSING_SERVICE"/>
      <xs:enumeration value="PROCESSING_SERVICE"/>
      <xs:enumeration value="DISTRIBUTION_SERVICE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="hashSeparatorEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UNDERSCORE"/>
      <xs:enumeration value="HYPHEN"/>
      <xs:enumeration value="DOT"/>
      <xs:enumeration value="PIPE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="schedulingDateEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="1"/>
      <xs:enumeration value="2"/>
      <xs:enumeration value="3"/>
      <xs:enumeration value="4"/>
      <xs:enumeration value="5"/>
      <xs:enumeration value="6"/>
      <xs:enumeration value="7"/>
      <xs:enumeration value="8"/>
      <xs:enumeration value="9"/>
      <xs:enumeration value="10"/>
      <xs:enumeration value="11"/>
      <xs:enumeration value="12"/>
      <xs:enumeration value="13"/>
      <xs:enumeration value="14"/>
      <xs:enumeration value="15"/>
      <xs:enumeration value="16"/>
      <xs:enumeration value="17"/>
      <xs:enumeration value="18"/>
      <xs:enumeration value="19"/>
      <xs:enumeration value="20"/>
      <xs:enumeration value="21"/>
      <xs:enumeration value="22"/>
      <xs:enumeration value="23"/>
      <xs:enumeration value="24"/>
      <xs:enumeration value="25"/>
      <xs:enumeration value="26"/>
      <xs:enumeration value="27"/>
      <xs:enumeration value="28"/>
      <xs:enumeration value="0"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="schedulingDayEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="0"/>
      <xs:enumeration value="1"/>
      <xs:enumeration value="2"/>
      <xs:enumeration value="3"/>
      <xs:enumeration value="4"/>
      <xs:enumeration value="5"/>
      <xs:enumeration value="6"/>
    </xs:restriction>
  </xs:simpleType>


  <xs:simpleType name="licenseTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="TRIAL"/>
      <xs:enumeration value="FULL"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="schedulingTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="daily"/>
      <xs:enumeration value="weekly"/>
      <xs:enumeration value="monthly"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="distributionDriverTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="FTP_DISTRIBUTION_DRIVER"/>
      <xs:enumeration value="DATABASE_DISTRIBUTION_DRIVER"/>
      <xs:enumeration value="HADOOP_DISTRIBUTION_DRIVER"/>
      <xs:enumeration value="LOCAL_DISTRIBUTION_DRIVER"/>
      <xs:enumeration value="SFTP_DISTRIBUTION_DRIVER"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="pluginTypeCategoryEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="PARSER"/>
      <xs:enumeration value="COMPOSER"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="systemBackUpPathOptionEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DELETE"/>
      <xs:enumeration value="REGEXPARSER"/>
      <xs:enumeration value="STAFFIMAGE"/>
      <xs:enumeration value="SYSTEMPARAMIMAGE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="sourceFieldDataFormatEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="HexToDecimal"/>
      <xs:enumeration value="HexTOIp"/>
      <xs:enumeration value="Tbcd"/>
      <xs:enumeration value="Bcd"/>
      <xs:enumeration value="BIT_STRING"/>
      <xs:enumeration value="HexToIpV6"/>
      <xs:enumeration value="HexToText"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="separatorEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value=","/>
      <xs:enumeration value="."/>
      <xs:enumeration value=":"/>
      <xs:enumeration value=";"/>
      <xs:enumeration value="s"/>
      <xs:enumeration value="-"/>
      <xs:enumeration value="_"/>
      <xs:enumeration value="Other"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="statisticalOperEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="SUM"/>
      <xs:enumeration value="MAX"/>
      <xs:enumeration value="MIN"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="dateRangeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="HOUR"/>
      <xs:enumeration value="DAY"/>
      <xs:enumeration value="MONTH"/>
      <xs:enumeration value="YEAR"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="statisticalDataTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DATE"/>
      <xs:enumeration value="FLOATING"/>
      <xs:enumeration value="NUMERIC"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="sourceDateFormatEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="MM-dd-yyyy HH:mm:ss"/>
      <xs:enumeration value="dd-MM-yyyy HH:mm:ss"/>
      <xs:enumeration value="MM/dd/yyyy HH:mm:ss"/>
      <xs:enumeration value="dd/MM/yyyy HH:mm:ss"/>
      <xs:enumeration value="yyyy/dd/mm HH:mm:ss"/>
      <xs:enumeration value="yyyy/mm/dd HH:mm:ss"/>
      <xs:enumeration value="Other"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="filterActionEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="move"/>
      <xs:enumeration value="rename"/>
      <xs:enumeration value="na"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="fileStorageEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="LOCAL"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="indexTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="HASHBASE"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="sortingTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ASCENDING"/>
      <xs:enumeration value="DESCENDING"/>
      <xs:enumeration value="NA"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="fileFetchTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="local"/>
      <xs:enumeration value="telnet"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="decodeTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="UPSTREAM"/>
      <xs:enumeration value="DOWNSTREAM"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="parserTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="BAF"/>
      <xs:enumeration value="STANDARD"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="dbSourceTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ORACLE"/>
      <xs:enumeration value="TIMESTEN"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="collectionDriverTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="FTP_COLLECTION_DRIVER"/>
      <xs:enumeration value="SFTP_COLLECTION_DRIVER"/>
      <xs:enumeration value="LOCAL_COLLECTION_DRIVER"/>
    </xs:restriction>
  </xs:simpleType>
  
    <xs:complexType name="databaseDistributionDriverAttribute">
    <xs:complexContent>
      <xs:extension base="baseModel">
        <xs:sequence>
          <xs:element name="id" type="xs:int" minOccurs="0"/>
          <xs:element name="databaseFieldName" type="xs:string" nillable="false" minOccurs="0"/>
          <xs:element name="unifiedFieldName" type="xs:string" nillable="false" minOccurs="0"/>
          <xs:element name="dataType" type="driverDataTypeEnum" minOccurs="0"/>
          <xs:element name="defualtValue" type="xs:string" nillable="true" minOccurs="0"/>
          <xs:element name="paddingEnable" type="xs:boolean" minOccurs="0"/>
          <xs:element name="length" type="xs:int" minOccurs="0"/>
          <xs:element name="paddingType" type="positionEnum" minOccurs="0"/>	
          <xs:element name="paddingChar" type="xs:string" minOccurs="0"/>	
          <xs:element name="prefix" type="xs:string" minOccurs="0"/>	
          <xs:element name="suffix" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
    <xs:simpleType name="driverDataTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="INTEGER"/>
      <xs:enumeration value="STRING"/>
      <xs:enumeration value="DATE"/>
      <xs:enumeration value="CHAR"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="secureSchemeTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="HTTP"/>
      <xs:enumeration value="HTTPS"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="fileMergeGroupingByEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="all"/>
      <xs:enumeration value="hourly"/>
    </xs:restriction>
  </xs:simpleType>
  
</xs:schema>
