/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.34
 * Generated at: 2023-11-13 06:47:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.iam;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.elitecore.sm.common.constants.ControllerConstants;
import com.elitecore.sm.util.MapCache;
import com.elitecore.sm.common.constants.SystemParametersConstant;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/jsp/iam/migration-popup.jsp", Long.valueOf(1699857843387L));
    _jspx_dependants.put("file:/home/upendra/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/5.3.20/8ac1b72a1f5c41fdc2cb3340cd94f795af260301/spring-webmvc-5.3.20.jar", Long.valueOf(1679656233526L));
    _jspx_dependants.put("jar:file:/home/upendra/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/5.3.20/8ac1b72a1f5c41fdc2cb3340cd94f795af260301/spring-webmvc-5.3.20.jar!/META-INF/spring.tld", Long.valueOf(1652232424000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.elitecore.sm.util.MapCache");
    _jspx_imports_classes.add("com.elitecore.sm.common.constants.ControllerConstants");
    _jspx_imports_classes.add("com.elitecore.sm.common.constants.SystemParametersConstant");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!doctype html>\n");
      out.write("<!--[if lt IE 7]>      <html class=\"no-js lt-ie9 lt-ie8 lt-ie7 lt-ie10\"> <![endif]-->\n");
      out.write("<!--[if IE 7]>         <html class=\"no-js lt-ie9 lt-ie8 lt-ie10\"> <![endif]-->\n");
      out.write("<!--[if IE 8]>         <html class=\"no-js lt-ie9 lt-ie10\"> <![endif]-->\n");
      out.write("<!--[if IE 9]>         <html class=\"no-js lt-ie10\"> <![endif]-->\n");
      out.write("<html>\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/newheader.jsp", out, false);
      out.write("\n");
      out.write("\t\n");
      out.write("\t<!-- Page-specific Plugin CSS: -->\n");
      out.write("    <link rel=\"stylesheet\" href=\"styles/vendor/jquery.pnotify.default.css\">\n");
      out.write("\t<link rel=\"stylesheet\" href=\"styles/vendor/select2/select2.css\">\n");
      out.write("\t\n");
      out.write("   <body class=\"skin-blue sidebar-mini\">\n");
      out.write("   <div class=\"wrapper\"> \n");
      out.write("    \t\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/newtopNavigationPanel.jsp", out, false);
      out.write("\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/newleftMenu.jsp", out, false);
      out.write("\n");
      out.write("        <div class=\"content-wrapper\">\n");
      out.write("        \n");
      out.write("        <section class=\"content-header\">\n");
      out.write("        <div class=\"fullwidth\">\n");
      out.write("        <div id=\"content-scroll-d\" class=\"content-scroll\">\n");
      out.write("        <div class=\"fullwidth\">\n");
      out.write("        <h4 style=\"margin-top:10px; margin-bottom:0px; font-size:11px;\">\n");
      out.write("        <a href=\"home\"><img id=\"home_lnk\" src=\"img/tile-icon.png\" class=\"vmiddle\" alt=\"Title Icon\"/></a>\n");
      out.write("        \t<span class=\"spanBreadCrumb\" style=\"line-height: 30px;\"><strong>");
      if (_jspx_meth_spring_005fmessage_005f0(_jspx_page_context))
        return;
      out.write("</strong></span>\n");
      out.write("        \t</h4>\n");
      out.write("        \t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/responseMsg.jsp", out, false);
      out.write("\n");
      out.write("        \t");
      out.write("\n");
      out.write("        \t");

        	String kubernetes_env = System.getenv("KUBERNETES_ENV");
        	String grafana_dashborad_url = null;
        	boolean is_kubernetes = false;
        	if (kubernetes_env !=null && kubernetes_env.equalsIgnoreCase("true")){
        		is_kubernetes = true;
        		grafana_dashborad_url = System.getenv("GRAFANA_DASHBOARD_URL");        		
        	}
        	
      out.write("\n");
      out.write("            ");
 if(!is_kubernetes) { 
      out.write("\n");
      out.write("            \t");
      out.write("\n");
      out.write("            ");
 }else if(grafana_dashborad_url != null){ 
      out.write("\n");
      out.write("\t\t\t\t");
      out.write("\n");
      out.write("\t\t\t");
 } 
      out.write("\n");
      out.write("            </br>\n");
      out.write("            ");
      out.write("\n");
      out.write("          </div>\n");
      out.write("          </div>\n");
      out.write("          </div>\n");
      out.write("          \n");
      out.write("\n");
      out.write("        </section>\n");
      out.write("        </div>\n");
      out.write("\t        ");
      out.write("\n");
      out.write("        </div>\n");
      out.write(" \t\t<footer class=\"main-footer positfix\">      \n");
      out.write("\t\t\t<div class=\"fooinn\">\n");
      out.write("        \t\t<div class=\"fullwidth\">\n");
      out.write("        \n");
      out.write("\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/newfooter.jsp", out, false);
      out.write("\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</footer>\t\t\t\n");
      out.write("    </body>\n");
      out.write("    ");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!--start version migration popup -->\n");
      out.write("<a href=\"#divVersionMigration\" class=\"fancybox\" style=\"display:none ;\" id=\"version_migration_link\">#</a>\n");
      out.write("\n");
      out.write(" <div id=\"divVersionMigration\" style=\" width:100%; display: none;\" >\n");
      out.write("\t\t    <div class=\"modal-content\">\n");
      out.write("\t\t        <div class=\"modal-header padding10\">\n");
      out.write("\t\t            <h4 class=\"modal-title\">");
      if (_jspx_meth_spring_005fmessage_005f1(_jspx_page_context))
        return;
      out.write("</h4>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div class=\"modal-body padding10 inline-form\">\n");
      out.write("\t    \t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/responseMsg.jsp", out, false);
      out.write("\n");
      out.write("\t\t\t     \t<div class=\"modal-body padding10 inline-form\">\n");
      out.write("\t\t        \t\t<p id=\"lessWarn\">\n");
      out.write("\t\t\t\t\t   <!--      <span class=\"successMessage\"></span><br/><br/> -->\n");
      out.write("\t\t        \t\t\t<span class=\"proccessingMessage\">");
      if (_jspx_meth_spring_005fmessage_005f2(_jspx_page_context))
        return;
      out.write("</span>\n");
      out.write("\t\t        \t\t</p>\n");
      out.write("\t\t        \t</div>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div id=\"migration-buttons-div\" class=\"modal-footer padding10\">\n");
      out.write("\t\t            <button type=\"button\" class=\"btn btn-grey btn-xs \" data-dismiss=\"modal\" onclick=\"upgradeVersion()\">");
      if (_jspx_meth_spring_005fmessage_005f3(_jspx_page_context))
        return;
      out.write("</button>\n");
      out.write("            \t\t<button type=\"button\" class=\"btn btn-grey btn-xs \" data-dismiss=\"modal\" onclick=\"closeFancyBox();\">");
      if (_jspx_meth_spring_005fmessage_005f4(_jspx_page_context))
        return;
      out.write("</button>\n");
      out.write("                </div>\n");
      out.write("\t\t        <div id=\"migration-buttons-close-div\" style=\"display: none\" class=\"modal-footer padding10\">\n");
      out.write("\t\t    \t\t<button type=\"button\" class=\"btn btn-grey btn-xs \" data-dismiss=\"modal\" onclick=\"closeFancyBox();\">Close</button>    \n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div id=\"migration-progress-bar-div\" class=\"modal-footer padding10 text-left\" style=\"display: none;\">\n");
      out.write("\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/processing-bar.jsp", out, false);
      out.write("\n");
      out.write("\t\t\t\t</div>\t\n");
      out.write("\t\t    </div>\n");
      out.write("\t\t    <!-- /.modal-content --> \n");
      out.write("\t\t</div>\n");
      out.write("\n");
      out.write(" <script type=\"text/javascript\">\t\t\t\n");
      out.write("\t$(document).ready(function() {\n");
      out.write("\t\t");
 if(session.getAttribute("userName").equals("admin") &&  Boolean.FALSE.toString().equals((String)MapCache.getConfigValueAsObject(SystemParametersConstant.VERSION_MIGRATE))){  
      out.write(" \n");
      out.write("\t\t\t$(\"#version_migration_link\").click();\t\n");
      out.write("\t\t\tupgradeVersion();\n");
      out.write("\t\t");
} 
      out.write(" \n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\tfunction upgradeVersion(){\t\t\n");
      out.write("\t\t$(\"#migration-buttons-div\").hide();\n");
      out.write("\t\t$(\"#migration-progress-bar-div\").show();\n");
      out.write("\t\tclearAllMessages();\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t\t\turl: '");
      out.print( ControllerConstants.MIGRATEALLSERVERCONFIG );
      out.write("',\n");
      out.write("\t\t\t    cache: false,\n");
      out.write("\t\t\t\tasync: true,\n");
      out.write("\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\ttype: \"GET\",\n");
      out.write("\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t$(\"#migration-buttons-close-div\").show();\n");
      out.write("\t\t\t\t\t$(\"#migration-progress-bar-div\").hide();\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write("\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t    \t/* if(response.success ==='true') { */\n");
      out.write("\t\t\t    \t$('.proccessingMessage').html('');\n");
      out.write("\t\t\t    \t$('.proccessingMessage').html(\"Configuration are loaded successfully.\");\n");
      out.write("\t\t\t    \tcloseFancyBox();\n");
      out.write("\t\t\t\t\t/* } */\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t    \t$(\"#migration-buttons-div\").show();\n");
      out.write("\t\t\t\t\t$(\"#migration-progress-bar-div\").hide();\n");
      out.write("\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t}\n");
      out.write("</script>\t\n");
      out.write("<!--End version migration popup -->\n");
      out.write(" \n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_spring_005fmessage_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f0 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f0_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f0.setParent(null);
      // /WEB-INF/jsp/iam/index.jsp(28,73) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f0.setCode("index.page.heading");
      int[] _jspx_push_body_count_spring_005fmessage_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f0 = _jspx_th_spring_005fmessage_005f0.doStartTag();
        if (_jspx_th_spring_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f0);
      _jspx_th_spring_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f1 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f1_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f1.setParent(null);
      // /WEB-INF/jsp/iam/migration-popup.jsp(10,38) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f1.setCode("serverManagement.versionMigration.popup.heading");
      int[] _jspx_push_body_count_spring_005fmessage_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f1 = _jspx_th_spring_005fmessage_005f1.doStartTag();
        if (_jspx_th_spring_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f1);
      _jspx_th_spring_005fmessage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f1, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f2 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f2_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f2.setParent(null);
      // /WEB-INF/jsp/iam/migration-popup.jsp(17,46) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f2.setCode("serverManagement.versionMigration.waiting.message");
      int[] _jspx_push_body_count_spring_005fmessage_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f2 = _jspx_th_spring_005fmessage_005f2.doStartTag();
        if (_jspx_th_spring_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f2);
      _jspx_th_spring_005fmessage_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f2, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f3 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f3_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f3.setParent(null);
      // /WEB-INF/jsp/iam/migration-popup.jsp(22,113) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f3.setCode("btn.label.yes");
      int[] _jspx_push_body_count_spring_005fmessage_005f3 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f3 = _jspx_th_spring_005fmessage_005f3.doStartTag();
        if (_jspx_th_spring_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f3[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f3.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f3.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f3);
      _jspx_th_spring_005fmessage_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f3, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f4 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f4_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f4.setParent(null);
      // /WEB-INF/jsp/iam/migration-popup.jsp(23,113) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f4.setCode("btn.label.no");
      int[] _jspx_push_body_count_spring_005fmessage_005f4 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f4 = _jspx_th_spring_005fmessage_005f4.doStartTag();
        if (_jspx_th_spring_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f4[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f4.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f4.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f4);
      _jspx_th_spring_005fmessage_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f4, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f4_reused);
    }
    return false;
  }
}
