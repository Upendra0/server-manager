/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.34
 * Generated at: 2023-11-13 06:50:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.service;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.elitecore.sm.common.constants.BaseConstants;
import com.elitecore.sm.util.MapCache;
import com.elitecore.sm.common.constants.SystemParametersConstant;
import com.elitecore.sm.common.constants.ControllerConstants;

public final class serviceAgentList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/home/upendra/.gradle/caches/modules-2/files-2.1/org.springframework.security/spring-security-taglibs/5.5.7/757234463d9633361d863c14e1b81dd82e16482e/spring-security-taglibs-5.5.7.jar!/META-INF/security.tld", Long.valueOf(1652702070000L));
    _jspx_dependants.put("file:/home/upendra/.gradle/caches/modules-2/files-2.1/org.springframework.security/spring-security-taglibs/5.5.7/757234463d9633361d863c14e1b81dd82e16482e/spring-security-taglibs-5.5.7.jar", Long.valueOf(1679656227262L));
    _jspx_dependants.put("file:/home/upendra/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/5.3.20/8ac1b72a1f5c41fdc2cb3340cd94f795af260301/spring-webmvc-5.3.20.jar", Long.valueOf(1679656233526L));
    _jspx_dependants.put("jar:file:/home/upendra/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/5.3.20/8ac1b72a1f5c41fdc2cb3340cd94f795af260301/spring-webmvc-5.3.20.jar!/META-INF/spring.tld", Long.valueOf(1652232424000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.elitecore.sm.util.MapCache");
    _jspx_imports_classes.add("com.elitecore.sm.common.constants.ControllerConstants");
    _jspx_imports_classes.add("com.elitecore.sm.common.constants.BaseConstants");
    _jspx_imports_classes.add("com.elitecore.sm.common.constants.SystemParametersConstant");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.release();
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      //  sec:authorize
      org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f0 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
      boolean _jspx_th_sec_005fauthorize_005f0_reused = false;
      try {
        _jspx_th_sec_005fauthorize_005f0.setPageContext(_jspx_page_context);
        _jspx_th_sec_005fauthorize_005f0.setParent(null);
        // /WEB-INF/jsp/service/serviceAgentList.jsp(7,0) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sec_005fauthorize_005f0.setAccess("hasAnyAuthority('SYSTEM_AGENT_CONFIGURATION')");
        int _jspx_eval_sec_005fauthorize_005f0 = _jspx_th_sec_005fauthorize_005f0.doStartTag();
        if (_jspx_eval_sec_005fauthorize_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          out.write("\n");
          out.write("<div class=\"fullwidth\">\n");
          out.write("\t<div class=\"title2\">\n");
          out.write("\t\t");
          if (_jspx_meth_spring_005fmessage_005f0(_jspx_th_sec_005fauthorize_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("       </div>\n");
          out.write("</div>\n");
          out.write("\n");
          out.write("<div class=\"box-body table-responsive no-padding box\">\n");
          out.write("\t<table class=\"table table-hover\" id=\"agentgrid\">\n");
          out.write("\t</table>\n");
          out.write("\t<div id=\"agentGridPagingDiv\"></div>\n");
          out.write("</div>\n");
          out.write("\n");
          out.write(" <form action=\"");
          out.print( ControllerConstants.SPECIFIC_SYSTEM_AGENT_CONFIG );
          out.write("\" method=\"POST\" id=\"agent-config-form\">\n");
          out.write("    \t\t<input type=\"hidden\" id=\"agent_server_Instance_Id\" name=\"agent_server_Instance_Id\" value='");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${instanceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("'/>\n");
          out.write("    \t\t<input type=\"hidden\" id=\"systemAgentTypeId\" name=\"systemAgentTypeId\"/>\n");
          out.write("    \t\t<input type=\"hidden\" id=\"");
          out.print(BaseConstants.REQUEST_ACTION_TYPE );
          out.write("\" name=\"");
          out.print(BaseConstants.REQUEST_ACTION_TYPE );
          out.write("\" value=\"");
          out.print(BaseConstants.UPDATE_SYSTEM_AGENT_CONFIG);
          out.write("\"/>\n");
          out.write(" </form>\n");
        }
        if (_jspx_th_sec_005fauthorize_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f0);
        _jspx_th_sec_005fauthorize_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f0, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f0_reused);
      }
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("function loadJqueryAgentGrid(){\n");
      out.write("\t");
      //  sec:authorize
      org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f1 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
      boolean _jspx_th_sec_005fauthorize_005f1_reused = false;
      try {
        _jspx_th_sec_005fauthorize_005f1.setPageContext(_jspx_page_context);
        _jspx_th_sec_005fauthorize_005f1.setParent(null);
        // /WEB-INF/jsp/service/serviceAgentList.jsp(29,1) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sec_005fauthorize_005f1.setAccess("hasAuthority('PACKET_STATASTIC_AGENT') or hasAuthority('FILE_RENAME_AGENT')");
        int _jspx_eval_sec_005fauthorize_005f1 = _jspx_th_sec_005fauthorize_005f1.doStartTag();
        if (_jspx_eval_sec_005fauthorize_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          out.write("\n");
          out.write("\t$(\"#agentgrid\").jqGrid({\n");
          out.write("\turl: \"");
          out.print( ControllerConstants.GET_AGENT_LIST_SUMMARY );
          out.write("\",\n");
          out.write("\tmtype:\"POST\",\n");
          out.write("\tpostData:\n");
          out.write("\t{\n");
          out.write("\t\t'serverInstanceId':'");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${instanceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("' ,\n");
          out.write("\t\t'serviceId':'");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("',\n");
          out.write("\t\t'isServerInstanceSummary': 'false',\n");
          out.write("\t},\n");
          out.write("\tdatatype: \"json\",\n");
          out.write("\tcolNames: [\n");
          out.write("\t           \t  \"");
          if (_jspx_meth_spring_005fmessage_005f1(_jspx_th_sec_005fauthorize_005f1, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\t              \"");
          if (_jspx_meth_spring_005fmessage_005f2(_jspx_th_sec_005fauthorize_005f1, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\t              \"");
          if (_jspx_meth_spring_005fmessage_005f3(_jspx_th_sec_005fauthorize_005f1, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\t              \"");
          if (_jspx_meth_spring_005fmessage_005f4(_jspx_th_sec_005fauthorize_005f1, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\t              \"");
          if (_jspx_meth_spring_005fmessage_005f5(_jspx_th_sec_005fauthorize_005f1, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\t              \"");
          if (_jspx_meth_spring_005fmessage_005f6(_jspx_th_sec_005fauthorize_005f1, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\t              \"");
          if (_jspx_meth_spring_005fmessage_005f7(_jspx_th_sec_005fauthorize_005f1, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\t\t],\n");
          out.write("\tcolModel: [\n");
          out.write("\t\t{name:'id',index:'id',sortable:true,hidden: true},\n");
          out.write("\t\t{name:'typeOfAgent',index:'agentType.type',sortable:false,formatter:agentnameFormatter},\n");
          out.write("\t\t{name:'agentTypeId',index:'agentTypeId',hidden:true},\n");
          out.write("\t\t{name:'lastExecutionDate',index:'lastExecutionDate',sortable:false,align:'center',formatter: lastExecutionDateFormatter},\n");
          out.write("\t\t{name:'nextExecutionDate',index:'nextExecutionDate',sortable:false,align:'center',formatter : nextExecutionDateFormatter},\n");
          out.write("\t\t{name:'serviceStatus',index:'serviceStatus',sortable:false,align:'center', formatter:serviceStateFormatter },\n");
          out.write("\t\t{name:'agentStatus',index:'agentStatus',sortable:false,align:'center', formatter:agentStateFormatter }\n");
          out.write("\t],\n");
          out.write("\trowNum:");
          out.print( MapCache.getConfigValueAsInteger(SystemParametersConstant.TOTAL_ROWS_TO_DISPLAY_IN_GRID, 10) );
          out.write(",\n");
          out.write("\trowList:[10,20,60,100],\n");
          out.write("\theight: 'auto',\n");
          out.write("\tsortname: 'id',\n");
          out.write("\tsortorder: \"desc\",\n");
          out.write("\tpager: \"#agentGridPagingDiv\",\n");
          out.write("\tviewrecords: true,\n");
          out.write("\tmultiselect: false,\n");
          out.write("\ttimeout : 120000,\n");
          out.write("    loadtext: \"Loading...\",\n");
          out.write("\tcaption: \"");
          if (_jspx_meth_spring_005fmessage_005f8(_jspx_th_sec_005fauthorize_005f1, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\t\n");
          out.write("\tloadComplete: function(data) {\t\t\n");
          out.write("\t\tvar $jqgrid = $(\"#agentgrid\");      \n");
          out.write("\t\t$(\".jqgrow\", $jqgrid).each(function (index, row) {\n");
          out.write("\t\t\t \n");
          out.write("\t        var $row = $(row);\n");
          out.write("\t      \t\n");
          out.write("            //Find the checkbox of the row and set it disabled\n");
          out.write("            var agentType = $(jQuery('#agentgrid').jqGrid ('getCell', row.id, 'typeOfAgent')).closest(\"a\").html();\n");
          out.write("       \t\tif(agentType == 'Packet Statistics Agent'){\n");
          out.write("       \t\t\t $row.find(\"input:checkbox\").attr(\"disabled\", \"disabled\");\t       \t\t\t\n");
          out.write("       \t\t}\n");
          out.write("       \t\t$row.hide();\n");
          out.write("\t       \t");
          if (_jspx_meth_sec_005fauthorize_005f2(_jspx_th_sec_005fauthorize_005f1, _jspx_page_context))
            return;
          out.write("\n");
          out.write("\t       \t\n");
          out.write("\t        ");
          if (_jspx_meth_sec_005fauthorize_005f3(_jspx_th_sec_005fauthorize_005f1, _jspx_page_context))
            return;
          out.write("\n");
          out.write("       \t\n");
          out.write("\t    }); \t\t\n");
          out.write("\t\t$('#agentgrid .checkboxbg').attr(\"disabled\", \"disabled\");\n");
          out.write("\t\t$('#agentgrid .checkboxbg').bootstrapToggle();\n");
          out.write("\t\t\n");
          out.write("\t},\n");
          out.write("\tloadError : function(xhr,st,err) {\n");
          out.write("\t\thandleGenericError(xhr,st,err);\n");
          out.write("\t},\n");
          out.write("\trecordtext: \"");
          if (_jspx_meth_spring_005fmessage_005f9(_jspx_th_sec_005fauthorize_005f1, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("    emptyrecords: \"");
          if (_jspx_meth_spring_005fmessage_005f10(_jspx_th_sec_005fauthorize_005f1, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\tloadtext: \"");
          if (_jspx_meth_spring_005fmessage_005f11(_jspx_th_sec_005fauthorize_005f1, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\tpgtext : \"");
          if (_jspx_meth_spring_005fmessage_005f12(_jspx_th_sec_005fauthorize_005f1, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\tbeforeSelectRow: function (rowid, e){\n");
          out.write("\t}\n");
          out.write("\t}).navGrid(\"#agentGridPagingDiv\",{edit:false,add:false,del:false,search:false});\n");
          out.write("\t\t$(\".ui-jqgrid-titlebar\").hide();\n");
          out.write("\t");
        }
        if (_jspx_th_sec_005fauthorize_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f1);
        _jspx_th_sec_005fauthorize_005f1_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f1, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f1_reused);
      }
      out.write("\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("\tfunction agentnameFormatter(cellvalue, options, rowObject){\n");
      out.write("\t\t\n");
      out.write("\t\treturn '<a  class = \"link\" style=\"cursor: pointer;\" onclick=\"redirectAgentConfig('+\"'\" + rowObject[\"agentTypeId\"]+ \"'\"+')\">' + cellvalue + '</a>' ;\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\tfunction agentStateFormatter(cellvalue, options, rowObject){\n");
      out.write("\t\tvar toggleId = rowObject[\"id\"] + \"_agentStat_\" + cellvalue;\n");
      out.write("\t\tif(cellvalue == 'INACTIVE'){\n");
      out.write("\t\t\treturn '<input class=\"checkboxbg\" id=\"'+ toggleId +'\" onchange=\"\" data-switch-no-init=\"\" type=\"checkbox\">';\n");
      out.write("\t\t}else{\n");
      out.write("\t\t\treturn '<input class=\"checkboxbg\" id=\"'+ toggleId +'\" onchange=\"\" data-switch-no-init=\"\" type=\"checkbox\" checked=\"checked\">';\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction serviceStateFormatter(cellvalue, options, rowObject){\n");
      out.write("\t\tvar toggleId = rowObject[\"id\"] + \"_serviceStat_\" + cellvalue;\n");
      out.write("\t\t\n");
      out.write("\t\tif(cellvalue == 'false'){\n");
      out.write("\t\t\treturn '<input class=\"checkboxbg\" id=\"'+ toggleId +'\" onchange=\"\" data-switch-no-init=\"\" type=\"checkbox\">';\n");
      out.write("\t\t}else{\n");
      out.write("\t\t\treturn '<input class=\"checkboxbg\" id=\"'+ toggleId +'\" onchange=\"\" data-switch-no-init=\"\" type=\"checkbox\" checked=\"checked\">';\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\n");
      out.write("\tfunction redirectAgentConfig(agentTypeId){\n");
      out.write("\t\t$(\"#systemAgentTypeId\").val(agentTypeId);\n");
      out.write("\t\t$(\"#agent-config-form\").submit();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction lastExecutionDateFormatter(cellvalue, options, rowObject){\n");
      out.write("\t\t\n");
      out.write("\t\tvar toggleId = rowObject[\"id\"] + \"_lastExeTime\";\n");
      out.write("\t\tloadAgentInfomation(rowObject[\"id\"],rowObject[\"typeOfAgent\"]);\n");
      out.write("\t\treturn '<div id=\"agent_last_exeTime_'+rowObject[\"id\"]+'\"><img src=\"img/preloaders/circle-red.gif\" width=\"20px\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Loading Status..\" height=\"20px\"></div>';\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction nextExecutionDateFormatter(cellvalue, options, rowObject){\n");
      out.write("\t\t\n");
      out.write("\t\tvar toggleId = rowObject[\"id\"] + \"_nextExeTime\";\n");
      out.write("\t\treturn '<div id=\"agent_next_exeTime_'+rowObject[\"id\"]+'\"><img src=\"img/preloaders/circle-red.gif\" width=\"20px\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Loading Status..\" height=\"20px\"></div>';\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction loadAgentInfomation(agentId,agenttype){\n");
      out.write("\t\t\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t\t\turl: '");
      out.print(ControllerConstants.LOAD_AGENT_INFORMATION);
      out.write("',\n");
      out.write("\t\t\tcache: false,\n");
      out.write("\t\t\tasync: true,\n");
      out.write("\t\t\tdataType: 'json',\n");
      out.write("\t\t\ttype: \"POST\",\n");
      out.write("\t\t\tdata: {\n");
      out.write("\t\t\t\t\"serverInstanceId\": '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${instanceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("',\n");
      out.write("\t\t\t\t\"agentType\"\t\t  :\tagenttype,\n");
      out.write("\t\t\t},\n");
      out.write("\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t \n");
      out.write("\t\t\t\t var responseCode = response.code; \n");
      out.write("\t\t\t\t var responseMsg = response.msg; \n");
      out.write("\t\t\t\t var responseObject = response.object;\n");
      out.write("\t\t\t\t if(responseCode == \"200\"){\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t $('#agent_last_exeTime_'+agentId).html('<p>'+responseObject[\"lastExecutionDate\"]+\"</p>\");\n");
      out.write("\t\t\t\t\t $('#agent_next_exeTime_'+agentId).html('<p>'+responseObject[\"nextExecutionDate\"]+\"</p>\");\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t }\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t},\n");
      out.write("\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("</script>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_spring_005fmessage_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f0 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f0_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f0);
      // /WEB-INF/jsp/service/serviceAgentList.jsp(10,2) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f0.setCode("parsingService.summary.section.system.agent.heading");
      int[] _jspx_push_body_count_spring_005fmessage_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f0 = _jspx_th_spring_005fmessage_005f0.doStartTag();
        if (_jspx_th_spring_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f0);
      _jspx_th_spring_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f1 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f1_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f1);
      // /WEB-INF/jsp/service/serviceAgentList.jsp(41,16) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f1.setCode("service.summary.grid.column.agent.agentId");
      int[] _jspx_push_body_count_spring_005fmessage_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f1 = _jspx_th_spring_005fmessage_005f1.doStartTag();
        if (_jspx_th_spring_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f1);
      _jspx_th_spring_005fmessage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f1, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f2 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f2_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f1);
      // /WEB-INF/jsp/service/serviceAgentList.jsp(42,16) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f2.setCode("service.summary.grid.column.agent.typeOfAgent");
      int[] _jspx_push_body_count_spring_005fmessage_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f2 = _jspx_th_spring_005fmessage_005f2.doStartTag();
        if (_jspx_th_spring_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f2);
      _jspx_th_spring_005fmessage_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f2, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f3 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f3_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f1);
      // /WEB-INF/jsp/service/serviceAgentList.jsp(43,16) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f3.setCode("service.summary.grid.column.agent.agentTypeId");
      int[] _jspx_push_body_count_spring_005fmessage_005f3 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f3 = _jspx_th_spring_005fmessage_005f3.doStartTag();
        if (_jspx_th_spring_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f3[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f3.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f3.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f3);
      _jspx_th_spring_005fmessage_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f3, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f4 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f4_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f1);
      // /WEB-INF/jsp/service/serviceAgentList.jsp(44,16) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f4.setCode("service.summary.grid.column.agent.lastExecutionDate");
      int[] _jspx_push_body_count_spring_005fmessage_005f4 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f4 = _jspx_th_spring_005fmessage_005f4.doStartTag();
        if (_jspx_th_spring_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f4[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f4.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f4.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f4);
      _jspx_th_spring_005fmessage_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f4, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f5 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f5_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f5.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f1);
      // /WEB-INF/jsp/service/serviceAgentList.jsp(45,16) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f5.setCode("service.summary.grid.column.agent.nextExecutionDate");
      int[] _jspx_push_body_count_spring_005fmessage_005f5 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f5 = _jspx_th_spring_005fmessage_005f5.doStartTag();
        if (_jspx_th_spring_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f5[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f5.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f5.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f5);
      _jspx_th_spring_005fmessage_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f5, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f6 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f6_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f6.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f1);
      // /WEB-INF/jsp/service/serviceAgentList.jsp(46,16) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f6.setCode("service.summary.grid.column.agent.serviceStatus");
      int[] _jspx_push_body_count_spring_005fmessage_005f6 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f6 = _jspx_th_spring_005fmessage_005f6.doStartTag();
        if (_jspx_th_spring_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f6[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f6.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f6.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f6);
      _jspx_th_spring_005fmessage_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f6, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f7 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f7_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f7.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f1);
      // /WEB-INF/jsp/service/serviceAgentList.jsp(47,16) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f7.setCode("service.summary.grid.column.agent.agentStatus");
      int[] _jspx_push_body_count_spring_005fmessage_005f7 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f7 = _jspx_th_spring_005fmessage_005f7.doStartTag();
        if (_jspx_th_spring_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f7[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f7.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f7.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f7);
      _jspx_th_spring_005fmessage_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f7, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f8(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f8 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f8_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f8.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f1);
      // /WEB-INF/jsp/service/serviceAgentList.jsp(68,11) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f8.setCode("parsingService.summary.agent.grid.caption");
      int[] _jspx_push_body_count_spring_005fmessage_005f8 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f8 = _jspx_th_spring_005fmessage_005f8.doStartTag();
        if (_jspx_th_spring_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f8[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f8.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f8.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f8);
      _jspx_th_spring_005fmessage_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f8, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f2 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f2_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f2.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f1);
      // /WEB-INF/jsp/service/serviceAgentList.jsp(82,9) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f2.setAccess("hasAuthority('PACKET_STATASTIC_AGENT')");
      int _jspx_eval_sec_005fauthorize_005f2 = _jspx_th_sec_005fauthorize_005f2.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t       \tif(agentType == 'Packet Statistics Agent'){\n");
        out.write("\t\t\t\t$row.show();\t\t\t\t       \t\t\t\n");
        out.write("       \t\t}\n");
        out.write("\t       \t");
      }
      if (_jspx_th_sec_005fauthorize_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f2);
      _jspx_th_sec_005fauthorize_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f2, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f3 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f3_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f3.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f1);
      // /WEB-INF/jsp/service/serviceAgentList.jsp(88,9) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f3.setAccess("hasAuthority('FILE_RENAME_AGENT')");
      int _jspx_eval_sec_005fauthorize_005f3 = _jspx_th_sec_005fauthorize_005f3.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t        if(agentType == 'File Rename Agent'){\n");
        out.write("       \t\t\t $row.show();\t       \t\t\t\n");
        out.write("       \t\t}\n");
        out.write("\t        ");
      }
      if (_jspx_th_sec_005fauthorize_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f3);
      _jspx_th_sec_005fauthorize_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f3, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f9(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f9 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f9_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f9.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f9.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f1);
      // /WEB-INF/jsp/service/serviceAgentList.jsp(102,14) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f9.setCode("serverManagement.grid.pager.total.records.text");
      int[] _jspx_push_body_count_spring_005fmessage_005f9 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f9 = _jspx_th_spring_005fmessage_005f9.doStartTag();
        if (_jspx_th_spring_005fmessage_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f9[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f9.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f9.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f9);
      _jspx_th_spring_005fmessage_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f9, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f10(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f10 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f10_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f10.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f10.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f1);
      // /WEB-INF/jsp/service/serviceAgentList.jsp(103,19) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f10.setCode("parsingService.summary.agent.grid.empty.records");
      int[] _jspx_push_body_count_spring_005fmessage_005f10 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f10 = _jspx_th_spring_005fmessage_005f10.doStartTag();
        if (_jspx_th_spring_005fmessage_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f10[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f10.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f10.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f10);
      _jspx_th_spring_005fmessage_005f10_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f10, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f10_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f11(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f11 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f11_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f11.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f11.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f1);
      // /WEB-INF/jsp/service/serviceAgentList.jsp(104,12) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f11.setCode("parsingService.summary.agent.grid.loading.text");
      int[] _jspx_push_body_count_spring_005fmessage_005f11 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f11 = _jspx_th_spring_005fmessage_005f11.doStartTag();
        if (_jspx_th_spring_005fmessage_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f11[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f11.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f11.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f11);
      _jspx_th_spring_005fmessage_005f11_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f11, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f11_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f12(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f12 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f12_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f12.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f12.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f1);
      // /WEB-INF/jsp/service/serviceAgentList.jsp(105,11) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f12.setCode("parsingService.summary.agent.grid.pager.text");
      int[] _jspx_push_body_count_spring_005fmessage_005f12 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f12 = _jspx_th_spring_005fmessage_005f12.doStartTag();
        if (_jspx_th_spring_005fmessage_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f12[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f12.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f12.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f12);
      _jspx_th_spring_005fmessage_005f12_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f12, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f12_reused);
    }
    return false;
  }
}
