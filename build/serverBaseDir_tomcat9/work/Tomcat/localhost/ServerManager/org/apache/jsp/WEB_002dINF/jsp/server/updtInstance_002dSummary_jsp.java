/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.34
 * Generated at: 2023-11-13 06:50:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.server;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.elitecore.sm.common.constants.BaseConstants;
import com.elitecore.sm.common.constants.ControllerConstants;
import com.elitecore.sm.common.constants.SystemParametersConstant;
import com.elitecore.sm.util.MapCache;

public final class updtInstance_002dSummary_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(8);
    _jspx_dependants.put("jar:file:/home/upendra/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/5.3.20/8ac1b72a1f5c41fdc2cb3340cd94f795af260301/spring-webmvc-5.3.20.jar!/META-INF/spring-form.tld", Long.valueOf(1652232424000L));
    _jspx_dependants.put("jar:file:/home/upendra/.gradle/caches/modules-2/files-2.1/org.springframework.security/spring-security-taglibs/5.5.7/757234463d9633361d863c14e1b81dd82e16482e/spring-security-taglibs-5.5.7.jar!/META-INF/security.tld", Long.valueOf(1652702070000L));
    _jspx_dependants.put("file:/home/upendra/.gradle/caches/modules-2/files-2.1/org.springframework.security/spring-security-taglibs/5.5.7/757234463d9633361d863c14e1b81dd82e16482e/spring-security-taglibs-5.5.7.jar", Long.valueOf(1679656227262L));
    _jspx_dependants.put("file:/home/upendra/.gradle/caches/modules-2/files-2.1/javax.servlet/jstl/1.2/74aca283cd4f4b4f3e425f5820cda58f44409547/jstl-1.2.jar", Long.valueOf(1679656181794L));
    _jspx_dependants.put("/WEB-INF/ShowErrorTag.tld", Long.valueOf(1699857843167L));
    _jspx_dependants.put("file:/home/upendra/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/5.3.20/8ac1b72a1f5c41fdc2cb3340cd94f795af260301/spring-webmvc-5.3.20.jar", Long.valueOf(1679656233526L));
    _jspx_dependants.put("jar:file:/home/upendra/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/5.3.20/8ac1b72a1f5c41fdc2cb3340cd94f795af260301/spring-webmvc-5.3.20.jar!/META-INF/spring.tld", Long.valueOf(1652232424000L));
    _jspx_dependants.put("jar:file:/home/upendra/.gradle/caches/modules-2/files-2.1/javax.servlet/jstl/1.2/74aca283cd4f4b4f3e425f5820cda58f44409547/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153365282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.elitecore.sm.util.MapCache");
    _jspx_imports_classes.add("com.elitecore.sm.common.constants.ControllerConstants");
    _jspx_imports_classes.add("com.elitecore.sm.common.constants.BaseConstants");
    _jspx_imports_classes.add("com.elitecore.sm.common.constants.SystemParametersConstant");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fform_005fform_0026_005fmodelAttribute_005fmethod_005fid_005fenctype_005faction;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fid_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fform_005fform_0026_005fmodelAttribute_005fmethod_005fid_005fenctype_005faction = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fid_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fform_005fform_0026_005fmodelAttribute_005fmethod_005fid_005fenctype_005faction.release();
    _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fid_005fnobody.release();
    _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody.release();
    _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody.release();
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.release();
    _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"tab-pane ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\" id=\"Summary\">\n");
      out.write("   <div class=\"tab-content no-padding padding0\">            \n");
      out.write(" \t");
      //  form:form
      org.springframework.web.servlet.tags.form.FormTag _jspx_th_form_005fform_005f0 = (org.springframework.web.servlet.tags.form.FormTag) _005fjspx_005ftagPool_005fform_005fform_0026_005fmodelAttribute_005fmethod_005fid_005fenctype_005faction.get(org.springframework.web.servlet.tags.form.FormTag.class);
      boolean _jspx_th_form_005fform_005f0_reused = false;
      try {
        _jspx_th_form_005fform_005f0.setPageContext(_jspx_page_context);
        _jspx_th_form_005fform_005f0.setParent(null);
        // /WEB-INF/jsp/server/updtInstance-Summary.jsp(13,2) name = modelAttribute type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_form_005fform_005f0.setModelAttribute("server_instance_form_bean");
        // /WEB-INF/jsp/server/updtInstance-Summary.jsp(13,2) name = method type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_form_005fform_005f0.setMethod("POST");
        // /WEB-INF/jsp/server/updtInstance-Summary.jsp(13,2) name = action type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_form_005fform_005f0.setAction( ControllerConstants.UPDATE_ADVANCE_CONFIG );
        // /WEB-INF/jsp/server/updtInstance-Summary.jsp(13,2) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_form_005fform_005f0.setId("serverInstance-updateSummary");
        // /WEB-INF/jsp/server/updtInstance-Summary.jsp(13,2) name = enctype type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_form_005fform_005f0.setEnctype("multipart/form-data");
        int[] _jspx_push_body_count_form_005fform_005f0 = new int[] { 0 };
        try {
          int _jspx_eval_form_005fform_005f0 = _jspx_th_form_005fform_005f0.doStartTag();
          if (_jspx_eval_form_005fform_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
            do {
              out.write("\n");
              out.write("     \t\n");
              out.write("     \t<input type=\"hidden\" id=\"instanceStatus\" name=\"instanceStatus\" value=\"");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serverInstanceStatus}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("\" />\n");
              out.write("     \t");
              if (_jspx_meth_form_005finput_005f0(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\n");
              out.write("     \t");
              if (_jspx_meth_form_005finput_005f1(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\n");
              out.write("     \t");
              if (_jspx_meth_form_005finput_005f2(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\n");
              out.write("     \t");
              if (_jspx_meth_form_005finput_005f3(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\n");
              out.write("     \t");
              if (_jspx_meth_form_005finput_005f4(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\n");
              out.write("     \t");
              if (_jspx_meth_form_005finput_005f5(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\n");
              out.write("     \t");
              if (_jspx_meth_form_005finput_005f6(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\n");
              out.write("     \t");
              if (_jspx_meth_form_005finput_005f7(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\n");
              out.write("     \t\n");
              out.write("   \n");
              out.write("     \t");
              if (_jspx_meth_form_005finput_005f8(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\n");
              out.write("     \t\n");
              out.write("\t\t");
              if (_jspx_meth_form_005finput_005f9(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write('\n');
              out.write('	');
              out.write('	');
              if (_jspx_meth_form_005finput_005f10(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write('\n');
              out.write('	');
              out.write('	');
              if (_jspx_meth_form_005finput_005f11(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write('\n');
              out.write('	');
              out.write('	');
              if (_jspx_meth_form_005finput_005f12(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write('\n');
              out.write('	');
              out.write('	');
              if (_jspx_meth_form_005finput_005f13(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write('\n');
              out.write('	');
              out.write('	');
              if (_jspx_meth_form_005finput_005f14(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write('\n');
              out.write('	');
              out.write('	');
              if (_jspx_meth_form_005finput_005f15(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write('\n');
              out.write('	');
              out.write('	');
              if (_jspx_meth_form_005finput_005f16(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\n");
              out.write("\t\t\n");
              out.write("\t\t");
              if (_jspx_meth_form_005finput_005f17(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write('\n');
              out.write('	');
              out.write('	');
              if (_jspx_meth_form_005finput_005f18(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write('\n');
              out.write('	');
              out.write('	');
              if (_jspx_meth_form_005finput_005f19(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write('\n');
              out.write('	');
              out.write('	');
              if (_jspx_meth_form_005finput_005f20(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write('\n');
              out.write('\n');
              out.write('	');
              out.write('	');
              if (_jspx_meth_form_005finput_005f21(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\n");
              out.write("\t\t\n");
              out.write("\t\t");
              if (_jspx_meth_form_005finput_005f22(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write('\n');
              out.write('	');
              out.write('	');
              if (_jspx_meth_form_005finput_005f23(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write('\n');
              out.write('	');
              out.write('	');
              if (_jspx_meth_form_005finput_005f24(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\n");
              out.write("\t\t<input type=\"hidden\" id=\"synchSISts\" value=\"");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${server_instance_form_bean.syncSIStatus}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("\" />\n");
              out.write("                            \t\t\n");
              out.write("        <input type=\"hidden\" id=\"synchChildSts\" value=\"");
              out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${server_instance_form_bean.syncChildStatus}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
              out.write("\" />\n");
              out.write("     \t\n");
              out.write("     \t<input type=\"hidden\" name=\"");
              out.print( BaseConstants.REQUEST_ACTION_TYPE );
              out.write("\"  id=\"");
              out.print( BaseConstants.REQUEST_ACTION_TYPE );
              out.write("\" value=\"");
              out.print( BaseConstants.UPDATE_INSTANCE_SUMMARY );
              out.write("\" />\n");
              out.write("       \n");
              out.write("\t\t<div class=\"fullwidth padding0\">\n");
              out.write("\t       \t<div class=\"title2\">");
              if (_jspx_meth_spring_005fmessage_005f0(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\n");
              out.write("\t          <span class=\"title2rightfield\">\n");
              out.write("\t          \t");
              if (_jspx_meth_sec_005fauthorize_005f0(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\n");
              out.write("\t          </span>\n");
              out.write("\t      \t</div>\n");
              out.write("\t    </div>\n");
              out.write("\n");
              out.write("         <div class=\"box-body table-responsive no-padding box\" style=\"margin-bottom:0;\" id=\"tblServiceList\">\n");
              out.write("       \t\t<table class=\"table table-hover\" id=\"summaryServiceList\"></table>\n");
              out.write("           \t<div id=\"summaryServiceListPagingDiv\"></div> \n");
              out.write("          \t<div class=\"clearfix\"></div>   \n");
              out.write("          \t\t<div id=\"divLoading\" align=\"center\" style=\"display: none;\"><img src=\"img/preloaders/Preloader_10.gif\" /></div>  \n");
              out.write("\t    </div>\n");
              out.write("              \n");
              out.write("       \n");
              out.write("       <a href=\"#divChangeServiceStatus\" class=\"fancybox\" style=\"display: none;\" id=\"updateServiceStatus\">#</a>\n");
              out.write("\t\t<div id=\"divChangeServiceStatus\" style=\" width:100%; display: none;\" >\n");
              out.write("\t\t    <div class=\"modal-content\">\n");
              out.write("\t\t        <div id=\"changeStatuslbl\" class=\"modal-header padding10\">\n");
              out.write("\t\t            <h4 class=\"modal-title\">");
              if (_jspx_meth_spring_005fmessage_005f2(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("</h4>\n");
              out.write("\t\t        </div>\n");
              out.write("\t\t        <div id=\"startServicelbl\" class=\"modal-header padding10\">\n");
              out.write("\t\t            <h4 class=\"modal-title\">");
              if (_jspx_meth_spring_005fmessage_005f3(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("</h4>\n");
              out.write("\t\t        </div>\n");
              out.write("\t\t        <div class=\"modal-body padding10 inline-form\">\n");
              out.write("\t\t        \t<input type=\"hidden\" id=\"serviceEnableStatus\" name=\"serviceEnableStatus\" />\n");
              out.write("\t\t        \t<input type=\"hidden\" id=\"serviceEnableId\" name=\"serviceEnableId\" />\n");
              out.write("\t\t        \t\n");
              out.write("\t\t        \t");
              org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/responseMsgPopUp.jsp", out, false);
              out.write("\n");
              out.write("\t\t        \t\n");
              out.write("\t\t\t        <p id=\"active-service-warning\" style=\"display:none;\">\n");
              out.write("\t\t\t       \t\t ");
              if (_jspx_meth_spring_005fmessage_005f4(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\n");
              out.write("\t\t\t        </p>\n");
              out.write("\t\t\t        <p id=\"inactive-service-warning\" style=\"display:none;\">\n");
              out.write("\t\t\t       \t\t ");
              if (_jspx_meth_spring_005fmessage_005f5(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\n");
              out.write("\t\t\t        </p>\n");
              out.write("\t\t\t        <p id=\"on-service-warning\" style=\"display:none;\">\n");
              out.write("\t\t\t       \t\t");
              if (_jspx_meth_spring_005fmessage_005f6(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write(" \n");
              out.write("\t\t\t        </p>\n");
              out.write("\t\t\t        <p id=\"off-service-warning\" style=\"display:none;\">\n");
              out.write("\t\t\t       \t\t");
              if (_jspx_meth_spring_005fmessage_005f7(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write(" \n");
              out.write("\t\t\t        </p>\n");
              out.write("\t\t\t       \n");
              out.write("\t\t        </div>\n");
              out.write("\t\t        \n");
              out.write("\t\t\t        <div  class=\"modal-footer padding10\">\n");
              out.write("\t\t\t       \t\t\t<div id=\"update-service-div\">\n");
              out.write("\t\t\t       \t\t\t\t");
              if (_jspx_meth_sec_005fauthorize_005f1(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\n");
              out.write("\t\t\t            \t\t<button type=\"button\" id=\"no_btn\" class=\"btn btn-grey btn-xs \" data-dismiss=\"modal\" onclick=\"setDefaultStatus();\">");
              if (_jspx_meth_spring_005fmessage_005f9(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("</button>\n");
              out.write("\t\t\t            \t</div>\n");
              out.write("\t\t\t              <button type=\"button\" id=\"close-btn\" class=\"btn btn-grey btn-xs \" onclick=\"setStartDefaultStatus();\">");
              if (_jspx_meth_spring_005fmessage_005f10(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("</button>\n");
              out.write("\t\t\t              <button type=\"button\" id=\"enable-close-btn\" class=\"btn btn-grey btn-xs \" onclick=\"setDefaultStatus();\">");
              if (_jspx_meth_spring_005fmessage_005f11(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("</button>\n");
              out.write("\t\t\t              <button type=\"button\" id=\"cancel-btn\" class=\"btn btn-grey btn-xs \" onclick=\"searchInstanceCriteria();closeFancyBox();\">");
              if (_jspx_meth_spring_005fmessage_005f12(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("</button>\n");
              out.write("\t\t\t              \n");
              out.write("\t\t\t        </div>\n");
              out.write("\t\t\t       \n");
              out.write("\t\t\t        <div id=\"update-service-progress-div\" class=\"modal-footer padding10\">\n");
              out.write("\t\t\t           ");
              org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/processing-bar.jsp", out, false);
              out.write("\n");
              out.write("\t\t\t        </div>\n");
              out.write("\t\t\t        \n");
              out.write("\t\t    </div>\n");
              out.write("\t\t    <!-- /.modal-content --> \n");
              out.write("\t\t</div>\n");
              out.write("\t\t\n");
              out.write("\t\t\n");
              out.write("       ");
              if (_jspx_meth_sec_005fauthorize_005f2(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\n");
              out.write("        \n");
              out.write("        <div class=\"fullwidth tab-content no-padding\">\n");
              out.write("            <div class=\"greybg\">\n");
              out.write("                <div class=\"greybg-textbox\" style=\"width: 25%\">");
              if (_jspx_meth_spring_005fmessage_005f14(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("</div>\n");
              out.write("                <div class=\"greybg-whitebox\" style=\"width: 25%;padding-top:6px !important;\">\n");
              out.write("                \t");
              if (_jspx_meth_sec_005fauthorize_005f3(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\n");
              out.write("                    ");
              if (_jspx_meth_sec_005fauthorize_005f4(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\n");
              out.write("                </div>\n");
              out.write("                ");
              out.write("\n");
              out.write("                 ");
              out.write("\n");
              out.write("\t              \t");
              out.write("\n");
              out.write("\t\t         ");
              out.write("\n");
              out.write("\t\t                <div class=\"greybg-textbox\" style=\"width: 25%\">");
              if (_jspx_meth_spring_005fmessage_005f15(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("</div>\n");
              out.write("\t\t                <div class=\"greybg-whitebox\" style=\"width: 25%;padding-top:6px !important;\">\n");
              out.write("\t\t                    <label style=\"margin:4px 0 3px;\" id=\"logLevel\"></label>\n");
              out.write("\t\t                </div>\n");
              out.write("\t\t        \n");
              out.write("\t            </div>\n");
              out.write("            \t\n");
              out.write("        </div>\n");
              out.write("    \n");
              out.write("\t");
              int evalDoAfterBody = _jspx_th_form_005fform_005f0.doAfterBody();
              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                break;
            } while (true);
          }
          if (_jspx_th_form_005fform_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
        } catch (java.lang.Throwable _jspx_exception) {
          while (_jspx_push_body_count_form_005fform_005f0[0]-- > 0)
            out = _jspx_page_context.popBody();
          _jspx_th_form_005fform_005f0.doCatch(_jspx_exception);
        } finally {
          _jspx_th_form_005fform_005f0.doFinally();
        }
        _005fjspx_005ftagPool_005fform_005fform_0026_005fmodelAttribute_005fmethod_005fid_005fenctype_005faction.reuse(_jspx_th_form_005fform_005f0);
        _jspx_th_form_005fform_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005fform_005f0, _jsp_getInstanceManager(), _jspx_th_form_005fform_005f0_reused);
      }
      out.write("\n");
      out.write("\t</div>\n");
      out.write("\t  <div style=\"display: none;\">\n");
      out.write("\t\t\t<form id=\"service_form\" method=\"GET\" action=\"");
      out.print( ControllerConstants.INIT_UPDATE_SERVICE );
      out.write("\">\n");
      out.write("\t\t\t\t<input type=\"hidden\" id=\"serviceId\" name=\"serviceId\">\n");
      out.write("\t\t\t\t<input type=\"hidden\" id=\"serviceType\" name=\"serviceType\">\n");
      out.write("\t\t\t\t<input type=\"hidden\" id=\"serviceName\" name=\"serviceName\">\n");
      out.write("\t\t\t\t<input type=\"hidden\" id=\"instanceId\" name=\"instanceId\">\n");
      out.write("\t\t\t</form>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t<!-- create service form code start here-- Onclick add it will goto create service page. -->\n");
      out.write("\t\t<div style=\"display: hidden\">\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<form id=\"loadCreateServiceForm\" method=\"POST\" action=\"");
      out.print(ControllerConstants.GET_SERVICE_LIST_BY_SERVER_TYPE);
      out.write("\">\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<input type=\"hidden\" id=\"profileserverInstanceId\" name=\"profileserverInstanceId\">\n");
      out.write("\t\t</form>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<!-- create service form code end here-->\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t<!-- Service Export hidden form code star here -->\n");
      out.write("\t\t<div style=\"display: none;\">\n");
      out.write("\t\t\t<form action=\"");
      out.print(ControllerConstants.EXPORT_SERVICE_INSTANCE_CONFIG);
      out.write("\" id=\"export-service-instance-config-form\" method=\"POST\">\n");
      out.write("\t        \t<input type=\"hidden\" id=\"exportServiceInstanceId\" name=\"exportServiceInstanceId\"  value=\"\"/>\n");
      out.write("\t        \t<input type=\"hidden\" id=\"isExportForDelete\" name=\"isExportForDelete\"  value=\"\"/>\n");
      out.write("\t        \t<input type=\"hidden\" id=\"exportPath\" name=\"exportPath\" />\n");
      out.write("\t        \t<input type=\"hidden\" id=\"");
      out.print(BaseConstants.REQUEST_ACTION_TYPE );
      out.write("\" name=\"");
      out.print(BaseConstants.REQUEST_ACTION_TYPE );
      out.write("\" value=\"");
      out.print(BaseConstants.SERVICE_MANAGEMENT);
      out.write("\"/>\n");
      out.write("\t       </form>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<!-- Service Export hidden form code end here -->\n");
      out.write("\t\t\n");
      out.write("\t\t<form action=\"");
      out.print( ControllerConstants.SPECIFIC_SYSTEM_AGENT_CONFIG );
      out.write("\" method=\"POST\" id=\"agent-config-form\">\n");
      out.write("    \t\t<input type=\"hidden\" id=\"agent_server_Instance_Id\" name=\"agent_server_Instance_Id\"/>\n");
      out.write("    \t\t<input type=\"hidden\" id=\"systemAgentTypeId\" name=\"systemAgentTypeId\"/>\n");
      out.write("    \t\t<input type=\"hidden\" id=\"");
      out.print(BaseConstants.REQUEST_ACTION_TYPE );
      out.write("\" name=\"");
      out.print(BaseConstants.REQUEST_ACTION_TYPE );
      out.write("\" value=\"");
      out.print(BaseConstants.UPDATE_SYSTEM_AGENT_CONFIG);
      out.write("\"/>\n");
      out.write("\t </form>\n");
      out.write("\t \n");
      out.write("\t \n");
      out.write("\t <a href=\"#divOffWarn\" class=\"fancybox\" style=\"display: none;\" id=\"offwarn\">#</a>\n");
      out.write("\t <a href=\"#divInactiveWarn\" class=\"fancybox\" style=\"display: none;\" id=\"inactivewarn\">#</a>\t \n");
      out.write("\t \n");
      out.write("\t \t<div id=\"divOffWarn\" style=\" width:100%; display: none;\" >\n");
      out.write("\t\t    <div class=\"modal-content\">\n");
      out.write("\t\t        <div class=\"modal-header padding10\">\n");
      out.write("\t\t            <h4 class=\"modal-title\">");
      if (_jspx_meth_spring_005fmessage_005f16(_jspx_page_context))
        return;
      out.write("</h4>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div class=\"modal-body padding10 inline-form\">\n");
      out.write("\t\t\t        <p>\n");
      out.write("\t\t\t        \t");
      if (_jspx_meth_spring_005fmessage_005f17(_jspx_page_context))
        return;
      out.write("    \n");
      out.write("\t\t\t        </p>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div class=\"modal-footer padding10\">\n");
      out.write("\t\t            <button type=\"button\" class=\"btn btn-grey btn-xs \" data-dismiss=\"modal\" onclick=\"closeFancyBox();clearSelection();\">");
      if (_jspx_meth_spring_005fmessage_005f18(_jspx_page_context))
        return;
      out.write("</button>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t    </div>\n");
      out.write("\t\t    <!-- /.modal-content --> \n");
      out.write("\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t<div id=\"divInactiveWarn\" style=\" width:100%; display: none;\" >\n");
      out.write("\t\t    <div class=\"modal-content\">\n");
      out.write("\t\t        <div class=\"modal-header padding10\">\n");
      out.write("\t\t            <h4 class=\"modal-title\">");
      if (_jspx_meth_spring_005fmessage_005f19(_jspx_page_context))
        return;
      out.write("</h4>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div class=\"modal-body padding10 inline-form\">\n");
      out.write("\t\t\t        <p>\n");
      out.write("\t\t\t        \t");
      if (_jspx_meth_spring_005fmessage_005f20(_jspx_page_context))
        return;
      out.write("    \n");
      out.write("\t\t\t        </p>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div class=\"modal-footer padding10\">\n");
      out.write("\t\t            <button type=\"button\" class=\"btn btn-grey btn-xs \" data-dismiss=\"modal\" onclick=\"closeFancyBox();clearSelection();\">");
      if (_jspx_meth_spring_005fmessage_005f21(_jspx_page_context))
        return;
      out.write("</button>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t    </div>\n");
      out.write("\t\t    <!-- /.modal-content --> \n");
      out.write("\t\t</div>\n");
      out.write(" </div>\n");
      out.write(" \n");
      out.write(" <script type=\"text/javascript\">\n");
      out.write(" \tvar ckIntanceSelected = new Array();\n");
      out.write("\tvar servicesList = {};\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t$(document).ready(function() {\n");
      out.write("\n");
      out.write("\t\t\treloadInstanceGridData();\n");
      out.write("    \t\tloadInstanceStatus($('#instance-id').val());\n");
      out.write("\t\t\tloadServiceSummaryGrid();\n");
      out.write("\t\t\t");
      //  sec:authorize
      org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f5 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
      boolean _jspx_th_sec_005fauthorize_005f5_reused = false;
      try {
        _jspx_th_sec_005fauthorize_005f5.setPageContext(_jspx_page_context);
        _jspx_th_sec_005fauthorize_005f5.setParent(null);
        // /WEB-INF/jsp/server/updtInstance-Summary.jsp(271,3) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_sec_005fauthorize_005f5.setAccess("hasAuthority('PACKET_STATASTIC_AGENT') or hasAuthority('FILE_RENAME_AGENT')");
        int _jspx_eval_sec_005fauthorize_005f5 = _jspx_th_sec_005fauthorize_005f5.doStartTag();
        if (_jspx_eval_sec_005fauthorize_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          out.write("\n");
          out.write("\t\t\t$(\"#agentList\").jqGrid({\n");
          out.write("\t        \turl: \"");
          out.print( ControllerConstants.GET_AGENT_LIST_SUMMARY );
          out.write("\",\n");
          out.write("\t        \tmtype:\"POST\",\n");
          out.write("\t        \tpostData: {\n");
          out.write("\t        \t\tserverInstanceId :$(\"#instance-id\").val(),\n");
          out.write("\t        \t\tisServerInstanceSummary: 'true',\n");
          out.write("\t        \t},\n");
          out.write("\t            datatype: \"json\",\n");
          out.write("\t            colNames:[\n");
          out.write("\t\t\t\t\t\t  \"");
          if (_jspx_meth_spring_005fmessage_005f22(_jspx_th_sec_005fauthorize_005f5, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\t                      \"");
          if (_jspx_meth_spring_005fmessage_005f23(_jspx_th_sec_005fauthorize_005f5, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\t                      \"");
          if (_jspx_meth_spring_005fmessage_005f24(_jspx_th_sec_005fauthorize_005f5, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\t                      \"");
          if (_jspx_meth_spring_005fmessage_005f25(_jspx_th_sec_005fauthorize_005f5, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\t                      \"");
          if (_jspx_meth_spring_005fmessage_005f26(_jspx_th_sec_005fauthorize_005f5, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\t                      \"");
          if (_jspx_meth_spring_005fmessage_005f27(_jspx_th_sec_005fauthorize_005f5, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\t                     ],\n");
          out.write("\t\t\t\tcolModel:[\n");
          out.write("\t            \t{name:'id',index:'id',hidden:true},\n");
          out.write("\t                {name:'typeOfAgent',index:'typeOfAgent',sortable:false, formatter:agentNameFormatter},\n");
          out.write("\t                {name:'agentTypeId',index:'agentTypeId.type',hidden:true},\n");
          out.write("\t            \t{name:'lastExecutionDate',index:'lastExecutionDate',sortable:false , align:'center',formatter: lastExecutionDateFormatter},\n");
          out.write("\t            \t{name:'nextExecutionDate',index:'nextExecutionDate',sortable:false , align:'center',formatter : nextExecutionDateFormatter},\n");
          out.write("\t            \t{name:'agentStatus',index:'agentStatus',sortable:false, align:'center',formatter: agentStateFormatter},\n");
          out.write("\t            \t\n");
          out.write("\t            ],\n");
          out.write("\t            rowNum:");
          out.print( MapCache.getConfigValueAsInteger(SystemParametersConstant.TOTAL_ROWS_TO_DISPLAY_IN_GRID, 10) );
          out.write(",\n");
          out.write("\t            rowList:[10,20,60,100],\n");
          out.write("\t            height: 'auto',\n");
          out.write("\t\t\t\tsortname: 'id',\n");
          out.write("\t     \t\tsortorder: \"desc\",\n");
          out.write("\t            pager: \"#agentListPagingDiv\",\n");
          out.write("\t            viewrecords: true,\n");
          out.write("\t            multiselect: false,\n");
          out.write("\t            caption: \"");
          if (_jspx_meth_spring_005fmessage_005f28(_jspx_th_sec_005fauthorize_005f5, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\t     \t\tloadComplete: function(data) {\n");
          out.write("\t    \t \t\t\n");
          out.write("\t     \t\t\t\n");
          out.write("\t    \t \t\t\n");
          out.write("\t    \t \t\t$('#snmpSts').change(function(){\n");
          out.write("\t    \t \t\t\tupdtSNMPAlertPopup();\n");
          out.write("\t    \t\t\t});\n");
          out.write("\t    \t \t\t\n");
          out.write("\t    \t \t\t$('#webServiceSts').change(function(){\n");
          out.write("\t    \t \t\t\tupdtWebServicePopup();\n");
          out.write("\t    \t\t\t});\n");
          out.write("\t    \t \t\t\n");
          out.write("\t    \t \t\t$('#restWebServiceSts').change(function(){\n");
          out.write("\t    \t \t\t\tupdtRestWebServicePopup();\n");
          out.write("\t    \t\t\t});\n");
          out.write("\t    \t \t\t\n");
          out.write("\t    \t \t\t var $jqgrid = $(\"#agentList\");      \n");
          out.write("\t     \t\t\t$(\".jqgrow\", $jqgrid).each(function (index, row) {\n");
          out.write("\t     \t\t\t\t \n");
          out.write("\t     \t\t        var $row = $(row);\n");
          out.write("\t     \t\t      \t\n");
          out.write("     \t\t            //Find the checkbox of the row and set it disabled\n");
          out.write("     \t\t            var agentType = $(jQuery('#agentList').jqGrid ('getCell', row.id, 'typeOfAgent')).closest(\"a\").html();\n");
          out.write("     \t\t       \t\tif(agentType == 'Packet Statistics Agent'){\n");
          out.write("     \t\t       \t\t\t $row.find(\"input:checkbox\").attr(\"disabled\", \"disabled\");\n");
          out.write("     \t\t       \t\t\t\n");
          out.write("     \t\t       \t\t}\n");
          out.write("     \t\t       \t\t$row.hide();\n");
          out.write("\t     \t\t       \t");
          if (_jspx_meth_sec_005fauthorize_005f6(_jspx_th_sec_005fauthorize_005f5, _jspx_page_context))
            return;
          out.write("\n");
          out.write("\t     \t\t       \t\n");
          out.write("\t     \t\t       ");
          if (_jspx_meth_sec_005fauthorize_005f7(_jspx_th_sec_005fauthorize_005f5, _jspx_page_context))
            return;
          out.write("\n");
          out.write("     \t\t       \t\n");
          out.write("\t     \t\t    }); \n");
          out.write("\t     \t\t\t\n");
          out.write("\t\t\t\t\t$('#agentList .checkboxbg').bootstrapToggle();\n");
          out.write("\t     \t\t\t\n");
          out.write("\t    \t \t\t$('#agentList .checkboxbg').change(function(){\n");
          out.write("\t    \t \t\t\tagentActiveInactiveToggleChanged(this);\n");
          out.write("\t    \t\t\t});\n");
          out.write("\t     \t\t\t\n");
          out.write("\t\t\t\t},\n");
          out.write("\t\t\t\tonPaging: function (pgButton) {\n");
          out.write("\t\t\t\t\tclearResponseMsgDiv();\n");
          out.write("\t\t\t\t},\n");
          out.write("\t\t\t\tloadError : function(xhr,st,err) {\n");
          out.write("\t\t\t\t\thandleGenericError(xhr,st,err);\n");
          out.write("\t\t\t\t},\n");
          out.write("\t\t\t\tbeforeSelectRow: function (rowid, e){\n");
          out.write("\t\t\t\t\t\n");
          out.write("\t\t\t\t\t// this blank function will not select the entire row. Only checkbox can be selectable.\t\t\t\t\t\n");
          out.write("\t\t\t\t\n");
          out.write("\t\t\t\t},\n");
          out.write("\t\t\t\trecordtext: \"");
          if (_jspx_meth_spring_005fmessage_005f29(_jspx_th_sec_005fauthorize_005f5, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\t\t        emptyrecords: \"");
          if (_jspx_meth_spring_005fmessage_005f30(_jspx_th_sec_005fauthorize_005f5, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\t\t\t\tloadtext: \"");
          if (_jspx_meth_spring_005fmessage_005f31(_jspx_th_sec_005fauthorize_005f5, _jspx_page_context))
            return;
          out.write("\",\n");
          out.write("\t\t\t\tpgtext : \"");
          if (_jspx_meth_spring_005fmessage_005f32(_jspx_th_sec_005fauthorize_005f5, _jspx_page_context))
            return;
          out.write("\"\n");
          out.write("\t\t\t}).navGrid(\"#agentListPagingDiv\",{edit:false,add:false,del:false,search:false});\n");
          out.write("\t\t\t\n");
          out.write("\t\t\t$(\".ui-jqgrid-titlebar\").hide();\n");
          out.write("\t\t\tresizeAgentGrid();\n");
          out.write("\t\t\t");
        }
        if (_jspx_th_sec_005fauthorize_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f5);
        _jspx_th_sec_005fauthorize_005f5_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f5, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f5_reused);
      }
      out.write("\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\tfunction loadServiceSummaryGrid(){\t\t\n");
      out.write("\t\t\t$(\"#summaryServiceList\").jqGrid({\n");
      out.write("\n");
      out.write("\t\t\t\turl: \"");
      out.print( ControllerConstants.GET_SERVICE_LIST_SUMMARY );
      out.write("\",\n");
      out.write("\t        \tmtype:\"GET\",\n");
      out.write("\t        \tpostData: {\n");
      out.write(" \t        \t\tserverInstanceId :$(\"#instance-id\").val() \n");
      out.write("\t        \t},\n");
      out.write("\t            datatype: \"json\",\n");
      out.write("\t            colNames:[\n");
      out.write("\t                      '");
      if (_jspx_meth_spring_005fmessage_005f33(_jspx_page_context))
        return;
      out.write("',\n");
      out.write("\t                      '");
      if (_jspx_meth_spring_005fmessage_005f34(_jspx_page_context))
        return;
      out.write("',\n");
      out.write("\t                      '");
      if (_jspx_meth_spring_005fmessage_005f35(_jspx_page_context))
        return;
      out.write("',\n");
      out.write("\t                      '");
      if (_jspx_meth_spring_005fmessage_005f36(_jspx_page_context))
        return;
      out.write("',\n");
      out.write("\t                      '");
      if (_jspx_meth_spring_005fmessage_005f37(_jspx_page_context))
        return;
      out.write("',\n");
      out.write("\t                      '");
      if (_jspx_meth_spring_005fmessage_005f38(_jspx_page_context))
        return;
      out.write("',\t                      \n");
      out.write("\t                      '");
      if (_jspx_meth_spring_005fmessage_005f39(_jspx_page_context))
        return;
      out.write("',\t                      \t  \t                      \n");
      out.write("\t                      '");
      if (_jspx_meth_spring_005fmessage_005f40(_jspx_page_context))
        return;
      out.write("',\n");
      out.write("\t                      '");
      if (_jspx_meth_spring_005fmessage_005f41(_jspx_page_context))
        return;
      out.write("',\n");
      out.write("\t                      '");
      if (_jspx_meth_spring_005fmessage_005f42(_jspx_page_context))
        return;
      out.write("'\n");
      out.write("\t                     ],\n");
      out.write("\t                     \n");
      out.write("\t\t\t\tcolModel:[\n");
      out.write("\t            \t{name:'id',index:'id',hidden:true,sortable:true},\n");
      out.write("\t            \t{name:'servInstanceId',index:'servInstanceId',hidden:false,sortable:true,align:'center'},\n");
      out.write("\t                {name:'name',index:'name',sortable:true,formatter:serviceNameFormatter},\n");
      out.write("\t                {name:'serviceTypeName',index:'serviceTypeName',sortable:false},\n");
      out.write("\t            \t{name:'serviceType',index:'serviceType',sortable:true,hidden:true},            \t\n");
      out.write("\t            \t{name:'enableStatus',index:'serviceState',sortable:false,align:'center', formatter: servicEnableColumnFormatter },\t            \t\n");
      out.write("\t            \t{name:'status',index:'status',sortable:false, align:'center',formatter: serviceStateFormatter,");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("},\t            \t\t            \t\n");
      out.write("\t            \t{name:'lastUpdatedDate',index:'lastUpdatedDate',sortable:true},\n");
      out.write("\t            \t{name:'syncStatus',index:'syncStatus',sortable:true, align:'center',formatter: serviceSyncStatusFormatter},\n");
      out.write("\t            \t{name:'delete',index:'delete',sortable:false, align:'center',formatter: deleteImageFormatter}\t            \t\n");
      out.write("\t            ],\n");
      out.write("\t            rowNum:");
      out.print( MapCache.getConfigValueAsInteger(SystemParametersConstant.TOTAL_ROWS_TO_DISPLAY_IN_GRID, 10) );
      out.write(",\n");
      out.write("\t            rowList:[10,20,60,100],\n");
      out.write("\t            height: 'auto',\n");
      out.write("\t\t\t\tsortname: 'lastUpdatedDate',\n");
      out.write("\t     \t\tsortorder: \"desc\",\n");
      out.write("\t            pager: \"#summaryServiceListPagingDiv\",\n");
      out.write("\t            contentType: \"application/json; charset=utf-8\",\t            \n");
      out.write("\t            viewrecords: true,\n");
      out.write("\t            multiselect: false,\n");
      out.write("\t            timeout : 120000,\n");
      out.write("\t            loadtext: \"Loading...\",\n");
      out.write("\t            caption: \"");
      if (_jspx_meth_spring_005fmessage_005f43(_jspx_page_context))
        return;
      out.write("\",\n");
      out.write("\t            beforeRequest:function(){\n");
      out.write("\t                $(\".ui-dialog-titlebar\").hide();\n");
      out.write("\t            }, \n");
      out.write("\t            beforeSend: function(xhr) {\n");
      out.write("\t                xhr.setRequestHeader(\"Accept\", \"application/json\");\n");
      out.write("\t                xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n");
      out.write("\t            },\t            \n");
      out.write("\t            \n");
      out.write("\t            /* caption: \"");
      if (_jspx_meth_spring_005fmessage_005f44(_jspx_page_context))
        return;
      out.write("\", */\n");
      out.write("\t     \t\tloadComplete: function(data) {\n");
      out.write("\t     \t\t\t\n");
      out.write("\t\t\t\t\t$('.checkboxbg').bootstrapToggle();\n");
      out.write("\t     \t\t\t\n");
      out.write("\t     \t\t\t/* $('.checkboxbg').change(function(){\n");
      out.write(" \t     \t\t\t\tserviceActiveInactiveToggle2(this);  \n");
      out.write("\t    \t\t\t}); */ \n");
      out.write("\t     \t\t\t\t \n");
      out.write("\t     \t\t\t\t     \t\t\t\n");
      out.write(" \t    \t\t\tvar $jqgrid = $(\"#summaryServiceList\");      \n");
      out.write("\t     \t\t\t$(\".jqgrow\", $jqgrid).each(function (index, row) {\n");
      out.write("\t     \t\t        var $row = $(row);\n");
      out.write("     \t\t            //Find the checkbox of the row and set it disabled\n");
      out.write("     \t\t            $row.find(\"input:checkbox\").attr(\"disabled\", \"disabled\");\n");
      out.write("\t     \t\t    });   \n");
      out.write("\t     \t\t\t\n");
      out.write("\t     \t\t\t\n");
      out.write("\t     \t\t\t$('#summaryServiceList .checkboxbg').bootstrapToggle();\n");
      out.write("\t     \t\t\t\n");
      out.write("\t    \t \t\t$('#summaryServiceList .checkboxbg').change(function(){\n");
      out.write("\t    \t \t\t\tserviceActiveInactiveToggleChanged(this);\n");
      out.write("\t    \t\t\t});\n");
      out.write("\t    \t \t\t\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\tonPaging: function (pgButton) {\n");
      out.write("\t\t\t\t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\tloadError : function(xhr,st,err) {\n");
      out.write("\t\t\t\t\thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\tbeforeSelectRow: function (rowid, e){\n");
      out.write("\t\t\t\t\tvar $grid = $(\"#summaryServiceList\");\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tif($(\"#jqg_summaryServiceList_\" + $grid.jqGrid ('getCell', rowid, 'id')).is(':checked')){\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\tif(ckIntanceSelected.indexOf($grid.jqGrid ('getCell', rowid, 'id')) == -1){\n");
      out.write("\t\t\t\t\t\t\tckIntanceSelected.push($grid.jqGrid ('getCell', rowid, 'id'));\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t\tif(ckIntanceSelected.indexOf($grid.jqGrid ('getCell', rowid, 'id')) != -1){\n");
      out.write("\t\t\t\t\t\t\tckIntanceSelected.splice(ckIntanceSelected.indexOf($grid.jqGrid ('getCell', rowid, 'id')), 1);\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t    return false;\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\tonSelectAll:function(id,status){\n");
      out.write("\t\t\t\t\tif(status==true){\n");
      out.write("\t\t\t\t\t\tckIntanceSelected = new Array();\n");
      out.write("\t\t\t\t\t\tfor(i=0;i<id.length;i++){\n");
      out.write("\t\t\t\t\t\t\tckIntanceSelected.push(id[i]);\n");
      out.write("\t\t\t         \t}\n");
      out.write("\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\tckIntanceSelected = new Array();\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\trecordtext: \"");
      if (_jspx_meth_spring_005fmessage_005f45(_jspx_page_context))
        return;
      out.write("\",\n");
      out.write("\t\t        emptyrecords: \"");
      if (_jspx_meth_spring_005fmessage_005f46(_jspx_page_context))
        return;
      out.write("\",\n");
      out.write("\t\t\t\tloadtext: \"");
      if (_jspx_meth_spring_005fmessage_005f47(_jspx_page_context))
        return;
      out.write("\",\n");
      out.write("\t\t\t\tpgtext : \"");
      if (_jspx_meth_spring_005fmessage_005f48(_jspx_page_context))
        return;
      out.write("\"\n");
      out.write("\t\t\t}).navGrid(\"#summaryServiceListPagingDiv\",{edit:false,add:false,del:false,search:false});\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\".ui-jqgrid-titlebar\").hide();\n");
      out.write("\t\t\t$(\".ui-pg-input\").height(\"10px\");\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t$(document).ready(function(){\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif($(\"#instance-fileStatInDBEnable\").val()=='true'){\n");
      out.write("\t\t\t\t$('#fileStatSts').attr('checked','checked');\n");
      out.write("\t\t\t\t$('#fileStatSts').bootstrapToggle('on');\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tif($(\"#instance-snmpAlertEnable\").val()=='true'){\n");
      out.write("\t\t\t\t$(\"#snmpSts\").attr('checked','checked');\n");
      out.write("\t\t\t\t$('#snmpSts').bootstrapToggle('on');\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tif($(\"#instance-webservicesEnable\").val()=='true'){\n");
      out.write("\t\t\t\t$('#webServiceSts').attr('checked','checked');\n");
      out.write("\t\t\t\t$('#webServiceSts').bootstrapToggle('on');\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tif($(\"#instance-restWebservicesEnable\").val()=='true'){\n");
      out.write("\t\t\t\t$('#restWebServiceSts').attr('checked','checked');\n");
      out.write("\t\t\t\t$('#restWebServiceSts').bootstrapToggle('on');\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t$(\"#logLevel\").text($('#instance-logsDetail-level').val());\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\tfunction serviceActiveInactiveToggle2(element){\n");
      out.write("\t\t\tclearResponseMsgDiv();\n");
      out.write("    \t\tclearResponseMsg();\n");
      out.write("    \t\tclearErrorMsg();\n");
      out.write("    \t\t$(\"#active-service-warning\").hide();\n");
      out.write("\t\t\t$(\"#inactive-service-warning\").hide();\n");
      out.write("\t\t\t$(\"#on-service-warning\").hide();\n");
      out.write("\t\t\t$(\"#off-service-warning\").hide();\n");
      out.write("\t\t\t$(\"#close-btn\").hide();\n");
      out.write("\t\t\t$(\"#enable-close-btn\").hide();\n");
      out.write("\t\t\t$(\"#cancel-btn\").hide();\n");
      out.write("\t\t\t$(\"#update-service-div\").hide();\n");
      out.write("\t\t\t$(\"#update-service-progress-div\").hide();\n");
      out.write("\t\t\t$(\"#startServicelbl\").hide();\n");
      out.write("\t\t\t$(\"#changeStatuslbl\").show();\n");
      out.write("    \t\t$(\"#syncWarningMsg\").hide();\n");
      out.write("\t\t\t\n");
      out.write("    \t\t$(\"#server-stop-close-btn\").hide();\n");
      out.write("\t\t\t$(\"#service-stop-close-btn\").hide();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\"#server-start-close-btn\").show();\n");
      out.write("\t\t\t$(\"#service-start-close-btn\").hide();\n");
      out.write("\n");
      out.write("\t\t\tvar toggleId = $(element).prop('name');\n");
      out.write("\t\t\tvar id_status  = toggleId.split(\"_\");\n");
      out.write("\t\n");
      out.write("\t\t\tif(id_status.indexOf(\"enable\") != -1) {\n");
      out.write("\n");
      out.write("\t\t\t\tvar rowId = id_status[1];\n");
      out.write("\t\t\t\tvar serviceEnableStatus=id_status[2];\n");
      out.write("\t\t\t\tvar serviceStatus = jQuery('#summaryServiceList').jqGrid('getCell', rowId, 'status');\n");
      out.write("\t\t\t\tvar serviceStateStatus = jQuery('#summaryServiceList').jqGrid('getCell', rowId, 'serviceState');\n");
      out.write("\t\t\t\tvar tempStatusId = $(serviceStatus).find(\"input:checkbox\").prop('id');\n");
      out.write("\t\t\t\tvar temp_status  = tempStatusId.split(\"_\"); \n");
      out.write("\t\t\t\tvar status=temp_status[1];\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tserviceEnablePopup(rowId,status,serviceEnableStatus);\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tvar id = id_status[0];\n");
      out.write("\t\t\t\tvar rowId = id;\n");
      out.write("\t\t\t\tvar serviceId = jQuery('#summaryServiceList').jqGrid ('getCell', rowId, 'id');\n");
      out.write("\t\t\t\tvar servInstanceId = jQuery('#summaryServiceList').jqGrid ('getCell', rowId, 'servInstanceId');\n");
      out.write("\t\t\t\tvar serviceName = $(jQuery('#summaryServiceList').jqGrid ('getCell', rowId, 'name')).closest(\"a\").html();\n");
      out.write("\t\t\t\tvar syncStatus=$(jQuery('#summaryServiceList').jqGrid ('getCell', rowId, 'syncStatus')).closest(\"img\").attr(\"alt\");\n");
      out.write("\t\t\t\tvar serviceStateStatus = jQuery('#summaryServiceList').jqGrid('getCell', rowId, 'serviceState');\n");
      out.write("\t\t\t\tvar serviceEnableStatus=id_status[2];\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tckIntanceSelected = new Array();\n");
      out.write("\t\t\t\tckIntanceSelected[0]=id;\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tif(id_status[1] == 'INACTIVE'){\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t$(\"#divStartService #lblServiceId\").text(servInstanceId);\n");
      out.write("\t\t\t\t\t$(\"#divStartService #lblServiceName\").text(serviceName);\n");
      out.write("\t\t\t\t\t$(\"#service-start-close-btn\").show();\n");
      out.write("\t\t\t\t\tif(syncStatus == 'false'){\n");
      out.write("\t\t\t\t\t\t$(\"#syncWarningMsg\").show();\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t//find enable status\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tvar enableStatus = jQuery('#summaryServiceList').jqGrid ('getCell', rowId, 'enableStatus');\n");
      out.write(" \t\t\t\t\tvar tempStatusId=$(enableStatus).find(\"input:checkbox\").prop('id');\n");
      out.write("\t\t\t\t\tvar temp_status  = tempStatusId.split(\"_\");\n");
      out.write(" \n");
      out.write("\t\t\t\t\tvar status=temp_status[2];\n");
      out.write("\n");
      out.write("\t\t\t\t\tif(status == 'INACTIVE'){\n");
      out.write("\t\t\t\t\t\tclearAllMessages();\n");
      out.write("\t\t\t\t\t\tclearResponseMsgPopUp();\n");
      out.write("\t\t\t\t\t\t$(\"#serviceEnableStatus\").val(serviceEnableStatus);\n");
      out.write("\t\t\t\t\t\t$(\"#serviceEnableId\").val(serviceId);\n");
      out.write("\t\t\t\t\t\t$(\"#startServicelbl\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#changeStatuslbl\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#off-service-warning\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#update-service-div\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#cancel-btn\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#close-btn\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#enable-close-btn\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#update-service-progress-div\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#updateServiceStatus\").click();\n");
      out.write("\t\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t$(\"#startService\").click();\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t}else if(id_status[1] == 'ACTIVE'){\n");
      out.write("\n");
      out.write("\t\t\t\t\t$(\"#divStopService #lblServiceId\").text(servInstanceId);\n");
      out.write("\t\t\t\t\t$(\"#divStopService #lblServiceName\").text(serviceName);\n");
      out.write("\t\t\t\t\t$(\"#service-start-close-btn\").show();\n");
      out.write("\t\t\t\t\t$(\"#service-stop-close-btn\").show();\n");
      out.write("\t\t\t\t\t$(\"#stopService\").click();\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t} \n");
      out.write("\t\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\tfunction serviceStateFormatter(cellvalue, options, rowObject){\n");
      out.write("\t\t\t var toggleId = rowObject[\"id\"] + \"_\" + cellvalue;\n");
      out.write("\t\t\t var serviceName = rowObject[\"name\"].replace(/ /g, \"_\");\n");
      out.write("\t\t\t var toggleIdDiv = serviceName + \"_service_status\";\n");
      out.write("\t\t\t \n");
      out.write("\t\t\t loadServiceStatusGUI(rowObject[\"id\"],'service_management','',rowObject,'serverInstanceSummary'); \n");
      out.write("\t\t\t return '<div id=\"service_instance_status_loader_'+rowObject[\"id\"]+'\"><div id=\"'+toggleIdDiv+'\"><img src=\"img/preloaders/circle-red.gif\" width=\"20px\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Loading Status..\" height=\"20px\"></div></div>';\n");
      out.write("\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\tfunction exportServiceInstanceBeforeDelete(exportData ,id){\n");
      out.write("\n");
      out.write("\t\t\t\t$(\"#exportServiceInstanceId\").val(id);\n");
      out.write("\t\t\t\t$(\"#isExportForDelete\").val(true);\n");
      out.write("\t\t\t\t$(\"#REQUEST_ACTION_TYPE\").val('");
      out.print(BaseConstants.SERVICE_MANAGEMENT);
      out.write("');\n");
      out.write("\t\t\t\t//$(\"#btnExportDeletePopup\").prop('disabled', true);\n");
      out.write("\t\t\t\t$(\"#btnDeletePopup\").prop('disabled', false);\n");
      out.write("\t\t\t\t$(\"#exportPath\").val(exportData);\n");
      out.write("\t\t\t\t$(\"#export-service-instance-config-form\").submit();\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction serviceSyncStatusFormatter(cellvalue, options, rowObject){\n");
      out.write("\t\t\treturn '';\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction setDefaultStatus(){\n");
      out.write("\t\t\tvar serviceStatus=$(\"#serviceEnableStatus\").val();\n");
      out.write("\t\t\tif(serviceStatus == 'ACTIVE'){\n");
      out.write("\t\t\t\t$('#enable_'+$(\"#serviceEnableId\").val()).bootstrapToggle('on');\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\t$('#enable_'+$(\"#serviceEnableId\").val()).bootstrapToggle('off');\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tcloseFancyBox();\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction setStartDefaultStatus(){\n");
      out.write("\t\t\tvar serviceStatus=$(\"#serviceEnableStatus\").val();\n");
      out.write("\t\t\tif(serviceStatus == 'ACTIVE'){\n");
      out.write("\t\t\t\t$('#'+$(\"#serviceEnableId\").val() +'_'+serviceStatus).bootstrapToggle('on');\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\t$('#'+$(\"#serviceEnableId\").val() +'_'+serviceStatus).bootstrapToggle('off');\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tcloseFancyBox();\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction loadCreateServicePage(){\n");
      out.write("\t\t\t$(\"#profileserverInstanceId\").val($('#instance-id').val());\n");
      out.write("   \t\t\t$('#loadCreateServiceForm').submit();\t\n");
      out.write("   \t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction setServiceSyncParameters(serviceId, serviceName,serviceInstanceId){\n");
      out.write("\t\t\t$(\"#syncServiceId\").val(serviceId);\n");
      out.write("\t\t\t$(\"#syncServiceName\").val(serviceName);\n");
      out.write("\t\t\t$(\"#syncServiceInstanceId\").val(serviceInstanceId);\n");
      out.write("\t\t\tsyncServiceInstanceById(serviceId);\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction checkServiceInstanceStatus(rowId){\n");
      out.write("\t\t\treturn $(jQuery('#summaryServiceList').jqGrid ('getCell', rowId, 'status')).find(\".checkboxbg\").prop('id').split('_')[1];\t\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction serviceNameFormatter(cellvalue, options, rowObject){\n");
      out.write("\t\t\tvar serverInstanceId = $('#instance-id').val();\n");
      out.write("\t\t\tvar serviceName = rowObject[\"name\"].replace(/ /g, \"_\");\n");
      out.write("\t\t\tvar serviceDetailLnkId = serviceName+\"_service_detail_lnk\";\n");
      out.write("\t\t\t");
      if (_jspx_meth_sec_005fauthorize_005f8(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t");
      if (_jspx_meth_sec_005fauthorize_005f9(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\tfunction deleteImageFormatter(cellvalue, options, rowObject){\n");
      out.write("\t\t\n");
      out.write("\t\t\tvar toggleId = rowObject[\"id\"];\n");
      out.write("\t\t\tvar servInstanceId = rowObject[\"servInstanceId\"];\n");
      out.write("\t\t\tvar service_name = rowObject[\"name\"];\n");
      out.write("\t\t\tvar tag_name = 'server_instance';\n");
      out.write("\t\t\tvar serviceName = rowObject[\"name\"].replace(/ /g, \"_\");\n");
      out.write("\t\t\tvar serviceDelImgId = serviceName+\"_service_del_img\";\n");
      out.write("\t\t\t\n");
      out.write("\t\t\treturn '<i class=\"fa fa-trash\" id=\"'+serviceDelImgId+'\" onclick=\"deletePopup('+\"'\" + tag_name + \"','\"+toggleId+\"','\"+servInstanceId+\"','\"+service_name+\"'\" + ')\" style=\"cursor: pointer; cursor: hand;\"></i>';\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\tfunction checkInstanceState(rowId){\n");
      out.write("\t\t\treturn $(jQuery('#summaryServiceList').jqGrid ('getCell', rowId, 'status')).find(\".checkboxbg\").prop('id').split('_')[1];\t\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\tfunction serviceEnablePopup(id,serviceStatus,enableStatus){\n");
      out.write("\t\t\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\tclearResponseMsgPopUp();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\"#serviceEnableStatus\").val(enableStatus);\n");
      out.write("\t\t\t$(\"#serviceEnableId\").val(id);\n");
      out.write("\t\t\t$(\"#active-service-warning\").hide();\n");
      out.write("\t\t\t$(\"#inactive-service-warning\").hide();\n");
      out.write("\t\t\t$(\"#on-service-warning\").hide();\n");
      out.write("\t\t\t$(\"#off-service-warning\").hide();\n");
      out.write("\t\t\t$(\"#close-btn\").hide();\n");
      out.write("\t\t\t$(\"#enable-close-btn\").hide();\n");
      out.write("\t\t\t$(\"#cancel-btn\").hide();\n");
      out.write("\t\t\t$(\"#update-service-div\").hide();\n");
      out.write("\t\t\t$(\"#update-service-progress-div\").hide();\n");
      out.write("\t\t\t$(\"#startServicelbl\").hide();\n");
      out.write("\t\t\t$(\"#changeStatuslbl\").show();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif(enableStatus == 'ACTIVE'){\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tif(serviceStatus == 'ACTIVE'){\n");
      out.write("\t\t\t\t\t$(\"#on-service-warning\").show();\n");
      out.write("\t\t\t\t\t$(\"#update-service-div\").hide();\n");
      out.write("\t\t\t\t\t$(\"#close-btn\").hide();\n");
      out.write("\t\t\t\t\t$(\"#enable-close-btn\").show();\n");
      out.write("\t\t\t\t\t$(\"#update-service-progress-div\").hide();\n");
      out.write("\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t$(\"#active-service-warning\").show();\n");
      out.write("\t\t\t\t\t$(\"#update-service-div\").show();\n");
      out.write("\t\t\t\t\t$(\"#update-service-progress-div\").hide();\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t$(\"#inactive-service-warning\").show();\n");
      out.write("\t\t\t\t$(\"#update-service-div\").show();\n");
      out.write("\t\t\t\t$(\"#update-service-progress-div\").hide();\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\"#updateServiceStatus\").click();\n");
      out.write("\t\t} \n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\tfunction changeServiceStatus(){\n");
      out.write("\t\t\tresetWarningDisplay();\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\tvar tempStatus ;\n");
      out.write("\t\t\t$(\"#update-service-div\").hide();\n");
      out.write("\t\t\t$(\"#update-service-progress-div\").show();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tvar serviceStatus=$(\"#serviceEnableStatus\").val();\n");
      out.write("\t\t\tif(serviceStatus == 'ACTIVE'){\n");
      out.write("\t\t\t\ttempStatus = 'INACTIVE';\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\ttempStatus = 'ACTIVE';\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t $.ajax({\n");
      out.write("\t\t\t\turl: '");
      out.print(ControllerConstants.UPDATE_SERVICE_ENABLE_STATUS);
      out.write("',\n");
      out.write("\t\t\t\tcache: false,\n");
      out.write("\t\t\t\tasync: true,\n");
      out.write("\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\tdata:\n");
      out.write("\t\t\t\t {\n");
      out.write("\t\t\t\t\t\"serviceId\"     : $(\"#serviceEnableId\").val(),\n");
      out.write("\t\t\t\t\t\"serviceStatus\" : tempStatus\n");
      out.write("\t\t\t\t}, \n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t\tvar responseCode = response.code; \n");
      out.write("\t\t\t\t\tvar responseMsg = response.msg; \n");
      out.write("\t\t\t\t\tvar responseObject = response.object;\n");
      out.write("\t\t\t\t\t$(\"#update-service-div\").show();\n");
      out.write("\t\t\t\t\t$(\"#update-service-progress-div\").hide();\n");
      out.write("\t\t\t\t\tif(responseCode == \"200\"){\n");
      out.write("\t\t\t\t\t\tresetWarningDisplay();\n");
      out.write("\t\t\t\t\t\tclearAllMessages();\n");
      out.write("\t\t\t\t\t\tif(tempStatus == 'ACTIVE'){\n");
      out.write("\t\t\t\t\t\t\t$('#enable_'+$(\"#serviceEnableId\").val() +'_'+serviceStatus).bootstrapToggle('on');\n");
      out.write("\t\t\t\t\t\t\t$('#enable_'+$(\"#serviceEnableId\").val() +'_'+serviceStatus).attr(\"id\",'#enable_'+$(\"#serviceEnableId\").val() +'_'+tempStatus);\n");
      out.write("\t\t\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t\t\t$('#enable_'+$(\"#serviceEnableId\").val() +'_'+serviceStatus).bootstrapToggle('off');\n");
      out.write("\t\t\t\t\t\t\t$('#enable_'+$(\"#serviceEnableId\").val() +'_'+serviceStatus).attr(\"id\",'#enable_'+$(\"#serviceEnableId\").val() +'_'+tempStatus);\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\tshowSuccessMsgPopUp(responseMsg);\n");
      out.write("\t\t\t\t\t\t$(\"#cancel-btn\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#active-service-warning\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#inactive-service-warning\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#on-service-warning\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#off-service-warning\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#close-btn\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#enable-close-btn\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#update-service-div\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#update-service-progress-div\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#startServicelbl\").hide();\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t}else if(responseObject != undefined && responseObject != 'undefined' && responseCode == \"400\"){\n");
      out.write("\t\t\t\t\t\tshowErrorMsg(responseMsg);\n");
      out.write("\t\t\t\t\t\t$('#enable_'+$(\"#serviceEnableId\").val() +'_'+serviceStatus).bootstrapToggle('toggle');\n");
      out.write("\t\t\t\t\t\t$(\"#cancel-btn\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#active-service-warning\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#inactive-service-warning\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#on-service-warning\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#off-service-warning\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#close-btn\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#enable-close-btn\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#update-service-div\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#update-service-progress-div\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#startServicelbl\").hide();\n");
      out.write("\t\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t\tresetWarningDisplay();\n");
      out.write("\t\t\t\t\t\tclearAllMessages();\n");
      out.write("\t\t\t\t\t\tshowErrorMsg(responseMsg);\n");
      out.write("\t\t\t\t\t\t$('#enable_'+$(\"#serviceEnableId\").val() +'_'+serviceStatus).bootstrapToggle('toggle');\n");
      out.write("\t\t\t\t\t\t$(\"#cancel-btn\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#active-service-warning\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#inactive-service-warning\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#on-service-warning\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#off-service-warning\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#close-btn\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#enable-close-btn\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#update-service-div\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#update-service-progress-div\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#startServicelbl\").hide();\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t$(\"#active-service-warning\").hide();\n");
      out.write("\t\t\t\t\t$(\"#inactive-service-warning\").hide();\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t\thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}); \n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\tfunction servicEnableColumnFormatter(cellvalue, options, rowObject){\n");
      out.write("\t\t\tvar toggleIdName = \"enable_\"+rowObject[\"id\"] + \"_\" + cellvalue;\n");
      out.write("\t\t\tvar toggleId = \"enable_\"+rowObject[\"id\"];\n");
      out.write("\t\t\tvar serviceName = rowObject[\"name\"].replace(/ /g, \"_\");\n");
      out.write("\t\t\tvar toggleIdDiv = serviceName + \"_service_enable_status\";\n");
      out.write("\t\t\treturn '';\n");
      out.write("\t\t\tif(cellvalue == 'ACTIVE'){\n");
      out.write("\t\t\t\treturn '<div id=\"'+toggleIdDiv+'\"><input class=\"checkboxbg\" id=' + toggleId + ' name=' + toggleIdName + ' data-on=\"Active\" data-off=\"InActive\" checked data-size=\"mini\" type=\"checkbox\"></div>';\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\treturn '<div id=\"'+toggleIdDiv+'\"><input class=\"checkboxbg\" id=' + toggleId + ' name=' + toggleIdName + ' data-on=\"Active\" data-off=\"InActive\" data-size=\"mini\" type=\"checkbox\"></div>';\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction agentStateFormatter(cellvalue, options, rowObject){\n");
      out.write("\t\t\tvar toggleId = rowObject[\"id\"] + \"_agentStatus_\" + cellvalue;\n");
      out.write("\t\t\tvar agentType = rowObject[\"typeOfAgent\"].replace(/ /g, \"_\");\n");
      out.write("\t\t\tvar toggleIdDiv = agentType + \"_status\";\n");
      out.write("\t\t\tif(cellvalue == 'INACTIVE'){\n");
      out.write("\t\t\t\treturn '<div id=\"'+toggleIdDiv+'\"><input class=\"checkboxbg\" id=\"'+ toggleId +'\" onchange=\"\" data-switch-no-init=\"\" type=\"checkbox\"></div>';\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\treturn '<div id=\"'+toggleIdDiv+'\"><input class=\"checkboxbg\" id=\"'+ toggleId +'\" onchange=\"\" data-switch-no-init=\"\" type=\"checkbox\" checked=\"checked\"></div>';\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\tfunction agentNameFormatter(cellvalue, options, rowObject){\n");
      out.write("\t\t\tvar agentType = rowObject[\"typeOfAgent\"].replace(/ /g, \"_\");\n");
      out.write("\t\t\tvar detailLinkDiv = agentType + \"_detail_lnk\";\n");
      out.write("\t\t\treturn '<a  id=\"'+detailLinkDiv+'\" class = \"link\" style=\"cursor: pointer;\" onclick=\"redirectAgentConfig('+\"'\" + rowObject[\"agentTypeId\"]+ \"'\"+')\">' + cellvalue + '</a>' ;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\n");
      out.write("\t\tfunction redirectAgentConfig(agentTypeId){\n");
      out.write("\t\t\t$(\"#systemAgentTypeId\").val(agentTypeId);\n");
      out.write("\t\t\t$(\"#agent_server_Instance_Id\").val($(\"#instance-id\").val());\n");
      out.write("\t\t\t$(\"#agent-config-form\").submit();\n");
      out.write("\t\t}\n");
      out.write("\t\tfunction resizeAgentGrid(){\n");
      out.write("\t\t\tvar $grid = $(\"#agentList\"),\n");
      out.write("\t\t    newWidth = $grid.closest(\".ui-jqgrid\").parent().width();\n");
      out.write("\t\t\t\n");
      out.write("\t \t    if(newWidth < 1000){\n");
      out.write("\t\t    \tnewWidth = 800;\n");
      out.write("\t\t    } \n");
      out.write("\t\t    $grid.jqGrid(\"setGridWidth\", newWidth, true);\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction viewService(serviceId,serviceType,serviceName,instanceId){\n");
      out.write("\t\t\t$(\"#serviceId\").val(serviceId);\t\n");
      out.write("\t\t\t$(\"#serviceType\").val(serviceType);\n");
      out.write("\t\t\t$(\"#serviceName\").val(serviceName);\n");
      out.write("\t\t\t$(\"#instanceId\").val(instanceId);\n");
      out.write("\t\t\t$(\"#service_form\").submit();\n");
      out.write("\t\t}\n");
      out.write("\t\n");
      out.write("\t\tfunction clearServiceSummaryInstanceGrid(){\n");
      out.write("\t\t\tclearResponseMsgDiv();\n");
      out.write("\t\t\tvar $grid = $(\"#summaryServiceList\");\n");
      out.write("\t\t\t$grid.jqGrid('setGridParam',{datatype:'json',page: 1}).trigger('reloadGrid');\n");
      out.write("\t\t\tvar $grid = $(\"#summaryServiceList\");\n");
      out.write("\t\t\tvar rowIds = $grid.jqGrid('getDataIDs');\n");
      out.write("\t\t\t// iterate through the rows and delete each of them\n");
      out.write("\t\t\tfor(var i=0,len=rowIds.length;i<len;i++){\n");
      out.write("\t\t\t\tvar currRow = rowIds[i];\n");
      out.write("\t\t\t\t$grid.jqGrid('delRowData', currRow);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t$(document).ready(function() {\n");
      out.write("\t\t\t$('#lblInstanceName').text($('#instance-name').val());\n");
      out.write("\t\t\t$('#lblInstanceHost').text($('#instance-server-ip').val());\n");
      out.write("\t\t\t$('#lblInstancePort').text($('#instance-port').val());\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\tfunction updtSNMPAlertPopup(){\n");
      out.write("\t\t\tclearResponseMsgDiv();\n");
      out.write("\t\t\tvar status = $('#snmpSts').prop('checked');\n");
      out.write("\t\t\tif(status==true)\n");
      out.write("\t\t\t\t$('#inst-snmp-sts').bootstrapToggle('off');\n");
      out.write("\t\t\telse\n");
      out.write("\t\t\t\t$('#inst-snmp-sts').bootstrapToggle('on');\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$('#a-snmp').click();\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction resetSNMPAlertToggle(){\n");
      out.write("\t\t\tresetToggle('snmpSts',updtSNMPAlertPopup);\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction updtSNMPAlert(){\n");
      out.write("\t\t\tclearResponseMsgDiv();\n");
      out.write("\t\t\tvar status = $('#snmpSts').prop('checked');\n");
      out.write("\t\t\t$(\"#snmp-buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#snmp-progress-bar-div\").show();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl: '");
      out.print( ControllerConstants.UPDATE_SNMP_ALERT_STATUS );
      out.write("',\n");
      out.write("\t\t\t\t    cache: false,\n");
      out.write("\t\t\t\t\tasync: true,\n");
      out.write("\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t\tid: $('#instance-id').val(),\n");
      out.write("\t\t\t\t\t\tstatus : status\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\t$(\"#snmp-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#snmp-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write("\t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t    \t\n");
      out.write("\t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write("\t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t\t    \t\tclearResponseMsg();\n");
      out.write("\t\t\t\t    \t\tclearErrorMsg();\n");
      out.write("\t\t\t\t    \t\tshowSuccessMsg(response.msg);\n");
      out.write("\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t}else{\n");
      out.write("\t\t\t\t    \t\t$(\"#snmp-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t\t$(\"#snmp-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t    \t\t$('#snmpSts').attr('checked',status);\n");
      out.write("\t\t\t\t    \t\tshowErrorMsg(response.msg);\n");
      out.write("\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t    \t$(\"#snmp-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#snmp-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction updtFileStateInDb(){\n");
      out.write("\t\t\tclearResponseMsgDiv();\n");
      out.write("\t\t\tvar status = $('#fileStatSts').prop('checked');\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl: '");
      out.print( ControllerConstants.UPDATE_FILE_STATE_DB );
      out.write("',\n");
      out.write("\t\t\t\t    cache: false,\n");
      out.write("\t\t\t\t\tasync: true,\n");
      out.write("\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t\tid: $('#instance-id').val(),\n");
      out.write("\t\t\t\t\t\tstatus : status\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write("\t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t    \t\n");
      out.write("\t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write("\t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t\t    \t\tclearResponseMsg();\n");
      out.write("\t\t\t\t    \t\tclearErrorMsg();\n");
      out.write("\t\t\t\t    \t\tshowSuccessMsg(response.msg);\n");
      out.write("\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t}else{\n");
      out.write("\t\t\t\t    \t\t$('#fileStatSts').attr('checked',status);\n");
      out.write("\t\t\t\t    \t\tshowErrorMsg(response.msg);\n");
      out.write("\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction updtWebServicePopup(){\n");
      out.write("\t\t\tclearResponseMsgDiv();\n");
      out.write("\t\t\tvar status = $('#webServiceSts').prop('checked');\n");
      out.write("\t\t\tif(status==true)\n");
      out.write("\t\t\t\t$('#inst-webservice-sts').bootstrapToggle('off');\n");
      out.write("\t\t\telse\n");
      out.write("\t\t\t\t$('#inst-webservice-sts').bootstrapToggle('on');\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$('#a-webservice').click();\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction updtRestWebServicePopup(){\n");
      out.write("\t\t\tclearResponseMsgDiv();\n");
      out.write("\t\t\tvar status = $('#restWebServiceSts').prop('checked');\n");
      out.write("\t\t\tif(status==true)\n");
      out.write("\t\t\t\t$('#inst-restwebservice-sts').bootstrapToggle('off');\n");
      out.write("\t\t\telse\n");
      out.write("\t\t\t\t$('#inst-restwebservice-sts').bootstrapToggle('on');\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$('#a-restwebservice').click();\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction resetWebserviceToggle(){\n");
      out.write("\t\t\tresetToggle('webServiceSts',updtWebServicePopup);\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction resetRestWebserviceToggle(){\n");
      out.write("\t\t\tresetToggle('restWebServiceSts',updtRestWebServicePopup);\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction updtWebServiceState(){\n");
      out.write("\t\t\tclearResponseMsgDiv();\n");
      out.write("\t\t\tvar status = $('#webServiceSts').prop('checked');\n");
      out.write("\t\t\t$(\"#webservice-buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#webservice-progress-bar-div\").show();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl: '");
      out.print( ControllerConstants.UPDATE_WEB_SERVICE_STATE );
      out.write("',\n");
      out.write("\t\t\t\t    cache: false,\n");
      out.write("\t\t\t\t\tasync: true,\n");
      out.write("\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t\tid: $('#instance-id').val(),\n");
      out.write("\t\t\t\t\t\tstatus : status\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\t$(\"#webservice-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#webservice-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write("\t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t    \t\n");
      out.write("\t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write("\t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t\t    \t\tclearResponseMsg();\n");
      out.write("\t\t\t\t    \t\tclearErrorMsg();\n");
      out.write("\t\t\t\t    \t\tshowSuccessMsg(response.msg);\n");
      out.write("\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t}else{\n");
      out.write("\t\t\t\t    \t\t$(\"#webservice-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t\t$(\"#webservice-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t    \t\t$('#webServiceSts').attr('checked',status);\n");
      out.write("\t\t\t\t    \t\tshowErrorMsg(response.msg);\n");
      out.write("\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction updtRestWebServiceState(){\n");
      out.write("\t\t\tclearResponseMsgDiv();\n");
      out.write("\t\t\tvar status = $('#restWebServiceSts').prop('checked');\n");
      out.write("\t\t\t$(\"#restwebservice-buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#restwebservice-progress-bar-div\").show();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl: '");
      out.print( ControllerConstants.UPDATE_REST_WEB_SERVICE_STATE );
      out.write("',\n");
      out.write("\t\t\t\t    cache: false,\n");
      out.write("\t\t\t\t\tasync: true,\n");
      out.write("\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t\tid: $('#instance-id').val(),\n");
      out.write("\t\t\t\t\t\tstatus : status\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\t$(\"#restwebservice-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#restwebservice-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write("\t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t    \t\n");
      out.write("\t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write("\t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t\t    \t\tclearResponseMsg();\n");
      out.write("\t\t\t\t    \t\tclearErrorMsg();\n");
      out.write("\t\t\t\t    \t\tshowSuccessMsg(response.msg);\n");
      out.write("\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t}else{\n");
      out.write("\t\t\t\t    \t\t$(\"#restwebservice-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t\t$(\"#restwebservice-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t    \t\t$('#restwebServiceSts').attr('checked',status);\n");
      out.write("\t\t\t\t    \t\tshowErrorMsg(response.msg);\n");
      out.write("\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction resetToggle(sourceId,func){\n");
      out.write("\t\t\tvar status = $('#'+sourceId).prop('checked');\n");
      out.write("\t\t\t$('#'+sourceId).unbind('change');\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif(status==true)\n");
      out.write("\t\t\t\t$('#'+sourceId).bootstrapToggle('off');\n");
      out.write("\t\t\telse\n");
      out.write("\t\t\t\t$('#'+sourceId).bootstrapToggle('on');\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$('#'+sourceId).change(function(){\n");
      out.write("\t\t\t\tfunc();\n");
      out.write("\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tvar toggleServiceId ,toggleServiceStatus, currentGridEvent ;\n");
      out.write("\t\t\n");
      out.write("        function serviceActiveInactiveToggleChanged(element){\n");
      out.write("            clearResponseMsgDiv();\n");
      out.write("            clearResponseMsg();\n");
      out.write("            clearErrorMsg();\n");
      out.write("            $(\"#server-stop-close-btn\").hide();\n");
      out.write("            $(\"#service-stop-close-btn\").hide();\n");
      out.write("            $(\"#syncWarningMsg\").hide();\n");
      out.write("\t\t\t$(\"#off-service-warning\").hide();            \n");
      out.write("           \n");
      out.write("            $(\"#server-start-close-btn\").show();\n");
      out.write("            $(\"#service-start-close-btn\").hide();\n");
      out.write("            currentGridEvent = element\n");
      out.write("           \n");
      out.write("            var toggleId = $(element).prop('id');\n");
      out.write("            var id_status  = toggleId.split(\"_\");\n");
      out.write("            var id = id_status[0];\n");
      out.write("            var rowId = id;\n");
      out.write("            var serviceId = jQuery('#summaryServiceList').jqGrid ('getCell', rowId, 'id');\n");
      out.write("            toggleServiceId = serviceId;\n");
      out.write("\t\t\tvar servInstanceId = jQuery('#summaryServiceList').jqGrid ('getCell', rowId, 'servInstanceId');\n");
      out.write("            var serviceName = $(jQuery('#summaryServiceList').jqGrid ('getCell', rowId, 'name')).closest(\"a\").html();\n");
      out.write("            toggleServiceStatus = id_status[1];\n");
      out.write("            var syncStatus=$(jQuery('#summaryServiceList').jqGrid ('getCell', rowId, 'syncStatus')).closest(\"img\").attr(\"alt\");\n");
      out.write("           \n");
      out.write("            ckIntanceSelected = new Array();\n");
      out.write("            ckIntanceSelected[0]=id;\n");
      out.write("\n");
      out.write("            if(id_status[1] == 'INACTIVE'){\n");
      out.write("                $(\"#divStartService #lblServiceId\").text(servInstanceId);\n");
      out.write("                $(\"#divStartService #lblServiceName\").text(serviceName);\n");
      out.write("                $(\"#startServiceId\").val(serviceId);\n");
      out.write("                $(\"#server-start-close-btn\").show();\n");
      out.write("                if(syncStatus == 'false'){\n");
      out.write("                    $(\"#syncWarningMsg\").show();\n");
      out.write("                }\n");
      out.write("                $(\"#startService\").click();\n");
      out.write("               \n");
      out.write("            }else if(id_status[1] == 'ACTIVE'){\n");
      out.write("               \n");
      out.write("                $(\"#divStopService #lblServiceId\").text(servInstanceId);\n");
      out.write("                $(\"#divStopService #lblServiceName\").text(serviceName);\n");
      out.write("                $(\"#stopServiceId\").val(serviceId);\n");
      out.write("                $(\"#server-stop-close-btn\").show();\n");
      out.write("                $(\"#stopService\").click();\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\t\t\n");
      out.write("\t\tfunction resetCheckBox(actionType){\n");
      out.write("\t\t\t$('#'+toggleServiceId +'_'+toggleServiceStatus).unbind('change');\n");
      out.write("\t\t\tif(toggleServiceStatus == 'ACTIVE'){\n");
      out.write("\t\t\t\t$('#'+toggleServiceId +'_'+toggleServiceStatus).bind('change');\n");
      out.write("\t\t\t\t$('#'+toggleServiceId +'_'+toggleServiceStatus).bootstrapToggle('on');\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\t$('#'+toggleServiceId +'_'+toggleServiceStatus).bind('change');\n");
      out.write("\t\t\t\t$('#'+toggleServiceId +'_'+toggleServiceStatus).bootstrapToggle('off');\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$('#'+toggleServiceId +'_'+toggleServiceStatus + '.checkboxbg').change(function(){\n");
      out.write("\t\t\t\tserviceActiveInactiveToggleChanged(currentGridEvent);\n");
      out.write("\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction agentActiveInactiveToggleChanged(element){\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tvar toggleId = $(element).prop('id');\n");
      out.write("\t\t\tvar id_status  = toggleId.split(\"_\");\n");
      out.write("\t\t\tvar id = id_status[0];\t\t\t\n");
      out.write("\t\t\tvar rowId = id;\n");
      out.write(" \t\t\tvar agentId= jQuery('#agentList').jqGrid ('getCell',rowId,'id'); \n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif(id_status[2]=='INACTIVE'){\n");
      out.write("\t\t\t\t$(\"#startAgentId\").val(agentId);\n");
      out.write("\t\t\t\t$(\"#startAgentStatus\").val(id_status[2]);\n");
      out.write("\t\t\t\t$(\"#start-agent\").click();\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t}else if(id_status[2]=='ACTIVE'){\n");
      out.write("\t\t\t\t$(\"#stopAgentId\").val(agentId);\n");
      out.write("\t\t\t\t$(\"#stopAgentStatus\").val(id_status[2]);\n");
      out.write("\t\t\t\t$(\"#stop-agent\").click();\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction reloadCachePopup(){\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\t$('#reload-cache-buttons-div #btn-no').attr('onclick','closeFancyBox();');\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif($('#synchSISts').val()=='false' || $('#synchChildSts').val()=='false')\n");
      out.write("\t\t\t\t$('#reload-cache-msgMismatch').show();\n");
      out.write("\t\t\telse\n");
      out.write("\t\t\t\t$('#reload-cache-msgMismatch').hide();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\"#reloadcache\").click();\t\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction softRestartPopup(){\n");
      out.write("\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\n");
      out.write("\t\t\t$('#soft-restart-buttons-div #btn-no').attr('onclick','closeFancyBox();');\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif($('#server_start_btn').val() == 'false'){\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tif($('#synchSISts').val()=='false' || $('#synchChildSts').val()=='false')\n");
      out.write("\t\t\t\t\t$('#soft-restart-msgMismatch').show();\n");
      out.write("\t\t\t\telse{\n");
      out.write("\t\t\t\t\t$('#soft-restart-msgMismatch').hide();\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t$(\"#softrestart\").click();\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t} else{\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t$(\"#offwarn\").click();\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction syncPublishPopup(){\n");
      out.write("\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\n");
      out.write("\t\t\t$('#sync-publish-buttons-div #btn-no').attr('onclick','closeFancyBox();');\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t$(\"#syncPublish\").click();\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction reloadConfigPopup(){\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$('#reload-config-buttons-div #btn-no').attr('onclick','closeFancyBox();');\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif($('#server_start_btn').val()=='false'){\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tif($('#synchSISts').val()=='false' || $('#synchChildSts').val()=='false')\n");
      out.write("\t\t\t\t\t$('#reload-config-msgMismatch').show();\n");
      out.write("\t\t\t\telse\n");
      out.write("\t\t\t\t\t$('#reload-config-msgMismatch').hide();\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t$(\"#reloadconfig\").click();\t\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t} else{\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t$(\"#offwarn\").click();\n");
      out.write("\t\t\t}\n");
      out.write("\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction shutdownPopup(){\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\tclearErrorMsgpopUp();\n");
      out.write("    \t\tclearResponseMsgPopUp();\n");
      out.write("\t\t\t$('#shutdown').click();\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction startPopup(){\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\tclearResponseMsgDiv();\n");
      out.write("    \t\tclearErrorMsgpopUp();\n");
      out.write("    \t\tclearResponseMsgPopUp();\n");
      out.write("    \t\t\n");
      out.write("\t\t\t$('#start-buttons-div #btn-no').attr('onclick','closeFancyBox();');\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif($('#synchSISts').val()=='false' || $('#synchChildSts').val()=='false')\n");
      out.write("\t\t\t\t$('#start-msgMismatch').show();\n");
      out.write("\t\t\telse\n");
      out.write("\t\t\t\t$('#start-msgMismatch').hide();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$('#start').click();\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction searchInstanceCriteria(){\n");
      out.write("\t\t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t \n");
      out.write("\t\t\tvar $grid = $(\"#summaryServiceList\");\n");
      out.write("\t\t\t$grid.jqGrid('setGridParam',{datatype:'json',page: 1}).trigger('reloadGrid');\n");
      out.write(" \t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction exportConfigPopup(){\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\"#exportInstancesId\").val($('#instance-id').val());\n");
      out.write("\t\t\t$(\"#isExportForDelete\").val(false);\n");
      out.write("\t\t\t$(\"#REQUEST_ACTION_TYPE\").val('");
      out.print(BaseConstants.UPDATE_INSTANCE_SUMMARY);
      out.write("');\n");
      out.write("\t\t\t$(\"#export-config-form\").submit();\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\tfunction restartInstance(){\n");
      out.write("\t\t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t$(\"#shutdown-buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#shutdown-progress-bar-div\").show();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\turl: '");
      out.print( ControllerConstants.RESTART_SERVER_INSTANCE );
      out.write("',\n");
      out.write("\t\t\t\t\t    cache: false,\n");
      out.write("\t\t\t\t\t\tasync: true,\n");
      out.write("\t\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\t\t\ttimeout : 15000,\n");
      out.write("\t\t\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t\t\tid: $('#instance-id').val()\n");
      out.write("\t\t\t\t\t\t},\n");
      out.write("\t\t\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\t\t$(\"#shutdown-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t\t$(\"#shutdown-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write("\t\t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t\t    \t\n");
      out.write("\t\t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write("\t\t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t\t\t    \t\tclearResponseMsg();\n");
      out.write("\t\t\t\t\t    \t\tclearErrorMsg();\n");
      out.write("\t\t\t\t\t    \t\tshowSuccessMsg(response.msg);\n");
      out.write("\t\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t\t    \t\treloadInstanceGridData();\n");
      out.write("\t\t\t\t\t    \t\t\n");
      out.write("\t\t\t\t\t    \t}else{\n");
      out.write("\t\t\t\t\t    \t\tshowErrorMsgPopUp(response.msg);\n");
      out.write("\t\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t\t},\n");
      out.write("\t\t\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t\t\t\t$(\"#shutdown-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t\t$(\"#shutdown-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\t\tif(st==\"timeout\"){\n");
      out.write("\t\t\t\t\t\t\t\tcloseFancyBox();\n");
      out.write("\t\t\t\t\t\t\t\tshowSuccessMsg(\"A restart call has been initiated to the server it should restart in a while,if not try reloading the page to view the changes or restart again.\");\n");
      out.write("\t\t\t\t\t\t\t\treloadInstanceGridData();\n");
      out.write("\t\t\t\t\t    \t\tloadInstanceStatus($('#instance-id').val());\n");
      out.write("\t\t\t\t\t    \t\t$.ajax({\n");
      out.write("\t\t\t\t\t\t\t\t\turl: '");
      out.print( ControllerConstants.RESTART_SERVER_INSTANCE );
      out.write("',\n");
      out.write("\t\t\t\t\t\t\t\t\t    cache: false,\n");
      out.write("\t\t\t\t\t\t\t\t\t\tasync: true,\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tid: $('#instance-id').val()\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\n");
      out.write("\t\t\t\t\t\t\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t$(\"#shutdown-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t$(\"#shutdown-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t\t\t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write("\t\t\t\t\t\t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t\t\t\t\t\t    \t\n");
      out.write("\t\t\t\t\t\t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t}else{\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t\tshowErrorMsgPopUp(response.msg);\n");
      out.write("\t\t\t\t\t\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\n");
      out.write("\t\t\t\t\t\t\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t$(\"#shutdown-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t$(\"#shutdown-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction synchInstanceById(){\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tvar id = $('#instance-id').val();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif(id != null && id != ''){\n");
      out.write("\t\t\t\t$(\"#btnSynchPopup\").show();\n");
      out.write("\t\t\t\t$(\"#btnSynchCancel\").show();\n");
      out.write("\t\t\t\t$(\"#btnSynchClose\").hide();\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tvar serverIP= $('#instance-server-ip').val();\n");
      out.write("\t\t\t\tvar serverPort = $('#instance-port').val();\n");
      out.write("\t\t\t\tvar serverInstance = $('#instance-name').val();\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t$(\"#divInstanceList\").html('');\n");
      out.write("\t\t\t\tvar tableString ='<table class=\"table table-hover\" style=\"width:100%\">';\n");
      out.write("\t\t\t\ttableString += \"<tr>\";\n");
      out.write("\t\t\t\ttableString += \"<th>Instance Name</th>\";\n");
      out.write("\t\t\t\ttableString += \"<th>Server IP</th>\";\n");
      out.write("\t\t\t\ttableString += \"<th>Server Port</th>\";\n");
      out.write("\t\t\t\ttableString += \"<th class='status'>Sync Status</th>\";\n");
      out.write("\t\t\t\ttableString += \"</tr>\";\n");
      out.write("\t\t\t\ttableString += \"<tr>\";\n");
      out.write("\t\t\t\ttableString += \"<td>\"+serverInstance+\"</td>\";\n");
      out.write("\t\t\t\ttableString += \"<td>\"+serverIP+\"</td>\";\n");
      out.write("\t\t\t\ttableString += \"<td>\"+serverPort+\"</td>\";\n");
      out.write("\t\t\t\ttableString += \"<td class='status' id='res_\"+id+\"'></td>\";\n");
      out.write("\t\t\t\ttableString += \"</tr>\";\n");
      out.write("\t\t\t\ttableString += \"</table>\"\n");
      out.write("\t\t\t\t$(\"#divInstanceList\").html(tableString);\n");
      out.write("\t\t\t\t$('.status').hide();\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t$('#divSyncSIMsg').html('');\n");
      out.write("\t\t\t\t$(\"#synchronize\").click();\n");
      out.write("\n");
      out.write("\t\t\t\t// set instnce id to synchronize\n");
      out.write("\t\t\t\t$(\"#syncInstanceId\").val(id);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction synchronizesInstance(){\n");
      out.write("\t\t\t$(\"#synch-buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#synch-progress-bar-div\").show();\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\turl: '");
      out.print( ControllerConstants.SYNC_SERVER_INSTANCE );
      out.write("',\n");
      out.write("\t\t\t\t\t    cache: false,\n");
      out.write("\t\t\t\t\t\tasync: true,\n");
      out.write("\t\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t\t\tserverInstanceId: $(\"#syncInstanceId\").val(),\n");
      out.write("\t\t\t\t\t\t\tserverInstancesStatus:'ACTIVE'\n");
      out.write("\t\t\t\t\t\t},\n");
      out.write("\t\t\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\t\t$(\"#synch-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t\t$(\"#synch-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write("\t\t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t\t    \t\n");
      out.write("\t\t\t\t\t    \t\n");
      out.write("\t\t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write("\t\t\t\t\t    \t\t\n");
      out.write("\t\t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t\t\t    \t\tclearResponseMsg();\n");
      out.write("\t\t\t\t\t    \t\tclearErrorMsg();\n");
      out.write("\t\t\t\t\t    \t\tckIntanceSelected = new Array();\n");
      out.write("\t\t\t\t\t    \t\tvar responseCode = data.code;\n");
      out.write("\t\t\t\t\t    \t\t$('#divSyncSIMsg').html('<span class=\"title\" style=\"color:black;font-weight:bolder\">'+response.msg+'</span>');\n");
      out.write("\t\t\t    \t\t\tvar response = data.object;\n");
      out.write("\t\t\t    \t\t\t$.each(response, function(key,val){\n");
      out.write("\t\t\t    \t\t\t\tvar resObj =val;\t\t\t    \t\t\t\t\n");
      out.write("\t\t\t    \t\t\t\tif (resObj.code == \"700\") {\n");
      out.write("\t\t\t    \t\t\t\t\t$('#res_'+key).text(resObj.msg+\" Click the link to Configure Path \");\n");
      out.write("\t\t\t    \t\t\t\t\t$('#res_'+key).append(\"<form method='post' action='initSystemAgentConfig' id='configurePakStatisticsPath_\"+key+\"'><input type='hidden' name='agent_serverInstanceId' value='\"+key+\"'></input><a href='#' onclick='parentNode.submit()' >Configure</a></form>\");\n");
      out.write("\t\t\t    \t\t\t\t} else if(resObj.code == \"701\") {\n");
      out.write("\t\t\t    \t\t\t\t\t$('#res_'+key).text(resObj.msg+\" Click the link to Configure DataSource \");\n");
      out.write("\t\t\t    \t\t\t\t\t$('#res_'+key).append(\"<form method='post' action='initUpdateServerInstance' id='configureDataSource_\"+key+\"'><input type='hidden' name='serverInstanceId' value='\"+key+\"'></input><input type='hidden' name='REQUEST_ACTION_TYPE' value='UPDATE_INSTANCE_ADVANCE_CONFIG'></input><a href='#' onclick='parentNode.submit()' >Configure</a></form>\");\n");
      out.write("\t\t\t    \t\t\t\t} else if(resObj.code == \"702\") {\n");
      out.write("\t\t\t    \t\t\t\t\t$('#res_'+key).text(resObj.msg+\" Click the link to Configure License Circle \");\n");
      out.write("\t\t\t    \t\t\t\t\t$('#res_'+key).append(\"<form method='get' action='initCircleConfigurationManager'><a href='#' onclick='parentNode.submit()' >Configure</a></form>\");\n");
      out.write("\t\t\t    \t\t\t\t}else {\n");
      out.write("\t\t\t    \t\t\t\t\t$('#res_'+key).text(resObj.msg);\n");
      out.write("\t\t\t    \t\t\t\t}\n");
      out.write("\t\t\t    \t\t\t});\n");
      out.write("\t\t\t    \t\t\t$(\".status\").show();\n");
      out.write("\t\t\t    \t\t\t$(\"#btnSynchPopup\").hide();\n");
      out.write("\t\t\t    \t\t\t$(\"#btnSynchCancel\").hide();\n");
      out.write("\t\t\t    \t\t\t$(\"#btnSynchClose\").show();\n");
      out.write("\t\t\t    \t\t\t$(\".synchronizePopUpMsgClass\").empty();\n");
      out.write("\t\t\t    \t\t\t\n");
      out.write("\t\t\t\t\t    \t\t\n");
      out.write("\t\t\t\t\t    \t}else{\n");
      out.write("\t\t\t\t\t    \t\t$('#divSyncSIMsg').html('<span class=\"title\" style=\"color: #FF0000;\">'+response.msg+'</span>');\n");
      out.write("\t\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t\t},\n");
      out.write("\t\t\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t\t    \t$(\"#synch-buttons-div\").show();\n");
      out.write("\t \t\t\t\t\t$(\"#synch-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction reloadCache(){\n");
      out.write("\t\t\t$(\"#reload-cache-buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#reload-cache-progress-bar-div\").show();\n");
      out.write("\t\t\tvar reloadType = $('input[name=reloadType]:checked').val();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t var databaseQueryString = \"\";\n");
      out.write("\t\t     var selMulti = $(\"#DatabaseQueryList option:selected\").each(function(){\n");
      out.write("\t\t    \t databaseQueryString += (databaseQueryString == \"\") ? \"\" : \",\";\n");
      out.write("\t\t    \t databaseQueryString += $(this).text();\n");
      out.write("\t\t     });\n");
      out.write("\t\t     \n");
      out.write("\t\t    if (reloadType == \"dynamic\" && databaseQueryString == \"\" ) {\n");
      out.write("\t\t    \tshowErrorMsgPopUp(\"");
      if (_jspx_meth_spring_005fmessage_005f49(_jspx_page_context))
        return;
      out.write("\");\n");
      out.write("\t\t    \t$(\"#reload-cache-buttons-div\").show();\n");
      out.write("\t\t\t\t$(\"#reload-cache-progress-bar-div\").hide();\n");
      out.write("\t\t    \treturn false;\n");
      out.write("\t\t    \t\n");
      out.write("\t\t    } else {\n");
      out.write("\t\t    \t$.ajax({\n");
      out.write("\t\t\t\t\turl: '");
      out.print( ControllerConstants.SERVER_INSTANCE_RELOAD_CACHE );
      out.write("',\n");
      out.write("\t\t\t\t\t    cache: false,\n");
      out.write("\t\t\t\t\t\tasync: true,\n");
      out.write("\t\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t\t\tid: $('#instance-id').val(),\n");
      out.write("\t\t\t\t\t\t\treloadType : reloadType,\n");
      out.write("\t\t\t\t\t\t\tdatabaseQuery : databaseQueryString\n");
      out.write("\t\t\t\t\t\t},\n");
      out.write("\t\t\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\t\t$(\"#reload-cache-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t\t$(\"#reload-cache-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write("\t\t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t\t    \t\n");
      out.write("\t\t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write("\t\t\t\t\t    \t\tresetReloadCacheOptions();\n");
      out.write("\t\t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t\t\t    \t\tclearResponseMsg();\n");
      out.write("\t\t\t\t\t    \t\tclearErrorMsg();\n");
      out.write("\t\t\t\t\t    \t\tshowSuccessMsg(response.msg);\n");
      out.write("\t\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t\t    \t}else{\n");
      out.write("\t\t\t\t\t    \t\tshowErrorMsgPopUp(response.msg);\n");
      out.write("\t\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t\t},\n");
      out.write("\t\t\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t\t\t\t$(\"#reload-cache-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t\t$(\"#reload-cache-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t});\n");
      out.write("\t\t    }\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction reloadConfig(){\n");
      out.write("\t\t\t$(\"#reload-config-buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#reload-config-progress-bar-div\").show();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl: '");
      out.print( ControllerConstants.SERVER_INSTANCE_RELOAD_CONFIG );
      out.write("',\n");
      out.write("\t\t\t\t    cache: false,\n");
      out.write("\t\t\t\t\tasync: true,\n");
      out.write("\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t\tid: $('#instance-id').val()\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\t$(\"#reload-config-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#reload-config-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write("\t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t    \t\n");
      out.write("\t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write("\t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t\t    \t\tclearResponseMsg();\n");
      out.write("\t\t\t\t    \t\tclearErrorMsg();\n");
      out.write("\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t\tshowSuccessMsg(response.msg);\n");
      out.write("\t\t\t\t    \t}else{\n");
      out.write("\t\t\t\t    \t\tshowErrorMsg(response.msg);\n");
      out.write("\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t    \t$(\"#reload-config-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#reload-config-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction softRestartInstance(){\n");
      out.write("\t\t\t$(\"#soft-restart-buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#soft-restart-progress-bar-div\").show();\n");
      out.write("\t\t\t$(\"#buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#progress-bar-div\").show();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\turl: '");
      out.print( ControllerConstants.SOFT_RESTART_INSTANCE );
      out.write("',\n");
      out.write("\t\t\t\t\t    cache: false,\n");
      out.write("\t\t\t\t\t\tasync: true,\n");
      out.write("\t\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t\t\tid: $('#instance-id').val()\n");
      out.write("\t\t\t\t\t\t},\n");
      out.write("\t\t\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\t\t$(\"#soft-restart-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t\t$(\"#soft-restart-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\t\t$(\"#buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t\t$(\"#progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write("\t\t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t\t    \t\n");
      out.write("\t\t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write("\t\t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t\t\t    \t\tclearResponseMsg();\n");
      out.write("\t\t\t\t\t    \t\tclearErrorMsg();\n");
      out.write("\t\t\t\t\t    \t\tshowSuccessMsg(response.msg);\n");
      out.write("\t\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t\t    \t}else{\n");
      out.write("\t\t\t\t\t    \t\tshowErrorMsg(response.msg);\n");
      out.write("\t\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t\t},\n");
      out.write("\t\t\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t\t    \t$(\"#soft-restart-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t\t$(\"#soft-restart-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\t\t$(\"#buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t\t$(\"#progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction syncPublishInstance(){\n");
      out.write("\t\t\t$(\"#sync-publish-buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#sync-publish-progress-bar-div\").show();\n");
      out.write("\t\t\t$(\"#buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#progress-bar-div\").show();\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\turl: '");
      out.print( ControllerConstants.SYNC_PUBLISH_INSTANCE );
      out.write("',\n");
      out.write(" \t\t\t\t    cache: false,\n");
      out.write(" \t\t\t\t\tasync: true,\n");
      out.write(" \t\t\t\t\tdataType: 'json',\n");
      out.write(" \t\t\t\t\ttype: \"POST\",\n");
      out.write(" \t\t\t\t\tdata: {\n");
      out.write(" \t\t\t\t\t\tid: $('#instance-id').val(),\n");
      out.write(" \t\t\t\t\t\tdescription : $(\"#descSyncPublish\").val(),\n");
      out.write(" \t\t\t\t\t\tserverInstancesStatus:'ACTIVE'\n");
      out.write(" \t\t\t\t\t},\n");
      out.write(" \t\t\t\t\tsuccess: function(data){\n");
      out.write(" \t\t\t\t\t\t$(\"#sync-publish-buttons-div\").show();\n");
      out.write(" \t\t\t\t\t\t$(\"#sync-publish-progress-bar-div\").hide();\n");
      out.write(" \t\t\t\t\t\t$(\"#buttons-div\").show();\n");
      out.write(" \t\t\t\t\t\t$(\"#progress-bar-div\").hide();\n");
      out.write(" \t\t\t\t\t\tvar response = eval(data);\n");
      out.write(" \t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write(" \t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write(" \t\t\t\t    \t$(\"#descSyncPublish\").val(\"\");\n");
      out.write(" \t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write(" \t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write(" \t\t\t\t    \t\tclearResponseMsg();\n");
      out.write(" \t\t\t\t    \t\tclearErrorMsg();\n");
      out.write(" \t\t\t\t    \t\tshowSuccessMsg(response.msg);\n");
      out.write(" \t\t\t\t    \t\tcloseFancyBox();\n");
      out.write(" \t\t\t\t    \t}else{\n");
      out.write(" \t\t\t\t    \t\tshowErrorMsg(response.msg);\n");
      out.write("\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write(" \t\t\t\t    \t}\n");
      out.write(" \t\t\t\t\t},\n");
      out.write(" \t\t\t\t    error: function (xhr,st,err){\n");
      out.write(" \t\t\t\t    \t$(\"#sync-publish-buttons-div\").show();\n");
      out.write(" \t\t\t\t\t\t$(\"#sync-publish-progress-bar-div\").hide();\n");
      out.write(" \t\t\t\t\t\t$(\"#buttons-div\").show();\n");
      out.write(" \t\t\t\t\t\t$(\"#progress-bar-div\").hide();\n");
      out.write(" \t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write(" \t\t\t\t\t}\n");
      out.write(" \t\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction importConfig(){\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif($('#configFile').val()==''){\n");
      out.write("\t\t\t\t$('#divImportMsg').html('Please select import file');\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\"#import-config-buttons\").hide();\n");
      out.write("\t\t\t$(\"#import-config-progress-bar-div\").show();\n");
      out.write("\t\t\t$(\"#import-config-form\").submit();\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction stopInstance(){\n");
      out.write("\t\t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t$(\"#shutdown-buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#shutdown-progress-bar-div\").show();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl: '");
      out.print( ControllerConstants.STOP_SERVER_INSTANCE );
      out.write("',\n");
      out.write("\t\t\t\t    cache: false,\n");
      out.write("\t\t\t\t\tasync: true,\n");
      out.write("\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\t\ttimeout : 15000,\n");
      out.write("\t\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t\tid: $('#instance-id').val()\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\t$(\"#shutdown-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#shutdown-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write("\t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t    \t\n");
      out.write("\t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write("\t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t\t    \t\tclearResponseMsg();\n");
      out.write("\t\t\t\t    \t\tclearErrorMsg();\n");
      out.write("\t\t\t\t    \t\treloadInstanceGridData();\n");
      out.write("\t\t\t\t    \t\tloadInstanceStatus($('#instance-id').val());\n");
      out.write("\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t\tshowSuccessMsg(response.msg);\t\t\t\t    \t\t\n");
      out.write("\t\t\t\t    \t\t$(\"#server_stop_btn\").hide();\n");
      out.write("\t\t\t\t    \t\t\n");
      out.write("\t\t\t\t    \t}else{\n");
      out.write("\t\t\t\t    \t\tshowErrorMsg(response.msg);\n");
      out.write("\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t    \t$(\"#shutdown-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#shutdown-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\tif(st == \"timeout\"){\n");
      out.write("\t\t\t\t\t\t\treloadInstanceGridData();\n");
      out.write("\t\t\t\t    \t\tloadInstanceStatus($('#instance-id').val());\n");
      out.write("\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t\tshowSuccessMsg(\"A shutdown call has been initiated to the server it should update in a while,if not try reloading the page to view the changes.\");\n");
      out.write("\t\t\t\t    \t\t$.ajax({\n");
      out.write("\t\t\t\t\t\t\t\turl: '");
      out.print( ControllerConstants.STOP_SERVER_INSTANCE );
      out.write("',\n");
      out.write("\t\t\t\t\t\t\t\t    cache: false,\n");
      out.write("\t\t\t\t\t\t\t\t\tasync: true,\n");
      out.write("\t\t\t\t\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\t\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\t\t\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t\t\t\t\t\tid: $('#instance-id').val()\n");
      out.write("\t\t\t\t\t\t\t\t\t},\n");
      out.write("\t\t\t\t\t\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\t\t\t\t\t$(\"#shutdown-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t\t\t\t\t$(\"#shutdown-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t\t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write("\t\t\t\t\t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t\t\t\t\t    \t\n");
      out.write("\t\t\t\t\t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write("\t\t\t\t\t\t\t\t    \t\treloadInstanceGridData();\n");
      out.write("\t\t\t\t\t\t\t\t    \t\tloadInstanceStatus($('#instance-id').val());\n");
      out.write("\t\t\t\t\t\t\t\t    \t\tcloseFancyBox();\t\t    \t\t\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t$(\"#server_stop_btn\").hide();\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t\n");
      out.write("\t\t\t\t\t\t\t\t    \t}else{\n");
      out.write("\t\t\t\t\t\t\t\t    \t\tshowErrorMsg(response.msg);\n");
      out.write("\t\t\t\t\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t\t\t\t\t},\n");
      out.write("\t\t\t\t\t\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t\t\t\t\t    \t$(\"#shutdown-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t\t\t\t\t$(\"#shutdown-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t    \t\t$(\"#server_stop_btn\").hide();\n");
      out.write("\t\t\t\t    \t\t\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction startInstance(){\n");
      out.write("\t\t\t$(\"#server-start-buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#server-start-progress-bar-div\").show();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl: '");
      out.print( ControllerConstants.START_SERVER_INSTANCE );
      out.write("',\n");
      out.write("\t\t\t\t    cache: false,\n");
      out.write("\t\t\t\t\tasync: true,\n");
      out.write("\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t\tid: $('#instance-id').val()\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\t$(\"#server-start-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#server-start-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write("\t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t    \t\n");
      out.write("\t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write("\t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t\t    \t\tclearResponseMsg();\n");
      out.write("\t\t\t\t    \t\tclearErrorMsg();\n");
      out.write("\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t\tshowSuccessMsg(response.msg);\n");
      out.write("\t\t\t\t    \t\treloadInstanceGridData();\n");
      out.write("\t\t\t\t    \t\tloadInstanceStatus($('#instance-id').val());\n");
      out.write("\t\t\t\t    \t\t\n");
      out.write("\t\t\t\t    \t}else{\n");
      out.write("\t\t\t\t    \t\tshowErrorMsgPopUp(response.msg);\t\t\t\t    \t\t\n");
      out.write("\t\t\t\t    \t\t\n");
      out.write("\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t    \t$(\"#server-start-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#server-start-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction lastExecutionDateFormatter(cellvalue, options, rowObject){\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tvar toggleId = rowObject[\"id\"] + \"_lastExeTime\";\n");
      out.write("\t\t\tloadAgentInfomation(rowObject[\"id\"],rowObject[\"typeOfAgent\"]);\n");
      out.write("\t\t\treturn '<div id=\"agent_last_exeTime_'+rowObject[\"id\"]+'\"><img src=\"img/preloaders/circle-red.gif\" width=\"20px\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Loading Status..\" height=\"20px\"></div>';\n");
      out.write("\t\t\t\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction nextExecutionDateFormatter(cellvalue, options, rowObject){\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tvar toggleId = rowObject[\"id\"] + \"_nextExeTime\";\n");
      out.write("\t\t\treturn '<div id=\"agent_next_exeTime_'+rowObject[\"id\"]+'\"><img src=\"img/preloaders/circle-red.gif\" width=\"20px\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Loading Status..\" height=\"20px\"></div>';\n");
      out.write("\t\t\t\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction loadAgentInfomation(agentId,agenttype){\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl: '");
      out.print(ControllerConstants.LOAD_AGENT_INFORMATION);
      out.write("',\n");
      out.write("\t\t\t\tcache: false,\n");
      out.write("\t\t\t\tasync: true,\n");
      out.write("\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t\"serverInstanceId\": $('#instance-id').val(),\n");
      out.write("\t\t\t\t\t\"agentType\"\t\t  :\tagenttype,\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t\t \n");
      out.write("\t\t\t\t\t var responseCode = response.code; \n");
      out.write("\t\t\t\t\t var responseMsg = response.msg; \n");
      out.write("\t\t\t\t\t var responseObject = response.object;\n");
      out.write("\t\t\t\t\t if(responseCode == \"200\"){\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t $('#agent_last_exeTime_'+agentId).html('<p>'+responseObject[\"lastExecutionDate\"]+\"</p>\");\n");
      out.write("\t\t\t\t\t\t $('#agent_next_exeTime_'+agentId).html('<p>'+responseObject[\"nextExecutionDate\"]+\"</p>\");\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t }\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t\thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction changeAgentStatus(action){\n");
      out.write("\t\t\tresetWarningDisplay();\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\tvar tempStatus ;\n");
      out.write("\t\t\tvar agentStatus;\n");
      out.write("\t\t\tvar agentId;\n");
      out.write("\t\t\tif(action == 'Start'){\n");
      out.write("\t\t\t\t$(\"#agent-start-buttons-div\").hide();\n");
      out.write("\t\t\t\t$(\"#agent-start-progress-bar-div\").show();\n");
      out.write("\t\t\t\tagentStatus=$(\"#startAgentStatus\").val();\n");
      out.write("\t\t\t\tagentId=$(\"#startAgentId\").val();\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\t$(\"#agent-stop-buttons-div\").hide();\n");
      out.write("\t\t\t\t$(\"#agent-stop-progress-bar-div\").show();\n");
      out.write("\t\t\t\tagentStatus=$(\"#stopAgentStatus\").val();\n");
      out.write("\t\t\t\tagentId=$(\"#stopAgentId\").val();\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tif(agentStatus == 'ACTIVE'){\n");
      out.write("\t\t\t\ttempStatus = 'INACTIVE';\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\ttempStatus = 'ACTIVE';\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\n");
      out.write("\t\t\t $.ajax({\n");
      out.write("\t\t\t\turl: '");
      out.print(ControllerConstants.UPDATE_AGENT_STATUS);
      out.write("',\n");
      out.write("\t\t\t\tcache: false,\n");
      out.write("\t\t\t\tasync: true,\n");
      out.write("\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\tdata:\n");
      out.write("\t\t\t\t {\n");
      out.write("\t\t\t\t\t\"agentId\"     : agentId,\n");
      out.write("\t\t\t\t\t\"agentStatus\" : tempStatus\n");
      out.write("\t\t\t\t}, \n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t\tvar responseCode = response.code; \n");
      out.write("\t\t\t\t\tvar responseMsg = response.msg; \n");
      out.write("\t\t\t\t\tvar responseObject = response.object;\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tif(action == 'Start'){\n");
      out.write("\t\t\t\t\t\t$(\"#agent-start-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#agent-start-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t\t$(\"#agent-stop-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#agent-stop-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tif(responseCode == \"200\"){\n");
      out.write("\t\t\t\t\t\tresetWarningDisplay();\n");
      out.write("\t\t\t\t\t\tclearAllMessages();\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\tif(tempStatus == 'ACTIVE'){\n");
      out.write("\t\t\t\t\t\t\t$('#'+agentId+'_agentStatus_'+agentStatus).bootstrapToggle('on');\n");
      out.write("\t\t\t\t\t\t\t$('#'+agentId+'_agentStatus_'+agentStatus).attr(\"id\",'#'+agentId+'_agentStatus_'+tempStatus);\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t\t\t$('#'+agentId+'_agentStatus_'+agentStatus).bootstrapToggle('off');\n");
      out.write("\t\t\t\t\t\t\t$('#'+agentId+'_agentStatus_'+agentStatus).attr(\"id\",'#'+agentId+'_agentStatus_'+tempStatus);\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\treloadAgentGridData();\n");
      out.write("\t\t\t\t\t\tshowSuccessMsg(responseMsg);\n");
      out.write("\t\t\t\t\t\tcloseFancyBox();\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t}else if(responseObject != undefined && responseObject != 'undefined' && responseCode == \"400\"){\n");
      out.write("\t\t\t\t\t\tshowErrorMsg(responseMsg);\n");
      out.write("\t\t\t\t\t\t$('#'+agentId+'_agentStatus_'+agentStatus).bootstrapToggle('toggle');\n");
      out.write("\t\t\t\t\t\tcloseFancyBox();\n");
      out.write("\t\t\t\t\t\treloadAgentGridData();\n");
      out.write("\t\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t\tresetWarningDisplay();\n");
      out.write("\t\t\t\t\t\tclearAllMessages();\n");
      out.write("\t\t\t\t\t\tshowErrorMsg(responseMsg);\n");
      out.write("\t\t\t\t\t\t$('#'+agentId+'_agentStatus_'+agentStatus).bootstrapToggle('toggle');\n");
      out.write("\t\t\t\t\t\tcloseFancyBox();\n");
      out.write("\t\t\t\t\t\treloadAgentGridData();\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t\thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}); \n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction setDefaultAgentStatus(action){\n");
      out.write("\t\t\tvar agentStatus;\n");
      out.write("\t\t\tvar agentId;\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif(action == 'Start'){\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tagentStatus=$(\"#startAgentStatus\").val();\n");
      out.write("\t\t\t\tagentId=$(\"#startAgentId\").val();\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t}else{\n");
      out.write("\n");
      out.write("\t\t\t\tagentStatus=$(\"#stopAgentStatus\").val();\n");
      out.write("\t\t\t\tagentId=$(\"#stopAgentId\").val();\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif(agentStatus == 'ACTIVE'){\n");
      out.write("\t\t\t\t$('#'+agentId+'_agentStatus_'+agentStatus).bootstrapToggle('on');\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\t$('#'+agentId+'_agentStatus_'+agentStatus).bootstrapToggle('off');\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tcloseFancyBox();\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\tfunction reloadAgentGridData(){\n");
      out.write("\t\t    var $grid = $(\"#agentList\");\n");
      out.write("\t\t    $grid.jqGrid('setGridParam',{datatype:'json',page: 1}).trigger('reloadGrid');\n");
      out.write("\t\t}\n");
      out.write("</script>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(11,21) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${(REQUEST_ACTION_TYPE eq 'UPDATE_INSTANCE_SUMMARY')}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          if (_jspx_meth_c_005fout_005f0(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f0_reused = false;
    try {
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(11,88) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue("active");
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      _jspx_th_c_005fout_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f0 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fid_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f0_reused = false;
    try {
      _jspx_th_form_005finput_005f0.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(16,6) null
      _jspx_th_form_005finput_005f0.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(16,6) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f0.setPath("id");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(16,6) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f0.setId("instance-id");
      int[] _jspx_push_body_count_form_005finput_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f0 = _jspx_th_form_005finput_005f0.doStartTag();
        if (_jspx_th_form_005finput_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fid_005fnobody.reuse(_jspx_th_form_005finput_005f0);
      _jspx_th_form_005finput_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f0, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f1 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fid_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f1_reused = false;
    try {
      _jspx_th_form_005finput_005f1.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(17,6) null
      _jspx_th_form_005finput_005f1.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(17,6) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f1.setPath("fileStatInDBEnable");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(17,6) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f1.setId("instance-fileStatInDBEnable");
      int[] _jspx_push_body_count_form_005finput_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f1 = _jspx_th_form_005finput_005f1.doStartTag();
        if (_jspx_th_form_005finput_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fid_005fnobody.reuse(_jspx_th_form_005finput_005f1);
      _jspx_th_form_005finput_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f1, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f2 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fid_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f2_reused = false;
    try {
      _jspx_th_form_005finput_005f2.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(18,6) null
      _jspx_th_form_005finput_005f2.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(18,6) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f2.setPath("snmpAlertEnable");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(18,6) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f2.setId("instance-snmpAlertEnable");
      int[] _jspx_push_body_count_form_005finput_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f2 = _jspx_th_form_005finput_005f2.doStartTag();
        if (_jspx_th_form_005finput_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fid_005fnobody.reuse(_jspx_th_form_005finput_005f2);
      _jspx_th_form_005finput_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f2, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f3 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fid_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f3_reused = false;
    try {
      _jspx_th_form_005finput_005f3.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(19,6) null
      _jspx_th_form_005finput_005f3.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(19,6) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f3.setPath("webservicesEnable");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(19,6) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f3.setId("instance-webservicesEnable");
      int[] _jspx_push_body_count_form_005finput_005f3 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f3 = _jspx_th_form_005finput_005f3.doStartTag();
        if (_jspx_th_form_005finput_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f3[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f3.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f3.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fid_005fnobody.reuse(_jspx_th_form_005finput_005f3);
      _jspx_th_form_005finput_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f3, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f4 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fid_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f4_reused = false;
    try {
      _jspx_th_form_005finput_005f4.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(20,6) null
      _jspx_th_form_005finput_005f4.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(20,6) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f4.setPath("restWebservicesEnable");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(20,6) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f4.setId("instance-restWebservicesEnable");
      int[] _jspx_push_body_count_form_005finput_005f4 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f4 = _jspx_th_form_005finput_005f4.doStartTag();
        if (_jspx_th_form_005finput_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f4[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f4.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f4.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fid_005fnobody.reuse(_jspx_th_form_005finput_005f4);
      _jspx_th_form_005finput_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f4, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f5 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fid_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f5_reused = false;
    try {
      _jspx_th_form_005finput_005f5.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(21,6) null
      _jspx_th_form_005finput_005f5.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(21,6) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f5.setPath("logsDetail.level");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(21,6) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f5.setId("instance-logsDetail-level");
      int[] _jspx_push_body_count_form_005finput_005f5 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f5 = _jspx_th_form_005finput_005f5.doStartTag();
        if (_jspx_th_form_005finput_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f5[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f5.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f5.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fid_005fnobody.reuse(_jspx_th_form_005finput_005f5);
      _jspx_th_form_005finput_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f5, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f6 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f6_reused = false;
    try {
      _jspx_th_form_005finput_005f6.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(22,6) null
      _jspx_th_form_005finput_005f6.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(22,6) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f6.setPath("lastUpdatedDate");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(22,6) null
      _jspx_th_form_005finput_005f6.setDynamicAttribute(null, "name", "lastUpdatedDate");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(22,6) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f6.setId("instance-lastUpdate");
      int[] _jspx_push_body_count_form_005finput_005f6 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f6 = _jspx_th_form_005finput_005f6.doStartTag();
        if (_jspx_th_form_005finput_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f6[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f6.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f6.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody.reuse(_jspx_th_form_005finput_005f6);
      _jspx_th_form_005finput_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f6, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f7 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fid_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f7_reused = false;
    try {
      _jspx_th_form_005finput_005f7.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(23,6) null
      _jspx_th_form_005finput_005f7.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(23,6) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f7.setPath("fileCdrSummaryDBEnable");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(23,6) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f7.setId("instance-fileCdrSummaryDBEnable");
      int[] _jspx_push_body_count_form_005finput_005f7 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f7 = _jspx_th_form_005finput_005f7.doStartTag();
        if (_jspx_th_form_005finput_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f7[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f7.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f7.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fid_005fnobody.reuse(_jspx_th_form_005finput_005f7);
      _jspx_th_form_005finput_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f7, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f8(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f8 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f8_reused = false;
    try {
      _jspx_th_form_005finput_005f8.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(26,6) null
      _jspx_th_form_005finput_005f8.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(26,6) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f8.setPath("fileStorageLocation");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(26,6) null
      _jspx_th_form_005finput_005f8.setDynamicAttribute(null, "name", "fileStorageLocation");
      int[] _jspx_push_body_count_form_005finput_005f8 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f8 = _jspx_th_form_005finput_005f8.doStartTag();
        if (_jspx_th_form_005finput_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f8[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f8.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f8.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody.reuse(_jspx_th_form_005finput_005f8);
      _jspx_th_form_005finput_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f8, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f9(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f9 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f9_reused = false;
    try {
      _jspx_th_form_005finput_005f9.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f9.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(28,2) null
      _jspx_th_form_005finput_005f9.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(28,2) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f9.setPath("logsDetail.rollingType");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(28,2) null
      _jspx_th_form_005finput_005f9.setDynamicAttribute(null, "name", "logsDetail.rollingType");
      int[] _jspx_push_body_count_form_005finput_005f9 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f9 = _jspx_th_form_005finput_005f9.doStartTag();
        if (_jspx_th_form_005finput_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f9[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f9.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f9.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody.reuse(_jspx_th_form_005finput_005f9);
      _jspx_th_form_005finput_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f9, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f10(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f10 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f10_reused = false;
    try {
      _jspx_th_form_005finput_005f10.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f10.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(29,2) null
      _jspx_th_form_005finput_005f10.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(29,2) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f10.setPath("logsDetail.rollingValue");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(29,2) null
      _jspx_th_form_005finput_005f10.setDynamicAttribute(null, "name", "logsDetail.rollingValue");
      int[] _jspx_push_body_count_form_005finput_005f10 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f10 = _jspx_th_form_005finput_005f10.doStartTag();
        if (_jspx_th_form_005finput_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f10[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f10.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f10.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody.reuse(_jspx_th_form_005finput_005f10);
      _jspx_th_form_005finput_005f10_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f10, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f10_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f11(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f11 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f11_reused = false;
    try {
      _jspx_th_form_005finput_005f11.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f11.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(30,2) null
      _jspx_th_form_005finput_005f11.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(30,2) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f11.setPath("logsDetail.maxRollingUnit");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(30,2) null
      _jspx_th_form_005finput_005f11.setDynamicAttribute(null, "name", "logsDetail.maxRollingUnit");
      int[] _jspx_push_body_count_form_005finput_005f11 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f11 = _jspx_th_form_005finput_005f11.doStartTag();
        if (_jspx_th_form_005finput_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f11[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f11.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f11.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody.reuse(_jspx_th_form_005finput_005f11);
      _jspx_th_form_005finput_005f11_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f11, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f11_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f12(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f12 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f12_reused = false;
    try {
      _jspx_th_form_005finput_005f12.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f12.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(31,2) null
      _jspx_th_form_005finput_005f12.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(31,2) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f12.setPath("logsDetail.logPathLocation");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(31,2) null
      _jspx_th_form_005finput_005f12.setDynamicAttribute(null, "name", "logsDetail.logPathLocation");
      int[] _jspx_push_body_count_form_005finput_005f12 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f12 = _jspx_th_form_005finput_005f12.doStartTag();
        if (_jspx_th_form_005finput_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f12[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f12.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f12.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody.reuse(_jspx_th_form_005finput_005f12);
      _jspx_th_form_005finput_005f12_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f12, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f12_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f13(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f13 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f13_reused = false;
    try {
      _jspx_th_form_005finput_005f13.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f13.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(32,2) null
      _jspx_th_form_005finput_005f13.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(32,2) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f13.setPath("thresholdSysAlertEnable");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(32,2) null
      _jspx_th_form_005finput_005f13.setDynamicAttribute(null, "name", "thresholdSysAlertEnable");
      int[] _jspx_push_body_count_form_005finput_005f13 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f13 = _jspx_th_form_005finput_005f13.doStartTag();
        if (_jspx_th_form_005finput_005f13.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f13[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f13.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f13.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody.reuse(_jspx_th_form_005finput_005f13);
      _jspx_th_form_005finput_005f13_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f13, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f13_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f14(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f14 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f14_reused = false;
    try {
      _jspx_th_form_005finput_005f14.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f14.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(33,2) null
      _jspx_th_form_005finput_005f14.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(33,2) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f14.setPath("thresholdMemory");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(33,2) null
      _jspx_th_form_005finput_005f14.setDynamicAttribute(null, "name", "thresholdMemory");
      int[] _jspx_push_body_count_form_005finput_005f14 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f14 = _jspx_th_form_005finput_005f14.doStartTag();
        if (_jspx_th_form_005finput_005f14.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f14[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f14.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f14.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody.reuse(_jspx_th_form_005finput_005f14);
      _jspx_th_form_005finput_005f14_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f14, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f14_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f15(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f15 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f15_reused = false;
    try {
      _jspx_th_form_005finput_005f15.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f15.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(34,2) null
      _jspx_th_form_005finput_005f15.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(34,2) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f15.setPath("thresholdTimeInterval");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(34,2) null
      _jspx_th_form_005finput_005f15.setDynamicAttribute(null, "name", "thresholdTimeInterval");
      int[] _jspx_push_body_count_form_005finput_005f15 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f15 = _jspx_th_form_005finput_005f15.doStartTag();
        if (_jspx_th_form_005finput_005f15.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f15[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f15.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f15.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody.reuse(_jspx_th_form_005finput_005f15);
      _jspx_th_form_005finput_005f15_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f15, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f15_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f16(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f16 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f16_reused = false;
    try {
      _jspx_th_form_005finput_005f16.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f16.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(35,2) null
      _jspx_th_form_005finput_005f16.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(35,2) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f16.setPath("loadAverage");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(35,2) null
      _jspx_th_form_005finput_005f16.setDynamicAttribute(null, "name", "loadAverage");
      int[] _jspx_push_body_count_form_005finput_005f16 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f16 = _jspx_th_form_005finput_005f16.doStartTag();
        if (_jspx_th_form_005finput_005f16.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f16[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f16.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f16.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fnobody.reuse(_jspx_th_form_005finput_005f16);
      _jspx_th_form_005finput_005f16_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f16, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f16_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f17(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f17 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f17_reused = false;
    try {
      _jspx_th_form_005finput_005f17.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f17.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(37,2) null
      _jspx_th_form_005finput_005f17.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(37,2) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f17.setPath("server.id");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(37,2) null
      _jspx_th_form_005finput_005f17.setDynamicAttribute(null, "name", "server.id");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(37,2) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f17.setId("instance-server-id");
      int[] _jspx_push_body_count_form_005finput_005f17 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f17 = _jspx_th_form_005finput_005f17.doStartTag();
        if (_jspx_th_form_005finput_005f17.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f17[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f17.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f17.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody.reuse(_jspx_th_form_005finput_005f17);
      _jspx_th_form_005finput_005f17_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f17, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f17_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f18(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f18 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f18_reused = false;
    try {
      _jspx_th_form_005finput_005f18.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f18.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(38,2) null
      _jspx_th_form_005finput_005f18.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(38,2) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f18.setPath("server.name");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(38,2) null
      _jspx_th_form_005finput_005f18.setDynamicAttribute(null, "name", "server.name");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(38,2) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f18.setId("instance-server-name");
      int[] _jspx_push_body_count_form_005finput_005f18 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f18 = _jspx_th_form_005finput_005f18.doStartTag();
        if (_jspx_th_form_005finput_005f18.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f18[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f18.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f18.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody.reuse(_jspx_th_form_005finput_005f18);
      _jspx_th_form_005finput_005f18_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f18, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f18_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f19(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f19 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f19_reused = false;
    try {
      _jspx_th_form_005finput_005f19.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f19.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(39,2) null
      _jspx_th_form_005finput_005f19.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(39,2) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f19.setPath("server.description");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(39,2) null
      _jspx_th_form_005finput_005f19.setDynamicAttribute(null, "name", "server.description");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(39,2) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f19.setId("instance-server-description");
      int[] _jspx_push_body_count_form_005finput_005f19 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f19 = _jspx_th_form_005finput_005f19.doStartTag();
        if (_jspx_th_form_005finput_005f19.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f19[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f19.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f19.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody.reuse(_jspx_th_form_005finput_005f19);
      _jspx_th_form_005finput_005f19_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f19, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f19_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f20(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f20 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f20_reused = false;
    try {
      _jspx_th_form_005finput_005f20.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f20.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(40,2) null
      _jspx_th_form_005finput_005f20.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(40,2) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f20.setPath("server.ipAddress");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(40,2) null
      _jspx_th_form_005finput_005f20.setDynamicAttribute(null, "name", "server.ipAddress");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(40,2) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f20.setId("instance-server-ip");
      int[] _jspx_push_body_count_form_005finput_005f20 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f20 = _jspx_th_form_005finput_005f20.doStartTag();
        if (_jspx_th_form_005finput_005f20.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f20[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f20.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f20.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody.reuse(_jspx_th_form_005finput_005f20);
      _jspx_th_form_005finput_005f20_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f20, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f20_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f21(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f21 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f21_reused = false;
    try {
      _jspx_th_form_005finput_005f21.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f21.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(42,2) null
      _jspx_th_form_005finput_005f21.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(42,2) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f21.setPath("server.utilityPort");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(42,2) null
      _jspx_th_form_005finput_005f21.setDynamicAttribute(null, "name", "server.utilityPort");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(42,2) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f21.setId("instance-server-utilityport");
      int[] _jspx_push_body_count_form_005finput_005f21 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f21 = _jspx_th_form_005finput_005f21.doStartTag();
        if (_jspx_th_form_005finput_005f21.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f21[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f21.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f21.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody.reuse(_jspx_th_form_005finput_005f21);
      _jspx_th_form_005finput_005f21_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f21, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f21_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f22(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f22 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f22_reused = false;
    try {
      _jspx_th_form_005finput_005f22.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f22.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(44,2) null
      _jspx_th_form_005finput_005f22.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(44,2) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f22.setPath("port");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(44,2) null
      _jspx_th_form_005finput_005f22.setDynamicAttribute(null, "name", "port");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(44,2) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f22.setId("instance-port");
      int[] _jspx_push_body_count_form_005finput_005f22 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f22 = _jspx_th_form_005finput_005f22.doStartTag();
        if (_jspx_th_form_005finput_005f22.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f22[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f22.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f22.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody.reuse(_jspx_th_form_005finput_005f22);
      _jspx_th_form_005finput_005f22_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f22, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f22_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f23(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f23 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f23_reused = false;
    try {
      _jspx_th_form_005finput_005f23.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f23.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(45,2) null
      _jspx_th_form_005finput_005f23.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(45,2) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f23.setPath("name");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(45,2) null
      _jspx_th_form_005finput_005f23.setDynamicAttribute(null, "name", "name");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(45,2) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f23.setId("instance-name");
      int[] _jspx_push_body_count_form_005finput_005f23 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f23 = _jspx_th_form_005finput_005f23.doStartTag();
        if (_jspx_th_form_005finput_005f23.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f23[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f23.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f23.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody.reuse(_jspx_th_form_005finput_005f23);
      _jspx_th_form_005finput_005f23_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f23, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f23_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005finput_005f24(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_form_005finput_005f24 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_form_005finput_005f24_reused = false;
    try {
      _jspx_th_form_005finput_005f24.setPageContext(_jspx_page_context);
      _jspx_th_form_005finput_005f24.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(46,2) null
      _jspx_th_form_005finput_005f24.setDynamicAttribute(null, "type", "hidden");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(46,2) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f24.setPath("lastUpdatedDate");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(46,2) null
      _jspx_th_form_005finput_005f24.setDynamicAttribute(null, "name", "lastUpdatedDate");
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(46,2) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005finput_005f24.setId("instance-lastUpdate");
      int[] _jspx_push_body_count_form_005finput_005f24 = new int[] { 0 };
      try {
        int _jspx_eval_form_005finput_005f24 = _jspx_th_form_005finput_005f24.doStartTag();
        if (_jspx_th_form_005finput_005f24.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005finput_005f24[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005finput_005f24.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005finput_005f24.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005finput_0026_005ftype_005fpath_005fname_005fid_005fnobody.reuse(_jspx_th_form_005finput_005f24);
      _jspx_th_form_005finput_005f24_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005finput_005f24, _jsp_getInstanceManager(), _jspx_th_form_005finput_005f24_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f0 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f0_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(54,29) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f0.setCode("updtInstacne.summary.service.grid.caption");
      int[] _jspx_push_body_count_spring_005fmessage_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f0 = _jspx_th_spring_005fmessage_005f0.doStartTag();
        if (_jspx_th_spring_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f0);
      _jspx_th_spring_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f0 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f0_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f0.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(56,12) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f0.setAccess("hasAuthority('CREATE_SERVICE_INSTANCE')");
      int _jspx_eval_sec_005fauthorize_005f0 = _jspx_th_sec_005fauthorize_005f0.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t          <span class=\"title2rightfield-icon1-text\">\n");
        out.write("\t\t          \t<i class=\"fa fa-plus-circle\" id=\"add_service_img\" onclick=\"loadCreateServicePage();\"  style=\"cursor: pointer; cursor: hand;\"></i>\n");
        out.write("\t\t          \t<a href=\"#\" id=\"add_service_lnk\" onclick=\"loadCreateServicePage();\">\n");
        out.write("\t\t          \t\t");
        if (_jspx_meth_spring_005fmessage_005f1(_jspx_th_sec_005fauthorize_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
          return true;
        out.write("\n");
        out.write("\t\t          \t</a>\n");
        out.write("\t\t          </span>\n");
        out.write("\t\t        ");
      }
      if (_jspx_th_sec_005fauthorize_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f0);
      _jspx_th_sec_005fauthorize_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f0, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f1 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f1_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(60,14) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f1.setCode("updtInstacne.summary.service.create.link");
      int[] _jspx_push_body_count_spring_005fmessage_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f1 = _jspx_th_spring_005fmessage_005f1.doStartTag();
        if (_jspx_th_spring_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f1);
      _jspx_th_spring_005fmessage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f1, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f2 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f2_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(80,38) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f2.setCode("change.service.status.lable");
      int[] _jspx_push_body_count_spring_005fmessage_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f2 = _jspx_th_spring_005fmessage_005f2.doStartTag();
        if (_jspx_th_spring_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f2);
      _jspx_th_spring_005fmessage_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f2, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f3 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f3_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(83,38) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f3.setCode("serviceMgmt.start.popup.header");
      int[] _jspx_push_body_count_spring_005fmessage_005f3 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f3 = _jspx_th_spring_005fmessage_005f3.doStartTag();
        if (_jspx_th_spring_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f3[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f3.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f3.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f3);
      _jspx_th_spring_005fmessage_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f3, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f4 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f4_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(92,13) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f4.setCode("change.service.status.popup.msg");
      int[] _jspx_push_body_count_spring_005fmessage_005f4 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f4 = _jspx_th_spring_005fmessage_005f4.doStartTag();
        if (_jspx_th_spring_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f4[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f4.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f4.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f4);
      _jspx_th_spring_005fmessage_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f4, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f5 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f5_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f5.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(95,13) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f5.setCode("change.service.status.popup.msg");
      int[] _jspx_push_body_count_spring_005fmessage_005f5 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f5 = _jspx_th_spring_005fmessage_005f5.doStartTag();
        if (_jspx_th_spring_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f5[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f5.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f5.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f5);
      _jspx_th_spring_005fmessage_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f5, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f6 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f6_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f6.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(98,12) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f6.setCode("change.service.status.start.service.popup.msg");
      int[] _jspx_push_body_count_spring_005fmessage_005f6 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f6 = _jspx_th_spring_005fmessage_005f6.doStartTag();
        if (_jspx_th_spring_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f6[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f6.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f6.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f6);
      _jspx_th_spring_005fmessage_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f6, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f7 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f7_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f7.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(101,12) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f7.setCode("change.service.status.inactive.service.popup.msg");
      int[] _jspx_push_body_count_spring_005fmessage_005f7 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f7 = _jspx_th_spring_005fmessage_005f7.doStartTag();
        if (_jspx_th_spring_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f7[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f7.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f7.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f7);
      _jspx_th_spring_005fmessage_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f7, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f1 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f1_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f1.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(108,14) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f1.setAccess("hasAuthority('UPDATE_SERVICE_INSTANCE')");
      int _jspx_eval_sec_005fauthorize_005f1 = _jspx_th_sec_005fauthorize_005f1.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t\t            \t\t\t<button type=\"button\" id=\"yes_btn\" class=\"btn btn-grey btn-xs \" onclick=\"changeServiceStatus();\">");
        if (_jspx_meth_spring_005fmessage_005f8(_jspx_th_sec_005fauthorize_005f1, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
          return true;
        out.write("</button>\n");
        out.write("\t\t\t            \t\t");
      }
      if (_jspx_th_sec_005fauthorize_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f1);
      _jspx_th_sec_005fauthorize_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f1, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f8(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f8 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f8_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f8.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f1);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(109,115) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f8.setCode("btn.label.yes");
      int[] _jspx_push_body_count_spring_005fmessage_005f8 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f8 = _jspx_th_spring_005fmessage_005f8.doStartTag();
        if (_jspx_th_spring_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f8[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f8.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f8.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f8);
      _jspx_th_spring_005fmessage_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f8, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f9(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f9 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f9_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f9.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f9.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(111,131) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f9.setCode("btn.label.no");
      int[] _jspx_push_body_count_spring_005fmessage_005f9 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f9 = _jspx_th_spring_005fmessage_005f9.doStartTag();
        if (_jspx_th_spring_005fmessage_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f9[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f9.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f9.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f9);
      _jspx_th_spring_005fmessage_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f9, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f10(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f10 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f10_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f10.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f10.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(113,118) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f10.setCode("btn.label.close");
      int[] _jspx_push_body_count_spring_005fmessage_005f10 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f10 = _jspx_th_spring_005fmessage_005f10.doStartTag();
        if (_jspx_th_spring_005fmessage_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f10[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f10.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f10.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f10);
      _jspx_th_spring_005fmessage_005f10_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f10, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f10_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f11(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f11 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f11_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f11.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f11.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(114,120) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f11.setCode("btn.label.close");
      int[] _jspx_push_body_count_spring_005fmessage_005f11 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f11 = _jspx_th_spring_005fmessage_005f11.doStartTag();
        if (_jspx_th_spring_005fmessage_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f11[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f11.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f11.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f11);
      _jspx_th_spring_005fmessage_005f11_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f11, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f11_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f12(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f12 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f12_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f12.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f12.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(115,136) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f12.setCode("btn.label.close");
      int[] _jspx_push_body_count_spring_005fmessage_005f12 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f12 = _jspx_th_spring_005fmessage_005f12.doStartTag();
        if (_jspx_th_spring_005fmessage_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f12[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f12.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f12.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f12);
      _jspx_th_spring_005fmessage_005f12_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f12, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f12_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f2 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f2_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f2.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(128,7) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f2.setAccess("hasAuthority('PACKET_STATASTIC_AGENT') or hasAuthority('FILE_RENAME_AGENT')");
      int _jspx_eval_sec_005fauthorize_005f2 = _jspx_th_sec_005fauthorize_005f2.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t<div class=\"fullwidth mtop15\">\n");
        out.write("       \t\t<div class=\"title2\">\n");
        out.write("       \t\t\t");
        if (_jspx_meth_spring_005fmessage_005f13(_jspx_th_sec_005fauthorize_005f2, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
          return true;
        out.write("\n");
        out.write("      \t\t</div>\n");
        out.write("    \t</div>\n");
        out.write("    \t<div class=\"box  martop\" id=\"tblAgentList\"> \t\n");
        out.write("\t       \t<div class=\"box-body table-responsive no-padding box\">\n");
        out.write("\t       \t\t<table class=\"table table-hover\" id=\"agentList\"></table>\n");
        out.write("\t           \t<div id=\"agentListPagingDiv\"></div> \n");
        out.write("\t          \t<div class=\"clearfix\"></div>   \n");
        out.write("\t    \t</div>\n");
        out.write("    \t</div>\n");
        out.write("    \t");
      }
      if (_jspx_th_sec_005fauthorize_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f2);
      _jspx_th_sec_005fauthorize_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f2, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f13(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f2, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f13 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f13_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f13.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f13.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f2);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(131,10) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f13.setCode("updtInstacne.summary.agent.grid.caption");
      int[] _jspx_push_body_count_spring_005fmessage_005f13 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f13 = _jspx_th_spring_005fmessage_005f13.doStartTag();
        if (_jspx_th_spring_005fmessage_005f13.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f13[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f13.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f13.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f13);
      _jspx_th_spring_005fmessage_005f13_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f13, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f13_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f14(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f14 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f14_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f14.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f14.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(145,63) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f14.setCode("updtInstacne.snmp.alert.sts.label");
      int[] _jspx_push_body_count_spring_005fmessage_005f14 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f14 = _jspx_th_spring_005fmessage_005f14.doStartTag();
        if (_jspx_th_spring_005fmessage_005f14.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f14[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f14.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f14.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f14);
      _jspx_th_spring_005fmessage_005f14_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f14, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f14_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f3 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f3_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f3.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(147,17) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f3.setAccess("hasAuthority('UPDATE_SERVER_AND_SERVER_INSTANCES')");
      int _jspx_eval_sec_005fauthorize_005f3 = _jspx_th_sec_005fauthorize_005f3.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("                    \t<input data-toggle=\"toggle\" data-size=\"mini\" data-on=\"On\" data-off=\"Off\" type=\"checkbox\" id=\"snmpSts\">\n");
        out.write("                    ");
      }
      if (_jspx_th_sec_005fauthorize_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f3);
      _jspx_th_sec_005fauthorize_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f3, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f4 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f4_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f4.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(150,20) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f4.setAccess("!hasAuthority('UPDATE_SERVER_AND_SERVER_INSTANCES')");
      int _jspx_eval_sec_005fauthorize_005f4 = _jspx_th_sec_005fauthorize_005f4.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("                    \t<input data-toggle=\"toggle\" data-size=\"mini\" data-on=\"On\" data-off=\"Off\" type=\"checkbox\" disabled id=\"snmpSts\">\n");
        out.write("                    ");
      }
      if (_jspx_th_sec_005fauthorize_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f4);
      _jspx_th_sec_005fauthorize_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f4, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f15(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f15 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f15_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f15.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f15.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(175,65) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f15.setCode("updtInstacne.log.lvl.label");
      int[] _jspx_push_body_count_spring_005fmessage_005f15 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f15 = _jspx_th_spring_005fmessage_005f15.doStartTag();
        if (_jspx_th_spring_005fmessage_005f15.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f15[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f15.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f15.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f15);
      _jspx_th_spring_005fmessage_005f15_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f15, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f15_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f16(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f16 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f16_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f16.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f16.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(230,38) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f16.setCode("serverManagement.warn.popup.header");
      int[] _jspx_push_body_count_spring_005fmessage_005f16 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f16 = _jspx_th_spring_005fmessage_005f16.doStartTag();
        if (_jspx_th_spring_005fmessage_005f16.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f16[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f16.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f16.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f16);
      _jspx_th_spring_005fmessage_005f16_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f16, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f16_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f17(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f17 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f17_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f17.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f17.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(234,12) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f17.setCode("serverMgmt.instance.off.warning");
      int[] _jspx_push_body_count_spring_005fmessage_005f17 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f17 = _jspx_th_spring_005fmessage_005f17.doStartTag();
        if (_jspx_th_spring_005fmessage_005f17.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f17[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f17.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f17.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f17);
      _jspx_th_spring_005fmessage_005f17_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f17, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f17_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f18(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f18 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f18_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f18.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f18.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(238,130) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f18.setCode("btn.label.close");
      int[] _jspx_push_body_count_spring_005fmessage_005f18 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f18 = _jspx_th_spring_005fmessage_005f18.doStartTag();
        if (_jspx_th_spring_005fmessage_005f18.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f18[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f18.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f18.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f18);
      _jspx_th_spring_005fmessage_005f18_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f18, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f18_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f19(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f19 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f19_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f19.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f19.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(247,38) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f19.setCode("serverManagement.warn.popup.header");
      int[] _jspx_push_body_count_spring_005fmessage_005f19 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f19 = _jspx_th_spring_005fmessage_005f19.doStartTag();
        if (_jspx_th_spring_005fmessage_005f19.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f19[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f19.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f19.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f19);
      _jspx_th_spring_005fmessage_005f19_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f19, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f19_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f20(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f20 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f20_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f20.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f20.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(251,12) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f20.setCode("serverMgmt.instance.inactive.warning");
      int[] _jspx_push_body_count_spring_005fmessage_005f20 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f20 = _jspx_th_spring_005fmessage_005f20.doStartTag();
        if (_jspx_th_spring_005fmessage_005f20.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f20[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f20.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f20.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f20);
      _jspx_th_spring_005fmessage_005f20_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f20, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f20_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f21(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f21 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f21_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f21.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f21.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(255,130) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f21.setCode("btn.label.close");
      int[] _jspx_push_body_count_spring_005fmessage_005f21 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f21 = _jspx_th_spring_005fmessage_005f21.doStartTag();
        if (_jspx_th_spring_005fmessage_005f21.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f21[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f21.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f21.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f21);
      _jspx_th_spring_005fmessage_005f21_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f21, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f21_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f22(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f22 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f22_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f22.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f22.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f5);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(281,9) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f22.setCode("updtInstacne.summary.agent.grid.column.agent.id");
      int[] _jspx_push_body_count_spring_005fmessage_005f22 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f22 = _jspx_th_spring_005fmessage_005f22.doStartTag();
        if (_jspx_th_spring_005fmessage_005f22.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f22[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f22.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f22.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f22);
      _jspx_th_spring_005fmessage_005f22_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f22, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f22_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f23(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f23 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f23_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f23.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f23.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f5);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(282,24) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f23.setCode("updtInstacne.summary.agent.grid.column.agent.name");
      int[] _jspx_push_body_count_spring_005fmessage_005f23 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f23 = _jspx_th_spring_005fmessage_005f23.doStartTag();
        if (_jspx_th_spring_005fmessage_005f23.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f23[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f23.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f23.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f23);
      _jspx_th_spring_005fmessage_005f23_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f23, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f23_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f24(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f24 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f24_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f24.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f24.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f5);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(283,24) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f24.setCode("service.summary.grid.column.agent.agentTypeId");
      int[] _jspx_push_body_count_spring_005fmessage_005f24 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f24 = _jspx_th_spring_005fmessage_005f24.doStartTag();
        if (_jspx_th_spring_005fmessage_005f24.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f24[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f24.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f24.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f24);
      _jspx_th_spring_005fmessage_005f24_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f24, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f24_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f25(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f25 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f25_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f25.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f25.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f5);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(284,24) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f25.setCode("updtInstacne.summary.agent.grid.column.last.exe");
      int[] _jspx_push_body_count_spring_005fmessage_005f25 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f25 = _jspx_th_spring_005fmessage_005f25.doStartTag();
        if (_jspx_th_spring_005fmessage_005f25.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f25[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f25.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f25.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f25);
      _jspx_th_spring_005fmessage_005f25_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f25, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f25_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f26(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f26 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f26_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f26.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f26.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f5);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(285,24) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f26.setCode("updtInstacne.summary.agent.grid.column.nxt.exe");
      int[] _jspx_push_body_count_spring_005fmessage_005f26 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f26 = _jspx_th_spring_005fmessage_005f26.doStartTag();
        if (_jspx_th_spring_005fmessage_005f26.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f26[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f26.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f26.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f26);
      _jspx_th_spring_005fmessage_005f26_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f26, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f26_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f27(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f27 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f27_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f27.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f27.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f5);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(286,24) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f27.setCode("updtInstacne.summary.agent.grid.column.status");
      int[] _jspx_push_body_count_spring_005fmessage_005f27 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f27 = _jspx_th_spring_005fmessage_005f27.doStartTag();
        if (_jspx_th_spring_005fmessage_005f27.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f27[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f27.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f27.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f27);
      _jspx_th_spring_005fmessage_005f27_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f27, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f27_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f28(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f28 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f28_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f28.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f28.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f5);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(305,23) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f28.setCode("updtInstacne.agent.list.grid.caption");
      int[] _jspx_push_body_count_spring_005fmessage_005f28 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f28 = _jspx_th_spring_005fmessage_005f28.doStartTag();
        if (_jspx_th_spring_005fmessage_005f28.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f28[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f28.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f28.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f28);
      _jspx_th_spring_005fmessage_005f28_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f28, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f28_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f6 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f6_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f6.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f5);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(334,16) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f6.setAccess("hasAuthority('PACKET_STATASTIC_AGENT')");
      int _jspx_eval_sec_005fauthorize_005f6 = _jspx_th_sec_005fauthorize_005f6.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f6 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t     \t\t       if(agentType == 'Packet Statistics Agent'){\n");
        out.write("\t\t\t\t\t\t\t\t$row.show();\t\t\t\t       \t\t\t\n");
        out.write("\t\t\t\t       \t\t}\n");
        out.write("\t     \t\t       \t");
      }
      if (_jspx_th_sec_005fauthorize_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f6);
      _jspx_th_sec_005fauthorize_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f6, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f7 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f7_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f7.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f5);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(340,15) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f7.setAccess("hasAuthority('FILE_RENAME_AGENT')");
      int _jspx_eval_sec_005fauthorize_005f7 = _jspx_th_sec_005fauthorize_005f7.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f7 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t     \t\t      if(agentType == 'File Rename Agent'){\n");
        out.write("\t\t\t\t       \t\t\t $row.show();\n");
        out.write("\t\t\t\t       \t\t\t\n");
        out.write("\t\t\t\t       \t\t}\n");
        out.write("\t     \t\t       ");
      }
      if (_jspx_th_sec_005fauthorize_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f7);
      _jspx_th_sec_005fauthorize_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f7, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f29(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f29 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f29_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f29.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f29.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f5);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(367,17) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f29.setCode("updtInstacne.agent.list.grid.pager.total.records.text");
      int[] _jspx_push_body_count_spring_005fmessage_005f29 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f29 = _jspx_th_spring_005fmessage_005f29.doStartTag();
        if (_jspx_th_spring_005fmessage_005f29.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f29[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f29.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f29.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f29);
      _jspx_th_spring_005fmessage_005f29_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f29, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f29_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f30(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f30 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f30_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f30.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f30.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f5);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(368,25) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f30.setCode("updtInstacne.agent.list.grid.empty.records");
      int[] _jspx_push_body_count_spring_005fmessage_005f30 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f30 = _jspx_th_spring_005fmessage_005f30.doStartTag();
        if (_jspx_th_spring_005fmessage_005f30.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f30[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f30.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f30.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f30);
      _jspx_th_spring_005fmessage_005f30_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f30, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f30_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f31(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f31 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f31_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f31.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f31.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f5);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(369,15) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f31.setCode("updtInstacne.agent.list.grid.loading.text");
      int[] _jspx_push_body_count_spring_005fmessage_005f31 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f31 = _jspx_th_spring_005fmessage_005f31.doStartTag();
        if (_jspx_th_spring_005fmessage_005f31.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f31[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f31.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f31.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f31);
      _jspx_th_spring_005fmessage_005f31_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f31, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f31_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f32(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f32 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f32_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f32.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f32.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f5);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(370,14) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f32.setCode("updtInstacne.agent.list.grid.pager.text");
      int[] _jspx_push_body_count_spring_005fmessage_005f32 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f32 = _jspx_th_spring_005fmessage_005f32.doStartTag();
        if (_jspx_th_spring_005fmessage_005f32.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f32[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f32.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f32.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f32);
      _jspx_th_spring_005fmessage_005f32_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f32, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f32_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f33(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f33 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f33_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f33.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f33.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(388,24) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f33.setCode("updtInstacne.summary.service.grid.column.id");
      int[] _jspx_push_body_count_spring_005fmessage_005f33 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f33 = _jspx_th_spring_005fmessage_005f33.doStartTag();
        if (_jspx_th_spring_005fmessage_005f33.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f33[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f33.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f33.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f33);
      _jspx_th_spring_005fmessage_005f33_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f33, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f33_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f34(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f34 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f34_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f34.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f34.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(389,24) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f34.setCode("updtInstacne.summary.service.grid.column.id");
      int[] _jspx_push_body_count_spring_005fmessage_005f34 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f34 = _jspx_th_spring_005fmessage_005f34.doStartTag();
        if (_jspx_th_spring_005fmessage_005f34.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f34[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f34.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f34.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f34);
      _jspx_th_spring_005fmessage_005f34_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f34, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f34_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f35(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f35 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f35_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f35.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f35.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(390,24) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f35.setCode("updtInstacne.summary.service.grid.column.name");
      int[] _jspx_push_body_count_spring_005fmessage_005f35 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f35 = _jspx_th_spring_005fmessage_005f35.doStartTag();
        if (_jspx_th_spring_005fmessage_005f35.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f35[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f35.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f35.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f35);
      _jspx_th_spring_005fmessage_005f35_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f35, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f35_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f36(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f36 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f36_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f36.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f36.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(391,24) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f36.setCode("updtInstacne.summary.service.grid.column.type");
      int[] _jspx_push_body_count_spring_005fmessage_005f36 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f36 = _jspx_th_spring_005fmessage_005f36.doStartTag();
        if (_jspx_th_spring_005fmessage_005f36.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f36[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f36.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f36.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f36);
      _jspx_th_spring_005fmessage_005f36_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f36, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f36_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f37(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f37 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f37_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f37.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f37.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(392,24) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f37.setCode("updtInstacne.summary.service.grid.column.type");
      int[] _jspx_push_body_count_spring_005fmessage_005f37 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f37 = _jspx_th_spring_005fmessage_005f37.doStartTag();
        if (_jspx_th_spring_005fmessage_005f37.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f37[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f37.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f37.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f37);
      _jspx_th_spring_005fmessage_005f37_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f37, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f37_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f38(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f38 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f38_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f38.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f38.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(393,24) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f38.setCode("updtInstacne.summary.service.enableStatus");
      int[] _jspx_push_body_count_spring_005fmessage_005f38 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f38 = _jspx_th_spring_005fmessage_005f38.doStartTag();
        if (_jspx_th_spring_005fmessage_005f38.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f38[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f38.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f38.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f38);
      _jspx_th_spring_005fmessage_005f38_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f38, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f38_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f39(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f39 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f39_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f39.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f39.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(394,24) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f39.setCode("updtInstacne.summary.service.grid.column.status");
      int[] _jspx_push_body_count_spring_005fmessage_005f39 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f39 = _jspx_th_spring_005fmessage_005f39.doStartTag();
        if (_jspx_th_spring_005fmessage_005f39.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f39[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f39.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f39.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f39);
      _jspx_th_spring_005fmessage_005f39_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f39, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f39_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f40(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f40 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f40_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f40.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f40.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(395,24) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f40.setCode("updtInstacne.summary.service.grid.column.lst.updt.dt");
      int[] _jspx_push_body_count_spring_005fmessage_005f40 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f40 = _jspx_th_spring_005fmessage_005f40.doStartTag();
        if (_jspx_th_spring_005fmessage_005f40.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f40[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f40.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f40.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f40);
      _jspx_th_spring_005fmessage_005f40_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f40, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f40_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f41(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f41 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f41_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f41.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f41.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(396,24) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f41.setCode("updtInstacne.summary.service.grid.column.sync");
      int[] _jspx_push_body_count_spring_005fmessage_005f41 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f41 = _jspx_th_spring_005fmessage_005f41.doStartTag();
        if (_jspx_th_spring_005fmessage_005f41.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f41[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f41.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f41.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f41);
      _jspx_th_spring_005fmessage_005f41_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f41, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f41_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f42(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f42 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f42_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f42.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f42.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(397,24) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f42.setCode("updtInstance.summary.service.delete.link");
      int[] _jspx_push_body_count_spring_005fmessage_005f42 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f42 = _jspx_th_spring_005fmessage_005f42.doStartTag();
        if (_jspx_th_spring_005fmessage_005f42.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f42[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f42.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f42.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f42);
      _jspx_th_spring_005fmessage_005f42_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f42, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f42_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(407,108) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Boolean.TRUE.toString() eq  MapCache.getConfigValueAsObject(BaseConstants.KUBERNETES_ENV)}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("hidden:true");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f43(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f43 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f43_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f43.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f43.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(423,23) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f43.setCode("staffMgmt.grid.caption");
      int[] _jspx_push_body_count_spring_005fmessage_005f43 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f43 = _jspx_th_spring_005fmessage_005f43.doStartTag();
        if (_jspx_th_spring_005fmessage_005f43.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f43[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f43.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f43.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f43);
      _jspx_th_spring_005fmessage_005f43_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f43, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f43_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f44(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f44 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f44_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f44.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f44.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(432,26) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f44.setCode("staffMgmt.grid.caption");
      int[] _jspx_push_body_count_spring_005fmessage_005f44 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f44 = _jspx_th_spring_005fmessage_005f44.doStartTag();
        if (_jspx_th_spring_005fmessage_005f44.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f44[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f44.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f44.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f44);
      _jspx_th_spring_005fmessage_005f44_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f44, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f44_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f45(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f45 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f45_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f45.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f45.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(489,17) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f45.setCode("updtInstacne.service.list.grid.pager.total.records.text");
      int[] _jspx_push_body_count_spring_005fmessage_005f45 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f45 = _jspx_th_spring_005fmessage_005f45.doStartTag();
        if (_jspx_th_spring_005fmessage_005f45.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f45[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f45.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f45.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f45);
      _jspx_th_spring_005fmessage_005f45_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f45, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f45_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f46(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f46 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f46_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f46.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f46.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(490,25) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f46.setCode("updtInstacne.service.list.grid.empty.records");
      int[] _jspx_push_body_count_spring_005fmessage_005f46 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f46 = _jspx_th_spring_005fmessage_005f46.doStartTag();
        if (_jspx_th_spring_005fmessage_005f46.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f46[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f46.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f46.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f46);
      _jspx_th_spring_005fmessage_005f46_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f46, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f46_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f47(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f47 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f47_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f47.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f47.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(491,15) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f47.setCode("updtInstacne.service.list.grid.loading.text");
      int[] _jspx_push_body_count_spring_005fmessage_005f47 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f47 = _jspx_th_spring_005fmessage_005f47.doStartTag();
        if (_jspx_th_spring_005fmessage_005f47.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f47[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f47.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f47.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f47);
      _jspx_th_spring_005fmessage_005f47_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f47, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f47_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f48(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f48 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f48_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f48.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f48.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(492,14) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f48.setCode("updtInstacne.service.list.grid.pager.text");
      int[] _jspx_push_body_count_spring_005fmessage_005f48 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f48 = _jspx_th_spring_005fmessage_005f48.doStartTag();
        if (_jspx_th_spring_005fmessage_005f48.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f48[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f48.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f48.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f48);
      _jspx_th_spring_005fmessage_005f48_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f48, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f48_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f8(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f8 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f8_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f8.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f8.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(688,3) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f8.setAccess("!hasAuthority('VIEW_SERVICE_INSTANCE')");
      int _jspx_eval_sec_005fauthorize_005f8 = _jspx_th_sec_005fauthorize_005f8.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f8 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t\t\treturn cellvalue;\n");
        out.write("\t\t\t");
      }
      if (_jspx_th_sec_005fauthorize_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f8);
      _jspx_th_sec_005fauthorize_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f8, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f9(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f9 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f9_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f9.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f9.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(691,3) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f9.setAccess("hasAuthority('VIEW_SERVICE_INSTANCE')");
      int _jspx_eval_sec_005fauthorize_005f9 = _jspx_th_sec_005fauthorize_005f9.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f9 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t\t\treturn '<a class=\"link\" id=\"'+serviceDetailLnkId+'\" onclick=\"viewService('+\"'\" + rowObject[\"id\"]+ \"','\"+rowObject[\"serviceType\"]+\"','\"+rowObject[\"name\"]+\"','\"+serverInstanceId+\"'\" + ')\">' + cellvalue + '</a>' ;\n");
        out.write("\t\t\t");
      }
      if (_jspx_th_sec_005fauthorize_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f9);
      _jspx_th_sec_005fauthorize_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f9, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f49(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f49 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f49_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f49.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f49.setParent(null);
      // /WEB-INF/jsp/server/updtInstance-Summary.jsp(1549,26) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f49.setCode("reloadCache.databaseQuery.invalid");
      int[] _jspx_push_body_count_spring_005fmessage_005f49 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f49 = _jspx_th_spring_005fmessage_005f49.doStartTag();
        if (_jspx_th_spring_005fmessage_005f49.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f49[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f49.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f49.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f49);
      _jspx_th_spring_005fmessage_005f49_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f49, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f49_reused);
    }
    return false;
  }
}
