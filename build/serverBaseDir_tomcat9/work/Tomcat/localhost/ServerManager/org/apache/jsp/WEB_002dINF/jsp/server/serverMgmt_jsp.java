/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.34
 * Generated at: 2023-11-13 06:50:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.server;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.elitecore.sm.common.constants.LicenseConstants;
import com.elitecore.sm.util.MapCache;
import com.elitecore.sm.common.constants.SystemParametersConstant;
import com.elitecore.sm.common.constants.ControllerConstants;
import com.elitecore.sm.util.EliteUtils;
import com.elitecore.sm.common.constants.BaseConstants;

public final class serverMgmt_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(8);
    _jspx_dependants.put("jar:file:/home/upendra/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/5.3.20/8ac1b72a1f5c41fdc2cb3340cd94f795af260301/spring-webmvc-5.3.20.jar!/META-INF/spring-form.tld", Long.valueOf(1652232424000L));
    _jspx_dependants.put("jar:file:/home/upendra/.gradle/caches/modules-2/files-2.1/org.springframework.security/spring-security-taglibs/5.5.7/757234463d9633361d863c14e1b81dd82e16482e/spring-security-taglibs-5.5.7.jar!/META-INF/security.tld", Long.valueOf(1652702070000L));
    _jspx_dependants.put("file:/home/upendra/.gradle/caches/modules-2/files-2.1/org.springframework.security/spring-security-taglibs/5.5.7/757234463d9633361d863c14e1b81dd82e16482e/spring-security-taglibs-5.5.7.jar", Long.valueOf(1679656227262L));
    _jspx_dependants.put("file:/home/upendra/.gradle/caches/modules-2/files-2.1/javax.servlet/jstl/1.2/74aca283cd4f4b4f3e425f5820cda58f44409547/jstl-1.2.jar", Long.valueOf(1679656181794L));
    _jspx_dependants.put("/WEB-INF/ShowErrorTag.tld", Long.valueOf(1699857843167L));
    _jspx_dependants.put("file:/home/upendra/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/5.3.20/8ac1b72a1f5c41fdc2cb3340cd94f795af260301/spring-webmvc-5.3.20.jar", Long.valueOf(1679656233526L));
    _jspx_dependants.put("jar:file:/home/upendra/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/5.3.20/8ac1b72a1f5c41fdc2cb3340cd94f795af260301/spring-webmvc-5.3.20.jar!/META-INF/spring.tld", Long.valueOf(1652232424000L));
    _jspx_dependants.put("jar:file:/home/upendra/.gradle/caches/modules-2/files-2.1/javax.servlet/jstl/1.2/74aca283cd4f4b4f3e425f5820cda58f44409547/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153365282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.elitecore.sm.util.MapCache");
    _jspx_imports_classes.add("com.elitecore.sm.common.constants.LicenseConstants");
    _jspx_imports_classes.add("com.elitecore.sm.common.constants.ControllerConstants");
    _jspx_imports_classes.add("com.elitecore.sm.util.EliteUtils");
    _jspx_imports_classes.add("com.elitecore.sm.common.constants.BaseConstants");
    _jspx_imports_classes.add("com.elitecore.sm.common.constants.SystemParametersConstant");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.release();
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/bootstrap.min.js\" type=\"text/javascript\"></script>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<style>\n");
      out.write(".ui-state-highlight { background: white !important;border-color: black !white;}\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<div class=\"tab-content padding0 clearfix\" id=\"server-manager-block\">\n");
      out.write("\t\t<div class=\"title2\">\n");
      out.write("\t\t\t");
      if (_jspx_meth_spring_005fmessage_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t</div>\n");
      out.write("        <div class=\"fullwidth borbot\">\n");
      out.write("        \t<div class=\"col-md-6 inline-form\" style=\"padding-left: 0px !important;\">\n");
      out.write("\n");
      out.write("\t\t\t<div class=\"form-group\">\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t");
      if (_jspx_meth_spring_005fmessage_005f1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t\t");
      if (_jspx_meth_spring_005fmessage_005f2(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t\t<div class=\"table-cell-label\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${label}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\n");
      out.write("\t\t\t\t<div class=\"input-group \">\n");
      out.write("\t\t\t\t\t<select name=\"search-server-serverType\" class=\"form-control table-cell input-sm\"\n");
      out.write("\t\t\t\t\t\ttabindex=\"1\" id=\"search-server-serverType\" data-toggle=\"tooltip\"\n");
      out.write("\t\t\t\t\t\tdata-placement=\"bottom\" title=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${tooltip }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("\t\t\t\t\t\tonchange=\"getServerListByServerType();\">\n");
      out.write("\t\t\t\t\t\t<option value=\"-1\" selected=\"selected\">");
      if (_jspx_meth_spring_005fmessage_005f3(_jspx_page_context))
        return;
      out.write("</option>\n");
      out.write("\t\t\t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t</select> <span class=\"input-group-addon add-on last\"> <i\n");
      out.write("\t\t\t\t\t\tclass=\"glyphicon glyphicon-alert\" data-toggle=\"tooltip\"\n");
      out.write("\t\t\t\t\t\tdata-placement=\"left\" title=\"\"></i></span>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t<div class=\"form-group\">\n");
      out.write("\t         \t\t");
      if (_jspx_meth_spring_005fmessage_005f4(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t         \t\t");
      if (_jspx_meth_spring_005fmessage_005f5(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t         \t\t<div class=\"table-cell-label\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${label }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\n");
      out.write("\t             \t<div class=\"input-group \">\n");
      out.write("\t             \t\t<input type=\"text\" id=\"search-server-name\" class=\"form-control table-cell input-sm\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${tooltip }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"  >\n");
      out.write("\t             \t\t<span class=\"input-group-addon add-on last\" ><i class=\"glyphicon glyphicon-alert\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"\"></i></span>\n");
      out.write("\t             \t</div>\n");
      out.write("\t             </div>\n");
      out.write("\t             \n");
      out.write("\t             <div class=\"form-group\">\n");
      out.write("\t             \t");
      if (_jspx_meth_spring_005fmessage_005f6(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t             \t");
      if (_jspx_meth_spring_005fmessage_005f7(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t         \t\t<div class=\"table-cell-label\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${label }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\n");
      out.write("\t             \t<div class=\"input-group \">\n");
      out.write("\t             \t\t<input type=\"text\" id=\"search-server-host\" class=\"form-control table-cell input-sm\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${tooltip }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"  >\n");
      out.write("\t             \t\t<span class=\"input-group-addon add-on last\" > <i class=\"glyphicon glyphicon-alert\" data-toggle=\"tooltip\" data-placement=\"left\" title=\"\"></i></span></div>\n");
      out.write("\t             </div>\n");
      out.write("\t             \n");
      out.write("\t             \n");
      out.write("     \t  \t</div>\n");
      out.write("         \t<div class=\"col-md-6 inline-form\">\n");
      out.write("\n");
      out.write("\t\t\t\t<div class=\"form-group\">\n");
      out.write("\t         \t\t");
      if (_jspx_meth_spring_005fmessage_005f8(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t         \t\t");
      if (_jspx_meth_spring_005fmessage_005f9(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t         \t\t<div class=\"table-cell-label\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${label}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\n");
      out.write("\t             \t<div class=\"input-group \">\n");
      out.write("\t             \t\t<input type=\"text\" id=\"search-server-instance\" class=\"form-control table-cell input-sm\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${tooltip }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"  >\n");
      out.write("\t             \t\t<span class=\"input-group-addon add-on last\" > <i class=\"glyphicon glyphicon-alert\" data-toggle=\"tooltip\" data-placement=\"left\" title=\"\"></i></span>\n");
      out.write("\t             \t</div>\n");
      out.write("\t             </div>\n");
      out.write("\t             \n");
      out.write("\t             <div class=\"form-group\">\n");
      out.write("\t             \t");
      if (_jspx_meth_spring_005fmessage_005f10(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t             \t");
      if (_jspx_meth_spring_005fmessage_005f11(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t         \t\t<div class=\"table-cell-label\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${label }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\n");
      out.write("\t             \t<div class=\"input-group \">\n");
      out.write("\t             \t\t<input type=\"number\" id=\"search-server-instance-port\" class=\"form-control table-cell input-sm\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${tooltip }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" onkeydown=\"isNumericOnKeyDown(event)\" >\n");
      out.write("\t             \t\t<span class=\"input-group-addon add-on last\" > <i class=\"glyphicon glyphicon-alert\" data-toggle=\"tooltip\" data-placement=\"left\" title=\"\"></i></span>\n");
      out.write("\t             \t</div>\n");
      out.write("\t             </div>\n");
      out.write("\t             \n");
      out.write("\t             <div class=\"form-group\">\n");
      out.write("\t             \t");
      if (_jspx_meth_spring_005fmessage_005f12(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t         \t\t<div class=\"table-cell-label\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${tooltip }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\n");
      out.write("\t             \t<div class=\"input-group \">\n");
      out.write("\t             \t\t<input type=\"radio\" id=\"sync_status_radio\" name=\"search-server-instance-sync-status\" style=\"padding-right: 15px;\" value=\"yes\"/>&nbsp;&nbsp;\t");
      if (_jspx_meth_spring_005fmessage_005f13(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t             \t\t&nbsp;&nbsp;&nbsp;<input type=\"radio\" id=\"unsync_status_radio\" name=\"search-server-instance-sync-status\" style=\"padding-right: 15px;\" value=\"no\"/>&nbsp;&nbsp;");
      if (_jspx_meth_spring_005fmessage_005f14(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t             \t</div>\n");
      out.write("\t             </div>\n");
      out.write("\t             \n");
      out.write("\t             \n");
      out.write("         \t</div>\n");
      out.write("\n");
      out.write("\t             \t<div class=\"table-cell-label\">&nbsp;</div>\n");
      out.write("\t             \t<div class=\"input-group \">\n");
      out.write("\t             \t\t&nbsp;\n");
      out.write("\t             \t\t<span class=\"input-group-addon add-on last\" > <i class=\"glyphicon glyphicon-alert\" data-toggle=\"tooltip\" data-placement=\"left\" title=\"\"></i></span>\n");
      out.write("\t             \t</div>\n");
      out.write("\n");
      out.write("     \t\t<div class=\"pbottom15\">\n");
      out.write("     \t\t\t");
      if (_jspx_meth_sec_005fauthorize_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("   \t\t\t</div>\n");
      out.write("   \t\t</div>\n");
      out.write("   \n");
      out.write("        <div class=\"tab-content no-padding clearfix\">\n");
      out.write("         \t<div class=\"fullwidth\">\n");
      out.write("   \t\t\t\t<div class=\"title2\">\n");
      out.write("   \t\t\t\t\t");
      if (_jspx_meth_spring_005fmessage_005f17(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t   \t\t\t\t <span class=\"title2rightfield\">\n");
      out.write("\t\t\t\t          \n");
      out.write("\t\t\t\t          \t");
      if (_jspx_meth_sec_005fauthorize_005f1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t\t          \t\n");
      out.write("\t\t\t\t          \t<a href=\"#divSynchronize\" class=\"fancybox\" style=\"display: none;\" id=\"synchronize\">#</a>\n");
      out.write("\t\t\t\t\t\t\t<a href=\"#divReloadConfig\" class=\"fancybox\" style=\"display: none;\" id=\"reloadconfig\">#</a>\n");
      out.write("\t\t\t\t          \t<a href=\"#divSoftRestart\" class=\"fancybox\" style=\"display: none;\" id=\"softrestart\">#</a>\n");
      out.write("\t\t\t\t          \t<a href=\"#divSyncPublish\" class=\"fancybox\" style=\"display: none;\" id=\"syncPublish\">#</a>\t\n");
      out.write("\t\t\t\t          \t<a href=\"#divStartStopInstance\" class=\"fancybox\" style=\"display: none;\" id=\"startstop\">#</a>\n");
      out.write("\t\t\t\t          \t<a href=\"#divImportConfig\" class=\"fancybox\" style=\"display: none;\" id=\"importconfig\">#</a>\n");
      out.write("\t\t\t\t          \t<a href=\"#divReloadCache\" class=\"fancybox\" style=\"display: none;\" id=\"reloadcache\">#</a>\n");
      out.write("\t\t\t\t          \t<a href=\"#divCopyConfig\" class=\"fancybox\" style=\"display: none;\" id=\"copyconfig\">#</a>\n");
      out.write("\t\t\t\t          \t<a href=\"#divMessage\" class=\"fancybox\" style=\"display: none;\" id=\"message\">#</a>\n");
      out.write("\t\t\t\t          \t<a href=\"#divOffWarn\" class=\"fancybox\" style=\"display: none;\" id=\"offwarn\">#</a>\n");
      out.write("\t\t\t\t          \t<a href=\"#divInactiveWarn\" class=\"fancybox\" style=\"display: none;\" id=\"inactivewarn\">#</a>\n");
      out.write("\t\t\t\t          \t<a href=\"#divStart\" class=\"fancybox\" style=\"display: none;\" id=\"start\">#</a>\n");
      out.write("\t\t\t\t          \t<a href=\"#divStop\" class=\"fancybox\" style=\"display: none;\" id=\"stop\">#</a>\n");
      out.write("\t\t\t\t          \n");
      out.write("\t\t\t          </span>\n");
      out.write("\t\t          </div>\n");
      out.write("   \t\t\t</div>\n");
      out.write("           \t<!-- Morris chart - Sales -->\n");
      out.write("            <div class=\"box-body table-responsive no-padding box\">\n");
      out.write("             \t<table class=\"table table-hover\" id=\"instanceList\"></table>\n");
      out.write("               \t<div id=\"instanceListPagingDiv\"></div> \n");
      out.write("\t           \t<div class=\"clearfix\"></div> \n");
      out.write("\t           \t<div id=\"divLoading\" align=\"center\" style=\"display: none;\"><img src=\"img/preloaders/Preloader_10.gif\" /></div>  \n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <div style=\"display: none;\">\n");
      out.write("\t\t\t<form id=\"serverinstance_form\" method=\"POST\" action=\"\">\n");
      out.write("\t\t\t\t<input type=\"hidden\" id=\"instanceId\" name=\"instanceId\">\n");
      out.write("\t\t\t</form>\n");
      out.write("\t\t</div>\n");
      out.write("\t\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "divReloadConfig.jsp", out, false);
      out.write("\n");
      out.write("\t\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "divSoftRestart.jsp", out, false);
      out.write('\n');
      out.write('	');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "divSyncPublish.jsp", out, false);
      out.write('\n');
      out.write('	');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "divReloadCache.jsp", out, false);
      out.write("\n");
      out.write("\t\t\n");
      out.write("\t\t<div id=\"divSynchronize\" style=\" width:100%; display: none;\" >\n");
      out.write("\t\t    <div class=\"modal-content\">\n");
      out.write("\t\t        <div class=\"modal-header padding10\">\n");
      out.write("\t\t            <h4 class=\"modal-title\">");
      if (_jspx_meth_spring_005fmessage_005f19(_jspx_page_context))
        return;
      out.write("</h4>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div class=\"modal-body padding10 inline-form\">\n");
      out.write("\t        \t\t<div id=\"divSyncMsg\">\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/responseMsg.jsp", out, false);
      out.write("\n");
      out.write("\t\t\t        <p>\n");
      out.write("\t\t\t        \t<input type='hidden' id=\"syncInstanceId\" />\n");
      out.write("\t\t\t        \t<table style='width:100%'>\n");
      out.write("\t\t\t        \t\t<tr>\n");
      out.write("\t\t\t        \t\t\t<td width=\"15%\">\n");
      out.write("\t\t\t        \t\t\t\t<img alt=\"Server Instance\" src=\"img/server.png\" class=\"img-responsive\" />\n");
      out.write("\t\t\t        \t\t\t</td>\n");
      out.write("\t\t\t        \t\t\t<td width=\"85%\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<div id=\"divInstanceList\">\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t        \t\t\t</td>\n");
      out.write("\t\t\t        \t\t</tr>\n");
      out.write("\t\t\t        \t</table>\n");
      out.write("\t\t\t        </p>\n");
      out.write("\t\t\t\t\t<p id=\"synchronizePopUpMsg\" class=\"synchronizePopUpMsgClass\">           \t\n");
      out.write("\t\t\t           \t<span class=\"note\">");
      if (_jspx_meth_spring_005fmessage_005f20(_jspx_page_context))
        return;
      out.write("</span><br/><br/>\n");
      out.write("\t\t\t           \t");
      if (_jspx_meth_spring_005fmessage_005f21(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t        </p>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div id=\"synch-buttons-div\" class=\"modal-footer padding10\">\n");
      out.write("\t\t        \t");
      if (_jspx_meth_sec_005fauthorize_005f2(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t            <button type=\"button\" class=\"btn btn-grey btn-xs \" id=\"btnSynchCancel\" data-dismiss=\"modal\" onclick=\"closeFancyBox();clearSelection();searchInstanceCriteria();\">");
      if (_jspx_meth_spring_005fmessage_005f23(_jspx_page_context))
        return;
      out.write("</button>\n");
      out.write("\t\t            <button type=\"button\" class=\"btn btn-grey btn-xs \" id=\"btnSynchClose\" data-dismiss=\"modal\" onclick=\"closeFancyBox();clearSelection();searchInstanceCriteria();\" style=\"display: none;\">");
      if (_jspx_meth_spring_005fmessage_005f24(_jspx_page_context))
        return;
      out.write("</button>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div id=\"synch-progress-bar-div\" class=\"modal-footer padding10 text-left\" style=\"display: none;\">\n");
      out.write("\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/processing-bar.jsp", out, false);
      out.write("\n");
      out.write("\t\t\t\t</div>\t\n");
      out.write("\t\t    </div>\n");
      out.write("\t\t    <!-- /.modal-content --> \n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div id=\"divStartStopInstance\" style=\" width:100%; display: none;\" >\n");
      out.write("\t\t    <div class=\"modal-content\">\n");
      out.write("\t\t        <div class=\"modal-header padding10\">\n");
      out.write("\t\t            <h4 class=\"modal-title\"></h4>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div class=\"modal-body padding10 inline-form\">\n");
      out.write("\t\t        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/responseMsgPopUp.jsp", out, false);
      out.write("\n");
      out.write("\t\t        \t<input type=\"hidden\" id=\"startStopInstanceId\" /> \n");
      out.write("\t\t\t        <p id =\"startNote\">\n");
      out.write("\t\t\t        \t<table>\n");
      out.write("\t\t\t        \t\t<tr>\n");
      out.write("\t\t\t        \t\t\t<td>\n");
      out.write("\t\t\t        \t\t\t\t<img alt=\"Server Instance\" src=\"img/server.png\" class=\"img-responsive\" />\n");
      out.write("\t\t\t        \t\t\t</td>\n");
      out.write("\t\t\t        \t\t\t<td style=\"padding-left: 20px;\">\n");
      out.write("\t\t\t        \t\t\t\t<strong>");
      if (_jspx_meth_spring_005fmessage_005f25(_jspx_page_context))
        return;
      out.write("</strong> : &nbsp;&nbsp;<label id=\"lblServerIp\"></label>&nbsp; : &nbsp; <label id=\"lblPort\"></label> <br/>\t\t\n");
      out.write("\t\t\t        \t\t\t\t");
      if (_jspx_meth_spring_005fmessage_005f26(_jspx_page_context))
        return;
      out.write(" : &nbsp;&nbsp;<label id=\"lblInstance\"></label><br/>\n");
      out.write("\t\t\t        \t\t\t</td>\n");
      out.write("\t\t\t        \t\t</tr>\n");
      out.write("\t\t\t        \t</table>\n");
      out.write("\t\t\t        </p>\n");
      out.write("\t\t\t\t\t<p id=\"stopNote\" style=\"display: none;\">\t           \t\n");
      out.write("\t\t\t           \t<span class=\"note\">");
      if (_jspx_meth_spring_005fmessage_005f27(_jspx_page_context))
        return;
      out.write("</span><br/><br/>\n");
      out.write("\t\t\t           \t");
      if (_jspx_meth_sec_005fauthorize_005f3(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t           \t<br/><strong>");
      if (_jspx_meth_spring_005fmessage_005f30(_jspx_page_context))
        return;
      out.write("</strong> : ");
      if (_jspx_meth_spring_005fmessage_005f31(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t        </p>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div id=\"buttons-div\" class=\"modal-footer padding10\">\n");
      out.write("\t\t        \t");
      if (_jspx_meth_sec_005fauthorize_005f4(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t            \t");
      if (_jspx_meth_sec_005fauthorize_005f5(_jspx_page_context))
        return;
      out.write("\n");
      out.write("           \t\t\t<button type=\"button\" class=\"btn btn-grey btn-xs \" id=\"btnCancel\" data-dismiss=\"modal\" onclick=\"closeFancyBox();clearSelection();searchInstanceCriteria();\">");
      if (_jspx_meth_spring_005fmessage_005f35(_jspx_page_context))
        return;
      out.write("</button>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div id=\"progress-bar-div\" class=\"modal-footer padding10 text-left\" style=\"display: none;\">\n");
      out.write("\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/processing-bar.jsp", out, false);
      out.write("\n");
      out.write("\t\t\t\t</div>\t\n");
      out.write("\t\t        \n");
      out.write("\t\t    </div>\n");
      out.write("\t\t    <!-- /.modal-content --> \n");
      out.write("\t\t</div>\n");
      out.write("\t\n");
      out.write("\t\t<div id=\"divImportConfig\" style=\" width:100%; display: none;\" >\n");
      out.write("\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "ImportServerInstancePopUp.jsp", out, false);
      out.write("\n");
      out.write("\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t<div id=\"divMessage\" style=\" width:100%; display: none;\" >\n");
      out.write("\t\t    <div class=\"modal-content\">\n");
      out.write("\t\t        <div class=\"modal-header padding10\">\n");
      out.write("\t\t            <h4 class=\"modal-title\">");
      if (_jspx_meth_spring_005fmessage_005f36(_jspx_page_context))
        return;
      out.write("</h4>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div class=\"modal-body padding10 inline-form\">\n");
      out.write("\t\t\t        <p id=\"moreWarn\">\n");
      out.write("\t\t\t        \t");
      if (_jspx_meth_spring_005fmessage_005f37(_jspx_page_context))
        return;
      out.write("    \n");
      out.write("\t\t\t        </p>\n");
      out.write("\t\t\t        <p id=\"lessWarn\">\n");
      out.write("\t\t\t        \t");
      if (_jspx_meth_spring_005fmessage_005f38(_jspx_page_context))
        return;
      out.write("    \n");
      out.write("\t\t\t        </p>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div class=\"modal-footer padding10\">\n");
      out.write("\t\t            <button id=\"no_selection_delete_close_btn\" type=\"button\" class=\"btn btn-grey btn-xs \" data-dismiss=\"modal\" onclick=\"closeFancyBox();\">");
      if (_jspx_meth_spring_005fmessage_005f39(_jspx_page_context))
        return;
      out.write("</button>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t    </div>\n");
      out.write("\t\t    <!-- /.modal-content --> \n");
      out.write("\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t<div id=\"divCopyConfig\" style=\" width:100%; display: none;\" >\n");
      out.write("\t\t\t<div class=\"modal-header padding10\">\n");
      out.write("\t\t            <h4 class=\"modal-title\">");
      if (_jspx_meth_spring_005fmessage_005f40(_jspx_page_context))
        return;
      out.write("</h4>\n");
      out.write("\t\t    </div>\n");
      out.write("\t\t   <div  id=\"copyMessage\" class=\"modal-body padding10 inline-form\">\n");
      out.write("\t\t    </div>\n");
      out.write("\t       \t<div class=\"col-md-12 inline-form no-padding\" style=\"overflow:scroll;height:150px;width:100%;overflow:auto\" id=\"copy_table_grid\">\n");
      out.write("\t\t\t\t\t\t\t<table class=\"table table-hover\" id=\"tblCopyFrom\">\t\n");
      out.write("\t            </table>\n");
      out.write("\t            <table class=\"table table-hover\" id=\"tblCopyTo\">\n");
      out.write("\t        \t \t\n");
      out.write("\t            </table>\n");
      out.write("\t\t        <p>\n");
      out.write("\t\t        \t<i class=\"icon-lightbulb icon-large\"></i><span class=\"note\">");
      if (_jspx_meth_spring_005fmessage_005f41(_jspx_page_context))
        return;
      out.write("</span><br/>\n");
      out.write("\t\t        </p>\n");
      out.write("\t\t\t\t<p>\t\n");
      out.write("\t\t\t\t\t");
      if (_jspx_meth_spring_005fmessage_005f42(_jspx_page_context))
        return;
      out.write("           \t\n");
      out.write("\t\t        </p>\n");
      out.write("\t\t    </div>\n");
      out.write("\t\t    <div id=\"copy-config-buttons-div\" class=\"modal-footer padding10\">\n");
      out.write("\t\t            <button type=\"button\" class=\"btn btn-grey btn-xs \" onclick=\"copyConfig();\" id=\"btncopyConfigPopUp\">");
      if (_jspx_meth_spring_005fmessage_005f43(_jspx_page_context))
        return;
      out.write("</button>\n");
      out.write("\t\t            <button type=\"button\" class=\"btn btn-grey btn-xs \" data-dismiss=\"modal\" id=\"copyConfigCancel\" onclick=\"closeFancyBox();clearSelection();searchInstanceCriteria();\">");
      if (_jspx_meth_spring_005fmessage_005f44(_jspx_page_context))
        return;
      out.write("</button>\n");
      out.write("\t\t            <button type=\"button\" class=\"btn btn-grey btn-xs \" id=\"btnCopyClose\" data-dismiss=\"modal\" onclick=\"closeFancyBox();clearSelection();searchInstanceCriteria();\" style=\"display: none;\">");
      if (_jspx_meth_spring_005fmessage_005f45(_jspx_page_context))
        return;
      out.write("</button>\n");
      out.write("\t\t \t</div>\n");
      out.write("\t\t \t<div id=\"copy-config-progress-bar-div\" class=\"modal-footer padding10 text-left\" style=\"display: none;\">\n");
      out.write("\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/processing-bar.jsp", out, false);
      out.write("\n");
      out.write("\t\t\t</div>\t\n");
      out.write("\t\t    <!-- /.modal-content --> \n");
      out.write("\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t<div id=\"divOffWarn\" style=\" width:100%; display: none;\" >\n");
      out.write("\t\t    <div class=\"modal-content\">\n");
      out.write("\t\t        <div class=\"modal-header padding10\">\n");
      out.write("\t\t            <h4 class=\"modal-title\">");
      if (_jspx_meth_spring_005fmessage_005f46(_jspx_page_context))
        return;
      out.write("</h4>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div class=\"modal-body padding10 inline-form\">\n");
      out.write("\t\t\t        <p>\n");
      out.write("\t\t\t        \t");
      if (_jspx_meth_spring_005fmessage_005f47(_jspx_page_context))
        return;
      out.write("    \n");
      out.write("\t\t\t        </p>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div class=\"modal-footer padding10\">\n");
      out.write("\t\t            <button type=\"button\" class=\"btn btn-grey btn-xs \" data-dismiss=\"modal\" onclick=\"closeFancyBox();clearSelection();\">");
      if (_jspx_meth_spring_005fmessage_005f48(_jspx_page_context))
        return;
      out.write("</button>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t    </div>\n");
      out.write("\t\t    <!-- /.modal-content --> \n");
      out.write("\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t<div id=\"divInactiveWarn\" style=\" width:100%; display: none;\" >\n");
      out.write("\t\t    <div class=\"modal-content\">\n");
      out.write("\t\t        <div class=\"modal-header padding10\">\n");
      out.write("\t\t            <h4 class=\"modal-title\">");
      if (_jspx_meth_spring_005fmessage_005f49(_jspx_page_context))
        return;
      out.write("</h4>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div class=\"modal-body padding10 inline-form\">\n");
      out.write("\t\t\t        <p>\n");
      out.write("\t\t\t        \t");
      if (_jspx_meth_spring_005fmessage_005f50(_jspx_page_context))
        return;
      out.write("    \n");
      out.write("\t\t\t        </p>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div class=\"modal-footer padding10\">\n");
      out.write("\t\t            <button type=\"button\" class=\"btn btn-grey btn-xs \" data-dismiss=\"modal\" onclick=\"closeFancyBox();clearSelection();\">");
      if (_jspx_meth_spring_005fmessage_005f51(_jspx_page_context))
        return;
      out.write("</button>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t    </div>\n");
      out.write("\t\t    <!-- /.modal-content --> \n");
      out.write("\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t<div id=\"divStop\" style=\" width:100%; display: none;\" >\n");
      out.write("\t\t    <div class=\"modal-content\">\n");
      out.write("\t\t        <div class=\"modal-header padding10\">\n");
      out.write("\t\t            <h4 class=\"modal-title\">");
      if (_jspx_meth_spring_005fmessage_005f52(_jspx_page_context))
        return;
      out.write("</h4>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div class=\"modal-body padding10 inline-form\">\n");
      out.write("\t\t\t        <p>\n");
      out.write("\t\t\t        \t<i class=\"icon-lightbulb icon-large\"></i><span class=\"note\">");
      if (_jspx_meth_spring_005fmessage_005f53(_jspx_page_context))
        return;
      out.write("</span><br/>\n");
      out.write("\t\t\t        </p>\n");
      out.write("\t\t\t\t\t<p>\t\n");
      out.write("\t\t\t\t\t\t");
      if (_jspx_meth_spring_005fmessage_005f54(_jspx_page_context))
        return;
      out.write("           \t\n");
      out.write("\t\t\t        </p>\n");
      out.write("\t\t\t        <p id=\"stop-msgMismatch\" style=\"display: none;\">\t  \n");
      out.write("\t\t\t\t\t\t<strong>");
      if (_jspx_meth_spring_005fmessage_005f55(_jspx_page_context))
        return;
      out.write("</strong>         \t\n");
      out.write("\t\t\t        </p>\n");
      out.write("\t\t\t        <p>\n");
      out.write("\t\t\t        \t<strong>");
      if (_jspx_meth_spring_005fmessage_005f56(_jspx_page_context))
        return;
      out.write("</strong>\n");
      out.write("\t\t\t        </p>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div id=\"stop-buttons-div\" class=\"modal-footer padding10\">\n");
      out.write("\t\t            <button id=\"btn_stopyes\" type=\"button\" class=\"btn btn-grey btn-xs \" onclick=\"stopInstance();\">");
      if (_jspx_meth_spring_005fmessage_005f57(_jspx_page_context))
        return;
      out.write("</button>\n");
      out.write("\t\t            <button id=\"btn_stopno\" type=\"button\" class=\"btn btn-grey btn-xs \" data-dismiss=\"modal\" onclick=\"searchInstanceCriteria(); closeFancyBox();\">");
      if (_jspx_meth_spring_005fmessage_005f58(_jspx_page_context))
        return;
      out.write("</button>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div id=\"stop-progress-bar-div\" class=\"modal-footer padding10 text-left\" style=\"display: none;\">\n");
      out.write("\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/processing-bar.jsp", out, false);
      out.write("\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t    </div>\n");
      out.write("\t\t    <!-- /.modal-content --> \n");
      out.write("\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "divStart.jsp", out, false);
      out.write("\n");
      out.write("\t\t\n");
      out.write("\n");
      out.write("\t\t<div style=\"display: none;\">\n");
      out.write("\t\t\t<form id=\"instance_form\" method=\"POST\" action=\"");
      out.print( ControllerConstants.INIT_UPDATE_SERVER_INSTANCE );
      out.write("\">\n");
      out.write("\t\t\t\t<input type=\"hidden\" id=\"serverInstanceId\" name=\"serverInstanceId\">\n");
      out.write("\t\t\t</form>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<form id=\"apply_license_form\" method=\"POST\" action=\"");
      out.print( ControllerConstants.LICENSE_MANAGER );
      out.write("\">\n");
      out.write("\t\t\t\t<input type=\"hidden\" id=\"componentType\" name=\"componentType\"  value=\"");
      out.print(LicenseConstants.LICENSE_ENGINE);
      out.write("\">\n");
      out.write("\t\t\t\t<input type=\"hidden\" id=\"license_intance_id\" name=\"license_server_instance_id\"  value=\"0\">\n");
      out.write("\t\t\t\t<input type=\"hidden\" id=\"license_action\" name=\"licenseAction\"  value=\"\">\n");
      out.write("\t\t\t</form>\n");
      out.write("\t\t</div>\t\n");
      out.write("</div>  \n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t\tvar ckIntanceSelected = new Array();\n");
      out.write("\t\tvar gridDataArr = [];\n");
      out.write("\t\tvar instanceList = {};\n");
      out.write("\n");
      out.write("\t\tvar oldGrid = '';\n");
      out.write("\t\t\n");
      out.write("\t\t$(document).ready(function() {\n");
      out.write("\n");
      out.write("\t\t\t<!-- Search Server Instance -->\n");
      out.write("\n");
      out.write("\t\t\t\t$(\"#instanceList\").jqGrid({\n");
      out.write("\t\t        \turl: \"getServerInstaneList\",\n");
      out.write("\t\t        \tpostData: {\n");
      out.write("\t\t        \t\tserverType: function () {\n");
      out.write("\t\t        \t        return $(\"#search-server-serverType\").val();\n");
      out.write("\t\t   \t    \t\t},\n");
      out.write("\t\t        \t\tinstanceName: function () {\n");
      out.write("\t\t        \t        return $(\"#search-server-instance\").val();\n");
      out.write("\t\t   \t    \t\t},\n");
      out.write("\t\t   \t    \t\thost: function () {\n");
      out.write("\t\t        \t        return $(\"#search-server-host\").val();\n");
      out.write("\t\t   \t    \t\t},\n");
      out.write("\t\t   \t    \t\tserverName: function () {\n");
      out.write("\t\t        \t        return $(\"#search-server-name\").val();\n");
      out.write("\t\t   \t    \t\t},\n");
      out.write("\t\t   \t    \t\tport: function () {\n");
      out.write("\t\t        \t        return $(\"#search-server-instance-port\").val();\n");
      out.write("\t\t   \t    \t\t},\n");
      out.write("\t\t   \t    \t\tsync_status: function () {\n");
      out.write("\t\t        \t        return $(\"input:radio[name='search-server-instance-sync-status']:checked\").val();\n");
      out.write("\t\t   \t    \t\t},\n");
      out.write("\t\t        \t},\n");
      out.write("\t\t            datatype: \"json\",\n");
      out.write("\t\t            colNames:[\"#\",\n");
      out.write("\t\t                      \"");
      if (_jspx_meth_spring_005fmessage_005f59(_jspx_page_context))
        return;
      out.write("\",\n");
      out.write("\t\t                      \"");
      if (_jspx_meth_spring_005fmessage_005f60(_jspx_page_context))
        return;
      out.write("\",\n");
      out.write("\t\t                      \"");
      if (_jspx_meth_spring_005fmessage_005f61(_jspx_page_context))
        return;
      out.write("\",\n");
      out.write("\t\t                      \"");
      if (_jspx_meth_spring_005fmessage_005f62(_jspx_page_context))
        return;
      out.write("\",\n");
      out.write("\t\t                      \"");
      if (_jspx_meth_spring_005fmessage_005f63(_jspx_page_context))
        return;
      out.write("\",\n");
      out.write("\t\t                      \"");
      if (_jspx_meth_spring_005fmessage_005f64(_jspx_page_context))
        return;
      out.write("\",\n");
      out.write("\t\t                      \"");
      if (_jspx_meth_spring_005fmessage_005f65(_jspx_page_context))
        return;
      out.write("\",\n");
      out.write("\t\t                      \"");
      if (_jspx_meth_spring_005fmessage_005f66(_jspx_page_context))
        return;
      out.write("\",\n");
      out.write("\t\t                      \"");
      if (_jspx_meth_spring_005fmessage_005f67(_jspx_page_context))
        return;
      out.write("\",\n");
      out.write("\t\t                      \"");
      if (_jspx_meth_spring_005fmessage_005f68(_jspx_page_context))
        return;
      out.write("\"\n");
      out.write("\t\t                      \n");
      out.write("\t\t                      \n");
      out.write("\t\t                     ],\n");
      out.write("\t\t\t\t\tcolModel:[\n");
      out.write("\t\t\t\t\t\t{name : '',index : '',formatter : checkBoxFormatter,sortable : false,width : '20%'}, \n");
      out.write("\t\t            \t{name:'id',index:'id',sortable:true,hidden: true},\n");
      out.write("\t\t            \t{name:'servername',index:'server.name'},\n");
      out.write("\t\t            \t{name:'serverType',sortable:false,index:'server.type'},\n");
      out.write("\t\t                {name:'instanceName',index:'name',sortable:true, formatter:nameFormatter},\n");
      out.write("\t\t            \t{name:'host',index:'server.ipAddress',sortable:true},\n");
      out.write("\t\t            \t{name:'port',index:'port',align:'center',sortable:true},\n");
      out.write("\t\t            \t{name:'serverStartTime',index:'serverStartTime',sortable:false,formatter:displayServerStartTime,");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("},\n");
      out.write("\t\t            \t{name:'license',index:'license',sortable:false,hidden:true},\n");
      out.write("\t\t            \t{name:'status',index:'state',sortable:false,align:'center',formatter:instanceStateColumnFormatter,");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("},\n");
      out.write("\t\t            \t{name:'syncStatus',index:'isSynced',sortable:false,align:'center',formatter:syncColumnFormatter}\n");
      out.write("\t\t            ],\n");
      out.write("\t\t            rowNum:");
      out.print( MapCache.getConfigValueAsInteger(SystemParametersConstant.TOTAL_ROWS_TO_DISPLAY_IN_GRID, 10) );
      out.write(",\n");
      out.write("\t\t            rowList:[10,20,60,100],\n");
      out.write("\t\t            height: 'auto',\n");
      out.write("\t\t\t\t\tsortname: 'id',\n");
      out.write("\t\t     \t\tsortorder: \"desc\",\n");
      out.write("\t\t            pager: \"#instanceListPagingDiv\",\n");
      out.write("\t\t            viewrecords: true,\n");
      out.write("\t\t           \tmultiselect: false,\n");
      out.write("\t\t            timeout : 120000,\n");
      out.write("\t\t            loadtext: \"Loading...\",\n");
      out.write("\t\t            caption: \"");
      if (_jspx_meth_spring_005fmessage_005f69(_jspx_page_context))
        return;
      out.write("\",\n");
      out.write("\t\t            beforeRequest:function(){\n");
      out.write("\t\t            \tif(oldGrid != ''){\n");
      out.write("\t\t            \t\t$('#instanceList tbody').html(oldGrid);\n");
      out.write("\t\t            \t}\n");
      out.write("\t\t            \t$('#divLoading').dialog({\n");
      out.write("\t\t                    autoOpen: false,\n");
      out.write("\t\t                    width: 90,\n");
      out.write("\t\t                    modal:true,\n");
      out.write("\t\t                    overlay: { opacity: 0.3, background: \"white\" },\n");
      out.write("\t\t                    resizable: false,\n");
      out.write("\t\t                    height: 125,\n");
      out.write("\t\t                });\n");
      out.write("\t\t                $('#divLoading').dialog('open');\n");
      out.write("\t\t                $(\".ui-dialog-titlebar\").hide();\n");
      out.write("\t\t            },\n");
      out.write("\t\t     \t\tloadComplete: function(data) {\n");
      out.write("\t\t     \t\t\t\n");
      out.write("\t\t     \t\t\tgridDataArr = data.rows;\n");
      out.write("\t\t     \t\t\t\n");
      out.write("\t\t     \t\t\t$.each(gridDataArr, function (index, instance) {\n");
      out.write("\t\t     \t\t\t\tinstanceList[instance.id]=instance;\n");
      out.write("\t\t     \t\t\t});\n");
      out.write("\t\t     \t\t\t\n");
      out.write("\t\t     \t\t\t$(\"#divLoading\").dialog('close');\n");
      out.write("\t\t     \t\t\t$(\".ui-dialog-titlebar\").show();\n");
      out.write("\t\t     \t\t\tif ($('#instanceList').getGridParam('records') === 0) {\n");
      out.write("\t\t     \t\t\t\toldGrid = $('#instanceList tbody').html();\n");
      out.write("\t\t                    $('#instanceList tbody').html(\"<div style='padding:6px;background:#D8D8D8;text-align:center;'>");
      if (_jspx_meth_spring_005fmessage_005f70(_jspx_page_context))
        return;
      out.write("</div>\");\n");
      out.write("\t\t                    $(\"#instanceListPagingDiv\").hide();\n");
      out.write("\t\t                }else{\n");
      out.write("\t\t                \t$(\"#instanceListPagingDiv\").show();\n");
      out.write("\t\t                \tckIntanceSelected = new Array();\n");
      out.write("\t\t\t    \t\t\tresizeInstanceGrid();\n");
      out.write("\t\t                }\n");
      out.write("\n");
      out.write("\t\t     \t\t\t$('.checkboxbg').bootstrapToggle();\n");
      out.write("\t\t    \t\t\t\n");
      out.write("\t\t     \t\t\t$('.checkboxbg').change(function(){\n");
      out.write("\t\t    \t\t\t\tinstanceActiveInactiveToggleChanged(this);\n");
      out.write("\t\t    \t\t\t});\n");
      out.write("\t\t     \t\t\t\n");
      out.write("\t\t     \t\t\t// disable all row of jqgrid at start when status will be loaded disabled prop will removed\n");
      out.write("\t\t     \t\t    var $jqgrid = $(\"#instanceList\");      \n");
      out.write("\t\t     \t\t\t$(\".jqgrow\", $jqgrid).each(function (index, row) {\n");
      out.write("\t\t     \t\t        var $row = $(row);\n");
      out.write("\t     \t\t            //Find the checkbox of the row and set it disabled\n");
      out.write("\t     \t\t            //$row.find(\"input:checkbox\").attr(\"disabled\", \"disabled\");\n");
      out.write("\t\t     \t\t    });\n");
      out.write("\t\t     \t\t\t\n");
      out.write("\t\t     \t\t\t// enable checkbox and synch click event for inactive server instance\n");
      out.write(" \t\t     \t\t\t $.each(gridDataArr, function (index, instance) {\n");
      out.write("\t\t     \t\t\t\tif(instance.status='INACTIVE'){\n");
      out.write("\t\t     \t\t\t\t\tvar Checkboxes = $(\"tr#\"+instance.id+\".jqgrow > td > input.cbox:disabled\", \"\");\n");
      out.write("\t\t\t\t\t\t\t//\tCheckboxes.removeAttr(\"disabled\");\n");
      out.write("\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t// enable synch flag click event if has access right than\n");
      out.write("\t\t\t\t\t\t\t\t");
      if (_jspx_meth_sec_005fauthorize_005f6(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t     \t\t\t\t}\n");
      out.write("\t\t     \t\t\t\t\n");
      out.write("\t\t     \t\t\t});  \n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tonPaging: function (pgButton) {\n");
      out.write("\t\t\t\t\t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t\t\t\tclearInstanceGrid();\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tloadError : function(xhr,st,err) {\n");
      out.write("\t\t\t\t\t\thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tbeforeSelectRow: function (rowid, e){\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\trecordtext: \"");
      if (_jspx_meth_spring_005fmessage_005f71(_jspx_page_context))
        return;
      out.write("\",\n");
      out.write("\t\t\t        emptyrecords: \"");
      if (_jspx_meth_spring_005fmessage_005f72(_jspx_page_context))
        return;
      out.write("\",\n");
      out.write("\t\t\t\t\tloadtext: \"");
      if (_jspx_meth_spring_005fmessage_005f73(_jspx_page_context))
        return;
      out.write("\",\n");
      out.write("\t\t\t\t\tpgtext : \"");
      if (_jspx_meth_spring_005fmessage_005f74(_jspx_page_context))
        return;
      out.write("\"\n");
      out.write("\t\t\t\t}).navGrid(\"#staffListPagingDiv\",{edit:false,add:false,del:false,search:false});\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t$(\".ui-jqgrid-titlebar\").hide();\n");
      out.write("\t\t\t\tresizeInstanceGrid();\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\tfunction checkBoxFormatter(cellvalue, options, rowObject) {\t\t\n");
      out.write("\t\t\treturn \"\";\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction addRowId(elementId,serverId)\n");
      out.write("\t\t{\n");
      out.write("\t\t\tvar deviceElement = document.getElementById(elementId);\n");
      out.write("\t\t\tif (deviceElement.checked) {\n");
      out.write("\t\t\t\tif((ckIntanceSelected.indexOf(serverId)) == -1){\n");
      out.write("\t\t\t\t\tckIntanceSelected.push(serverId);\n");
      out.write("\t\t\t\t}\t\t\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\tif(ckIntanceSelected.indexOf(serverId) !== -1){\n");
      out.write("\t\t\t\t\tckIntanceSelected.splice(ckIntanceSelected.indexOf(serverId), 1);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction instanceActiveInactiveToggleChanged(element){\n");
      out.write("\t\t\tvar toggleId = $(element).prop('id');\n");
      out.write("\t\t\tvar id_status  = toggleId.split(\"_\");\n");
      out.write("\t\t\tvar id = id_status[0];\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tvar rowId = id;\n");
      out.write("\t\t\tvar serverIP= jQuery('#instanceList').jqGrid ('getCell',rowId, 'host' );\n");
      out.write("\t\t\tvar serverPort = jQuery('#instanceList').jqGrid ('getCell', rowId, 'port');\n");
      out.write("\t\t\tvar serverInstance = $(jQuery('#instanceList').jqGrid ('getCell', rowId, 'instanceName')).closest(\"a\").html();\n");
      out.write("\n");
      out.write("\t\t\tif(id_status[1]=='INACTIVE'){\n");
      out.write("\t\t\t\t$(\"#btnStop\").hide();\n");
      out.write("\t\t\t\t$(\"#btnRestart\").hide();\n");
      out.write("\t\t\t\t$(\"#btnStart\").show();\n");
      out.write("\t\t\t\t$(\"#divStartStopInstance .modal-title\").html(\"");
      if (_jspx_meth_spring_005fmessage_005f75(_jspx_page_context))
        return;
      out.write("\");\n");
      out.write("\t\t\t\t$('#stopNote').hide();\n");
      out.write("\t\t\t}else if(id_status[1]=='ACTIVE'){\n");
      out.write("\t\t\t\t$(\"#btnStop\").show();\n");
      out.write("\t\t\t\t$(\"#btnRestart\").show();\n");
      out.write("\t\t\t\t$(\"#btnStart\").hide();\n");
      out.write("\t\t\t\t$(\"#divStartStopInstance .modal-title\").html(\"");
      if (_jspx_meth_spring_005fmessage_005f76(_jspx_page_context))
        return;
      out.write("\");\n");
      out.write("\t\t\t\t$('#stopNote').show();\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tckIntanceSelected = new Array();\n");
      out.write("\t\t\tckIntanceSelected[0]=id;\n");
      out.write("\t\t\t$(\"#divStartStopInstance #lblInstance\").text(serverInstance);\n");
      out.write("\t\t\t$(\"#divStartStopInstance #lblServerIp\").text(serverIP);\n");
      out.write("\t\t\t$(\"#divStartStopInstance #lblPort\").text(serverPort);\n");
      out.write("\t\t\t$(\"#divStartStopInstance #synchronize\").click();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\"#startstop\").click();\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction instanceStateColumnFormatter(cellvalue, options, rowObject){\n");
      out.write("\t\t\tvar status = rowObject[\"status\"];\n");
      out.write("\t\t\tif(status=='INACTIVE'){\n");
      out.write("\t\t\t\t$('#license_'+rowObject[\"id\"]).html('-');\n");
      out.write("\t\t\t\t$('#serverStartTime_'+rowObject[\"id\"]).html('-');\n");
      out.write("\t\t\t\treturn '<div id=\"loader_'+rowObject[\"id\"]+'\"><img src=\"img/chk_sts.ico\" width=\"20px\" data-toggle=\"tooltip\" id=\"'+rowObject[\"id\"]+'_CHECK\" data-placement=\"bottom\" title=\"'+jsLocaleMsg.chkStatus+'\" height=\"20px\" class=\"\"chkStatus style=\"z-index:100px;cursor:pointer;\" onclick=\"chkStatusPopup(\\''+rowObject[\"id\"]+'\\',\\'SERVER_MANAGEMENT\\');\"></div>'\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\tvar toggleId = rowObject[\"id\"] + \"_\" + cellvalue;\n");
      out.write("\t\t\t\tloadInstanceStatus(rowObject);\n");
      out.write("\t\t\t\treturn '<div id=\"loader_'+rowObject[\"id\"]+'\"><img src=\"img/preloaders/circle-red.gif\" width=\"20px\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"'+jsLocaleMsg.loadStatus+'\" height=\"20px\" style=\"z-index:100px;\"></div>';\t\t\t\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t function displayLicenseDetails(cellvalue, options, rowObject){\n");
      out.write("\t\t\t return '<div id=\"license_'+rowObject[\"id\"]+'\" align=\"center\"><img src=\"img/preloaders/circle-red.gif\" width=\"20px\" data-toggle=\"tooltip\"   data-placement=\"bottom\" title=\"'+jsLocaleMsg.loadStatus+'\" height=\"20px\" style=\"z-index:100px;\"></div>';\n");
      out.write("\t\t }\n");
      out.write("\t\t \n");
      out.write("\t\t function displayServerStartTime(cellvalue, options, rowObject){\n");
      out.write("\t\t\t return '<div id=\"serverStartTime_'+rowObject[\"id\"]+'\" align=\"center\"><img src=\"img/preloaders/circle-red.gif\" width=\"20px\" data-toggle=\"tooltip\"   data-placement=\"bottom\" title=\"'+jsLocaleMsg.loadStatus+'\" height=\"20px\" style=\"z-index:100px;\"></div>';\n");
      out.write("\t\t }\n");
      out.write("\t\t\n");
      out.write("\t\tfunction nameFormatter(cellvalue, options, rowObject){\n");
      out.write("\t\t\tvar status = rowObject[\"status\"];\n");
      out.write("\t\t\tvar serverDetailDivId = rowObject[\"host\"] +\"_\"+ rowObject[\"port\"] + \"_detail_lnk\";\n");
      out.write("\t\t\t");
      if (_jspx_meth_sec_005fauthorize_005f7(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t");
      if (_jspx_meth_sec_005fauthorize_005f8(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction syncColumnFormatter(cellvalue, options, rowObject){\n");
      out.write("\t\t\treturn '';\t\t\t\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction searchInstanceCriteria(){\n");
      out.write("\t\t\tclearResponseMsgDiv();\n");
      out.write("\t\t\tclearInstanceGrid();\n");
      out.write("\t\t\tvar $grid = $(\"#instanceList\");\n");
      out.write("\t\t\t$grid.jqGrid('setGridParam',{datatype:'json',page: 1}).trigger('reloadGrid');\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\tfunction resetSearchInstanceCriteria(){\n");
      out.write("\t\t\t$(\"#search-server-instance\").val('');\n");
      out.write("\t\t\t$(\"#search-server-name\").val('');\n");
      out.write("\t\t\t$(\"#search-server-host\").val('');\n");
      out.write("\t\t\t$(\"#search-server-instance-port\").val('');\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$('input:radio[name=search-server-instance-status]').each(function () { $(this).prop('checked', false); });\n");
      out.write("\t\t\t$('input:radio[name=search-server-instance-sync-status]').each(function () { $(this).prop('checked', false); });\n");
      out.write("\t\t\tsearchInstanceCriteria();\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction clearInstanceGrid(){\n");
      out.write("\t\t\tvar $grid = $(\"#instanceList\");\n");
      out.write("\t\t\tvar rowIds = $grid.jqGrid('getDataIDs');\n");
      out.write("\t\t\t// iterate through the rows and delete each of them\n");
      out.write("\t\t\tfor(var i=0,len=rowIds.length;i<len;i++){\n");
      out.write("\t\t\t\tvar currRow = rowIds[i];\n");
      out.write("\t\t\t\t$grid.jqGrid('delRowData', currRow);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction resizeInstanceGrid(){\n");
      out.write("\t\t\tvar $grid = $(\"#instanceList\"),\n");
      out.write("\t\t    newWidth = $grid.closest(\".ui-jqgrid\").parent().width();\n");
      out.write("\t \t    if(newWidth < 1000){\n");
      out.write("\t\t    \tnewWidth = 800;\n");
      out.write("\t\t    }\n");
      out.write("\t\t    //$grid.jqGrid(\"setGridWidth\", newWidth, true);\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction reloadConfigPopup(){\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\t$('#reload-config-buttons-div #btn-no').attr('onclick','closeFancyBox();searchInstanceCriteria();');\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif(ckIntanceSelected.length == 0){\n");
      out.write("\t\t\t\t$(\"#lessWarn\").show();\n");
      out.write("\t\t\t\t$(\"#moreWarn\").hide();\n");
      out.write("\t\t\t\t$(\"#message\").click();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}else if(ckIntanceSelected.length > 1){\n");
      out.write("\t\t\t\t$(\"#lessWarn\").hide();\n");
      out.write("\t\t\t\t$(\"#moreWarn\").show();\n");
      out.write("\t\t\t\t$(\"#message\").click();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\tvar state = checkInstanceState(ckIntanceSelected[0]);\n");
      out.write("\t\t\t\tif(state=='ACTIVE'){\n");
      out.write("\t\t\t\t\t$(\"#reloadconfig\").click();\t\n");
      out.write("\t\t\t\t\tvar instance = instanceList[ckIntanceSelected[0]];\n");
      out.write("\n");
      out.write("\t\t\t\t\tif(instance['syncStatus']==false)\n");
      out.write("\t\t\t\t\t\t$('#reload-config-msgMismatch').show();\n");
      out.write("\t\t\t\t\telse\n");
      out.write("\t\t\t\t\t\t$('#reload-config-msgMismatch').hide();\n");
      out.write("\t\t\t\t} else if(state=='CHECK') {\n");
      out.write("\t\t\t\t\t$(\"#inactivewarn\").click();\n");
      out.write("\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t$(\"#offwarn\").click();\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction softRestartPopup(){\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\t$('#soft-restart-buttons-div #btn-no').attr('onclick','closeFancyBox();searchInstanceCriteria();');\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif(ckIntanceSelected.length == 0){\n");
      out.write("\t\t\t\t$(\"#lessWarn\").show();\n");
      out.write("\t\t\t\t$(\"#moreWarn\").hide();\n");
      out.write("\t\t\t\t$(\"#message\").click();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}else if(ckIntanceSelected.length > 1){\n");
      out.write("\t\t\t\t$(\"#lessWarn\").hide();\n");
      out.write("\t\t\t\t$(\"#moreWarn\").show();\n");
      out.write("\t\t\t\t$(\"#message\").click();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\tvar state = checkInstanceState(ckIntanceSelected[0]);\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\tif(state=='ACTIVE'){\n");
      out.write("\t\t\t\t\t// find from instance list to get current synch status because on each synch we reload grid so will get latest status\n");
      out.write("\t\t\t\t\tvar instance = instanceList[ckIntanceSelected[0]];\n");
      out.write("\n");
      out.write("\t\t\t\t\tif(instance['syncStatus']==false)\n");
      out.write("\t\t\t\t\t\t$('#soft-restart-msgMismatch').show();\n");
      out.write("\t\t\t\t\telse\n");
      out.write("\t\t\t\t\t\t$('#soft-restart-msgMismatch').hide();\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t$(\"#softrestart\").click();\t\n");
      out.write("\t\t\t\t}else if(state=='CHECK') {\n");
      out.write("\t\t\t\t\t$(\"#inactivewarn\").click();\n");
      out.write("\t\t\t\t} else\n");
      out.write("\t\t\t\t\t$(\"#offwarn\").click();\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction syncPublishPopup(){\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\t$('#sync-publish-buttons-div #btn-no').attr('onclick','closeFancyBox();searchInstanceCriteria();');\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif(ckIntanceSelected.length == 0){\n");
      out.write("\t\t\t\t$(\"#lessWarn\").show();\n");
      out.write("\t\t\t\t$(\"#moreWarn\").hide();\n");
      out.write("\t\t\t\t$(\"#message\").click();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}else if(ckIntanceSelected.length > 1){\n");
      out.write("\t\t\t\t$(\"#lessWarn\").hide();\n");
      out.write("\t\t\t\t$(\"#moreWarn\").show();\n");
      out.write("\t\t\t\t$(\"#message\").click();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\t$(\"#syncPublish\").click();\t\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction reloadCachePopup(){\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\t$('#reload-cache-buttons-div #btn-no').attr('onclick','closeFancyBox();searchInstanceCriteria();');\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif(ckIntanceSelected.length == 0){\n");
      out.write("\t\t\t\t$(\"#lessWarn\").show();\n");
      out.write("\t\t\t\t$(\"#moreWarn\").hide();\n");
      out.write("\t\t\t\t$(\"#message\").click();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}else if(ckIntanceSelected.length > 1){\n");
      out.write("\t\t\t\t$(\"#lessWarn\").hide();\n");
      out.write("\t\t\t\t$(\"#moreWarn\").show();\n");
      out.write("\t\t\t\t$(\"#message\").click();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\tvar state = checkInstanceState(ckIntanceSelected[0]);\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\tif(state=='ACTIVE'){\n");
      out.write("\t\t\t\t\t// find from instance list to get current synch status because on each synch we reload grid so will get latest status\n");
      out.write("\t\t\t\t\tvar instance = instanceList[ckIntanceSelected[0]];\n");
      out.write("\n");
      out.write("\t\t\t\t\tif(instance['syncStatus']==false)\n");
      out.write("\t\t\t\t\t\t$('#reload-cache-msgMismatch').show();\n");
      out.write("\t\t\t\t\telse\n");
      out.write("\t\t\t\t\t\t$('#reload-cache-msgMismatch').hide();\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t$(\"#reloadcache\").click();\t\n");
      out.write("\t\t\t\t} else if(state=='CHECK') {\n");
      out.write("\t\t\t\t\t$(\"#inactivewarn\").click();\n");
      out.write("\t\t\t\t} else\n");
      out.write("\t\t\t\t\t$(\"#offwarn\").click();\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\tfunction startPopup(){\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$('#start-buttons-div #btn-no').attr('onclick','closeFancyBox();searchInstanceCriteria();');\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t// find from instance list to get current synch status because on each synch we reload grid so will get latest status\n");
      out.write("\t\t\tvar instance = instanceList[ckIntanceSelected[0]];\n");
      out.write("\t\t\tif(instance['syncStatus']==false)\n");
      out.write("\t\t\t\t$('#start-msgMismatch').show();\n");
      out.write("\t\t\telse\n");
      out.write("\t\t\t\t$('#start-msgMismatch').hide();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\"#start\").click();\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction stopPopup(){\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\t$(\"#stop\").click();\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction synchronizePopup(){\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\t$(\"#btnSynchPopup\").show();\n");
      out.write("\t\t\t$(\"#btnSynchCancel\").show();\n");
      out.write("\t\t\t$(\"#btnSynchClose\").hide();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tvar tableString ='<table class=\"table table-hover\" style=\"width:100%\">';\n");
      out.write("\t\t\tif(ckIntanceSelected.length == 0){\n");
      out.write("\t\t\t\t$(\"#lessWarn\").show();\n");
      out.write("\t\t\t\t$(\"#moreWarn\").hide();\n");
      out.write("\t\t\t\t$(\"#message\").click();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tvar rowId='',serverIP='',serverPort='',serverInstance='';\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif(ckIntanceSelected.length >0){\n");
      out.write("\t\t\t\ttableString += \"<tr>\";\n");
      out.write("\t\t\t\ttableString += \"<th>");
      if (_jspx_meth_spring_005fmessage_005f77(_jspx_page_context))
        return;
      out.write("</th>\";\n");
      out.write("\t\t\t\ttableString += \"<th>");
      if (_jspx_meth_spring_005fmessage_005f78(_jspx_page_context))
        return;
      out.write("</th>\";\n");
      out.write("\t\t\t\ttableString += \"<th>");
      if (_jspx_meth_spring_005fmessage_005f79(_jspx_page_context))
        return;
      out.write("</th>\";\n");
      out.write("\t\t\t\ttableString += \"<th class='status'>");
      if (_jspx_meth_spring_005fmessage_005f80(_jspx_page_context))
        return;
      out.write("</th>\";\n");
      out.write("\t\t\t\ttableString += \"</tr>\";\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tfor(var index=0;index<ckIntanceSelected.length;index++){\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\trowId = ckIntanceSelected[index];\n");
      out.write("\t\t\t\tserverIP= jQuery('#instanceList').jqGrid ('getCell',rowId, 'host' );\n");
      out.write("\t\t\t\tserverPort = jQuery('#instanceList').jqGrid ('getCell', rowId, 'port');\n");
      out.write("\t\t\t\tserverInstance = $(jQuery('#instanceList').jqGrid ('getCell', rowId, 'instanceName')).closest(\"a\").html();\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\ttableString += \"<tr>\";\n");
      out.write("\t\t\t\ttableString += \"<td>\"+serverInstance+\"</td>\";\n");
      out.write("\t\t\t\ttableString += \"<td>\"+serverIP+\"</td>\";\n");
      out.write("\t\t\t\ttableString += \"<td>\"+serverPort+\"</td>\";\n");
      out.write("\t\t\t\ttableString += \"<td class='status' id='res_\"+rowId+\"'></td>\";\n");
      out.write("\t\t\t\ttableString += \"</tr>\";\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\ttableString += \"</table>\"\n");
      out.write("\t\t\t$(\"#divInstanceList\").html(tableString);\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$('.status').hide();\n");
      out.write("\t\t\t$('#divSyncMsg').html('');\n");
      out.write("\t\t\t$(\"#synchronize\").click();\n");
      out.write("\n");
      out.write("\t\t\t// set instnce id to synchronize\n");
      out.write("\t\t\t$(\"#syncInstanceId\").val(rowId);\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction synchInstanceById(id){\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\t$(\"#btnSynchPopup\").show();\n");
      out.write("\t\t\t$(\"#btnSynchCancel\").show();\n");
      out.write("\t\t\t$(\"#btnSynchClose\").hide();\n");
      out.write("\t\t\t\n");
      out.write("\t        var rowData = jQuery(\"#instanceList\").getRowData(id); \n");
      out.write("\t        var ch = jQuery(\"#instanceList\").find('#'+id+' input[type=checkbox]').prop('checked',true);\n");
      out.write("\t\t\t\n");
      out.write("\t        ckIntanceSelected[0] = id;\n");
      out.write("\t\t\tvar rowId = ckIntanceSelected[0];\n");
      out.write("\t\t\tvar serverIP= jQuery('#instanceList').jqGrid ('getCell',id, 'host' );\n");
      out.write("\t\t\tvar serverPort = jQuery('#instanceList').jqGrid ('getCell', id, 'port');\n");
      out.write("\t\t\tvar serverInstance = $(jQuery('#instanceList').jqGrid ('getCell', id, 'instanceName')).closest(\"a\").html();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\"#divInstanceList\").html('');\n");
      out.write("\t\t\tvar tableString ='<table class=\"table table-hover\" style=\"width:100%\">';\n");
      out.write("\t\t\ttableString += \"<tr>\";\n");
      out.write("\t\t\ttableString += \"<th>");
      if (_jspx_meth_spring_005fmessage_005f81(_jspx_page_context))
        return;
      out.write("</th>\";\n");
      out.write("\t\t\ttableString += \"<th>");
      if (_jspx_meth_spring_005fmessage_005f82(_jspx_page_context))
        return;
      out.write("</th>\";\n");
      out.write("\t\t\ttableString += \"<th>");
      if (_jspx_meth_spring_005fmessage_005f83(_jspx_page_context))
        return;
      out.write("</th>\";\n");
      out.write("\t\t\ttableString += \"<th class='status'>");
      if (_jspx_meth_spring_005fmessage_005f84(_jspx_page_context))
        return;
      out.write("</th>\";\n");
      out.write("\t\t\ttableString += \"</tr>\";\n");
      out.write("\t\t\ttableString += \"<tr>\";\n");
      out.write("\t\t\ttableString += \"<td>\"+serverInstance+\"</td>\";\n");
      out.write("\t\t\ttableString += \"<td>\"+serverIP+\"</td>\";\n");
      out.write("\t\t\ttableString += \"<td>\"+serverPort+\"</td>\";\n");
      out.write("\t\t\ttableString += \"<td class='status' id='res_\"+rowId+\"'></td>\";\n");
      out.write("\t\t\ttableString += \"</tr>\";\n");
      out.write("\t\t\ttableString += \"</table>\"\n");
      out.write("\t\t\t$(\"#divInstanceList\").html(tableString);\n");
      out.write("\t\t\t$('.status').hide();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$('#divSyncMsg').html('');\n");
      out.write("\t\t\t$(\"#synchronize\").click();\n");
      out.write("\n");
      out.write("\t\t\t// set instnce id to synchronize\n");
      out.write("\t\t\t$(\"#syncInstanceId\").val(id);\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction exportConfigPopup(){\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\tif(ckIntanceSelected.length == 0){\n");
      out.write("\t\t\t\t$(\"#lessWarn\").show();\n");
      out.write("\t\t\t\t$(\"#moreWarn\").hide();\n");
      out.write("\t\t\t\t$(\"#message\").click();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}else if(ckIntanceSelected.length > 1){\n");
      out.write("\t\t\t\t$(\"#lessWarn\").hide();\n");
      out.write("\t\t\t\t$(\"#moreWarn\").show();\n");
      out.write("\t\t\t\t$(\"#message\").click();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tvar state = checkInstanceState(ckIntanceSelected[0]);\n");
      out.write("\t\t\t\tif(state=='CHECK'){\n");
      out.write("\t\t\t\t\t$(\"#inactivewarn\").click();\n");
      out.write("\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t// set instance id which is selected for import to submit with form\n");
      out.write("\t\t\t\t$(\"#exportInstancesId\").val(ckIntanceSelected[0]);\n");
      out.write("\t\t\t\t$(\"#isExportForDelete\").val(false);\n");
      out.write("\t\t\t\t$(\"#REQUEST_ACTION_TYPE\").val('");
      out.print(BaseConstants.SERVER_MANAGEMENT);
      out.write("');\n");
      out.write("\t\t\t\t$(\"#exportPath\").val(\"\");\n");
      out.write("\t\t\t\t$(\"#export-config-form\").submit();\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction copyConfigPopup(){\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\t$(\"#copyMessage\").html('');\n");
      out.write("\t\t\t$(\"#btncopyConfigPopUp\").hide();\n");
      out.write("\t\t\t$(\"#copyConfigCancel\").show();\n");
      out.write("\t\t\t$(\"#btnCopyClose\").hide();\n");
      out.write("\t\t\tif(ckIntanceSelected.length == 0){\n");
      out.write("\t\t\t\t$(\"#lessWarn\").show();\n");
      out.write("\t\t\t\t$(\"#moreWarn\").hide();\n");
      out.write("\t\t\t\t$(\"#message\").click();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}else if(ckIntanceSelected.length > 1){\n");
      out.write("\t\t\t\t$(\"#lessWarn\").hide();\n");
      out.write("\t\t\t\t$(\"#moreWarn\").show();\n");
      out.write("\t\t\t\t$(\"#message\").click();\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t}else{\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tvar state = checkInstanceState(ckIntanceSelected[0]);\n");
      out.write("\t\t\t\tif(state=='CHECK'){\n");
      out.write("\t\t\t\t\t$(\"#inactivewarn\").click();\n");
      out.write("\t\t\t\t\treturn;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t$(\"#tblCopyFrom\").html('');\n");
      out.write("\t\t\t\t$(\"#tblCopyTo\").html('');\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tvar data =  jQuery(\"#instanceList\").jqGrid('getRowData');\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tvar gridData = jQuery(\"#instanceList\").jqGrid('getRowData', ckIntanceSelected[0]);\n");
      out.write("\t\t\t\tvar instanceName = $(jQuery('#instanceList').jqGrid ('getCell', ckIntanceSelected[0], 'instanceName')).closest(\"a\").html()\n");
      out.write("\t\t\t\t$(\"#copy-config-progress-bar-div\").show();\n");
      out.write("\t\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\turl: 'getAllInstancesByServerType',\n");
      out.write("\t\t\t\t\tcache: false,\n");
      out.write("\t\t\t\t\tasync: true,\n");
      out.write("\t\t\t\t\tdataType:'json',\n");
      out.write("\t\t\t\t\ttype:'POST',\n");
      out.write("\t\t\t\t\tdata:\n");
      out.write("\t\t\t\t\t {\n");
      out.write("\t\t\t\t\t\t\"serverInstanceId\" : gridData.id\n");
      out.write("\t\t\t\t\t}, \n");
      out.write("\t\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t\t\tvar responseCode = response.code; \n");
      out.write("\t\t\t\t\t\tvar responseMsg = response.msg; \n");
      out.write("\t\t\t\t\t\tvar responseObject = response.object;\n");
      out.write("\t\t\t\t\t\t$(\"#copy-config-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\t$(\"#btncopyConfigPopUp\").show();\n");
      out.write("\t\t\t\t\t\tvar copyFromBody = \"<table class='table table-hover table-bordered'  border='1' style='overflow: auto;height:200px;' ><thead><tr><th width='20%'>");
      if (_jspx_meth_spring_005fmessage_005f85(_jspx_page_context))
        return;
      out.write("</th><th width='20%'>");
      if (_jspx_meth_spring_005fmessage_005f86(_jspx_page_context))
        return;
      out.write("</th><th width='20%'>");
      if (_jspx_meth_spring_005fmessage_005f87(_jspx_page_context))
        return;
      out.write("</th><th width='40%'>");
      if (_jspx_meth_spring_005fmessage_005f88(_jspx_page_context))
        return;
      out.write("</th></tr></tr></thead>\";\n");
      out.write("\t\t\t\t\t\tcopyFromBody+= \"<tr><td><input id ='\"+gridData.host+\"_\"+instanceName+\"_chkbox\"+\"'type='checkbox' checked value='\"+gridData.id+\"'/></td><td>\"+instanceName+\"</td><td>\"+gridData.host+\"</td><td>\"+gridData.port + \"</td><td></td></tr>\";\n");
      out.write("\t\t\t\t\t\tcopyFromBody+= \" </table>\";\n");
      out.write("\t\t\t\t\t\t$(\"#tblCopyFrom\").html(copyFromBody);\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\tvar copyToBody = \"<table class='table table-hover table-bordered'  border='1' ><thead><tr><th width='20%'>");
      if (_jspx_meth_spring_005fmessage_005f89(_jspx_page_context))
        return;
      out.write("</th><th width='20%'>");
      if (_jspx_meth_spring_005fmessage_005f90(_jspx_page_context))
        return;
      out.write("</th><th width='20%'>");
      if (_jspx_meth_spring_005fmessage_005f91(_jspx_page_context))
        return;
      out.write("</th><th width='20%'>");
      if (_jspx_meth_spring_005fmessage_005f92(_jspx_page_context))
        return;
      out.write("</th><th class='status' width='20%'>");
      if (_jspx_meth_spring_005fmessage_005f93(_jspx_page_context))
        return;
      out.write("</th></tr></thead>\";\t\n");
      out.write("\t\t\t\t\t\tif(responseCode == \"200\"){\n");
      out.write("\t\t\t\t\t\t\t$.each(responseObject, function(index, responseObject) {\n");
      out.write("\t\t\t\t\t\t\t\tif(responseObject.id != ckIntanceSelected[0]){\n");
      out.write("\t\t\t\t\t\t\t\t\tcopyToBody+=\"<tr><td><input id ='\"+responseObject.server.ipAddress+\"_\"+responseObject.name+\"_chkbox\"+\"'type='checkbox' value='\"+responseObject.id+\"' onchange='clearMessage();'/></td><td>\"+responseObject.name+\"</td><td>\"+responseObject.server.ipAddress+\"</td><td>\"+responseObject.port + \"</td><td class='status' id='status_\"+responseObject.id+\"'></td></tr>\";\n");
      out.write("\t\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t    });\n");
      out.write("\t\t\t\t\t\t\tcopyToBody+=\"</table>\";\n");
      out.write("\t\t\t\t\t\t\t$(\".status\").hide();\n");
      out.write("\t\t\t\t\t\t\t$(\"#tblCopyTo\").html(copyToBody);\n");
      out.write("\t\t\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t\t\tshowErrorMsgPopUp(responseMsg);\n");
      out.write("\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t\t\thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t$('#copyconfig').click();\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction synchInstanceById(id){\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\t$(\"#btnSynchPopup\").show();\n");
      out.write("\t\t\t$(\"#btnSynchCancel\").show();\n");
      out.write("\t\t\t$(\"#btnSynchClose\").hide();\n");
      out.write("\t\t\t\n");
      out.write("\t        var rowData = jQuery(\"#instanceList\").getRowData(id); \n");
      out.write("\t        var ch = jQuery(\"#instanceList\").find('#'+id+' input[type=checkbox]').prop('checked',true);\n");
      out.write("\t\t\t\n");
      out.write("\t        ckIntanceSelected[0] = id;\n");
      out.write("\t\t\tvar rowId = ckIntanceSelected[0];\n");
      out.write("\t\t\tvar serverIP= jQuery('#instanceList').jqGrid ('getCell',id, 'host' );\n");
      out.write("\t\t\tvar serverPort = jQuery('#instanceList').jqGrid ('getCell', id, 'port');\n");
      out.write("\t\t\tvar serverInstance = $(jQuery('#instanceList').jqGrid ('getCell', id, 'instanceName')).closest(\"a\").html();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\"#divInstanceList\").html('');\n");
      out.write("\t\t\tvar tableString ='<table class=\"table table-hover\" style=\"width:100%\">';\n");
      out.write("\t\t\ttableString += \"<tr>\";\n");
      out.write("\t\t\ttableString += \"<th>");
      if (_jspx_meth_spring_005fmessage_005f94(_jspx_page_context))
        return;
      out.write("</th>\";\n");
      out.write("\t\t\ttableString += \"<th>");
      if (_jspx_meth_spring_005fmessage_005f95(_jspx_page_context))
        return;
      out.write("</th>\";\n");
      out.write("\t\t\ttableString += \"<th>");
      if (_jspx_meth_spring_005fmessage_005f96(_jspx_page_context))
        return;
      out.write("</th>\";\n");
      out.write("\t\t\ttableString += \"<th class='status'>");
      if (_jspx_meth_spring_005fmessage_005f97(_jspx_page_context))
        return;
      out.write("</th>\";\n");
      out.write("\t\t\ttableString += \"</tr>\";\n");
      out.write("\t\t\ttableString += \"<tr>\";\n");
      out.write("\t\t\ttableString += \"<td>\"+serverInstance+\"</td>\";\n");
      out.write("\t\t\ttableString += \"<td>\"+serverIP+\"</td>\";\n");
      out.write("\t\t\ttableString += \"<td>\"+serverPort+\"</td>\";\n");
      out.write("\t\t\ttableString += \"<td class='status' id='res_\"+rowId+\"'></td>\";\n");
      out.write("\t\t\ttableString += \"</tr>\";\n");
      out.write("\t\t\ttableString += \"</table>\"\n");
      out.write("\t\t\t$(\"#divInstanceList\").html(tableString);\n");
      out.write("\t\t\t$('.status').hide();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$('#divSyncMsg').html('');\n");
      out.write("\t\t\t$(\"#synchronize\").click();\n");
      out.write("\n");
      out.write("\t\t\t// set instnce id to synchronize\n");
      out.write("\t\t\t$(\"#syncInstanceId\").val(id);\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\tfunction synchronizesInstance(){\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\"#synch-buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#synch-progress-bar-div\").show();\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t// generate SI state string to pass\n");
      out.write("\t\t\tvar instanceStatus=\"\";\n");
      out.write("\t\t\t$.each(ckIntanceSelected, function(key,val){\n");
      out.write("\t\t\t\tinstanceStatus += checkInstanceState(val) + \",\";\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tinstanceStatus = instanceStatus.substring(0,instanceStatus.length-1);\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\turl: '");
      out.print( ControllerConstants.SYNC_SERVER_INSTANCE );
      out.write("',\n");
      out.write(" \t\t\t\t    cache: false,\n");
      out.write(" \t\t\t\t\tasync: true,\n");
      out.write(" \t\t\t\t\tdataType: 'json',\n");
      out.write(" \t\t\t\t\ttype: \"POST\",\n");
      out.write(" \t\t\t\t\tdata: {\n");
      out.write(" \t\t\t\t\t\tserverInstanceId: ckIntanceSelected.join(),\n");
      out.write(" \t\t\t\t\t\tserverInstancesStatus:instanceStatus\n");
      out.write(" \t\t\t\t\t},\n");
      out.write(" \t\t\t\t\tsuccess: function(data){\n");
      out.write(" \t\t\t\t\n");
      out.write(" \t\t\t\t\t\t$(\"#synch-buttons-div\").show();\n");
      out.write(" \t\t\t\t\t\t$(\"#synch-progress-bar-div\").hide();\n");
      out.write(" \t\t\t\t\t\tvar response = eval(data);\n");
      out.write(" \t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write(" \t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t\t    \t\n");
      out.write(" \t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write(" \t\t\t\t    \t\t\n");
      out.write(" \t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write(" \t\t\t\t    \t\tclearResponseMsg();\n");
      out.write(" \t\t\t\t    \t\tclearErrorMsg();\n");
      out.write(" \t\t\t\t    \t\tckIntanceSelected = new Array();\n");
      out.write(" \t\t\t\t    \t\tvar responseCode = data.code;\n");
      out.write(" \t\t\t\t    \t\t$('#divSyncMsg').html('<span class=\"title\" style=\"color:black;font-weight:bolder\">'+response.msg+'</span>');\n");
      out.write(" \t\t\t\t    \t\t\n");
      out.write("\t\t\t    \t\t\tvar response = data.object;\n");
      out.write("\t\t\t    \t\t\t$.each(response, function(key,val){\n");
      out.write("\t\t\t    \t\t\t\tvar resObj =val;\n");
      out.write("\t\t\t    \t\t\t\tif(resObj.code == \"700\") {\n");
      out.write("\t\t\t    \t\t\t\t\t$('#res_'+key).text(resObj.msg+\" Click the link to Configure Path \");\n");
      out.write("\t\t\t    \t\t\t\t\t$('#res_'+key).append(\"<form method='post' action='initSystemAgentConfig' id='configurePakStatisticsPath_\"+key+\"'><input type='hidden' name='agent_serverInstanceId' value='\"+key+\"'></input><a href='#' onclick='parentNode.submit()' >Configure</a></form>\");\n");
      out.write("\t\t\t    \t\t\t\t} else if (resObj.code == \"701\") {\n");
      out.write("\t\t\t    \t\t\t\t\t$('#res_'+key).text(resObj.msg+\" Click the link to Configure DataSource \");\t\t\t    \t\t\t\t\t\n");
      out.write("\t\t\t    \t\t\t\t\t$('#res_'+key).append(\"<form method='post' action='initUpdateServerInstance' id='configureDataSource_\"+key+\"'><input type='hidden' name='serverInstanceId' value='\"+key+\"'></input><input type='hidden' name='REQUEST_ACTION_TYPE' value='UPDATE_INSTANCE_ADVANCE_CONFIG'></input><a href='#' onclick='parentNode.submit()' >Configure</a></form>\");\n");
      out.write("\t\t\t    \t\t\t\t}else if(resObj.code == \"702\") {\n");
      out.write("\t\t\t    \t\t\t\t\t$('#res_'+key).text(resObj.msg+\" Click the link to Configure License Circle \");\n");
      out.write("\t\t\t    \t\t\t\t\t$('#res_'+key).append(\"<form method='get' action='initCircleConfigurationManager'><a href='#' onclick='parentNode.submit()' >Configure</a></form>\");\n");
      out.write("\t\t\t    \t\t\t\t}else {\n");
      out.write("\t\t\t    \t\t\t\t\t$('#res_'+key).text(resObj.msg);\n");
      out.write("\t\t\t    \t\t\t\t}\n");
      out.write("\t\t\t    \t\t\t});\n");
      out.write("\t\t\t    \t\t\t$(\".status\").show();\n");
      out.write("\t\t\t    \t\t\t$(\"#btnSynchPopup\").hide();\n");
      out.write("\t\t\t    \t\t\t$(\"#btnSynchCancel\").hide();\n");
      out.write("\t\t\t    \t\t\t$(\"#btnSynchClose\").show();\n");
      out.write("\t\t\t    \t\t\t$(\"#synchronizePopUpMsgDiv\").hide();\n");
      out.write("\t\t\t    \t\t\t$(\".synchronizePopUpMsgClass\").empty();\n");
      out.write("\t\t\t    \t\t\t$(\"#synchronizePopUpMsg\").hide();\n");
      out.write(" \t\t\t\t    \t\t\n");
      out.write(" \t\t\t\t    \t}else{\n");
      out.write(" \n");
      out.write(" \t\t\t\t    \t\t$('#divSyncMsg').html('<span class=\"title\" style=\"color: #FF0000;\">'+response.msg+'</span>');\n");
      out.write(" \t\t\t\t    \t}\n");
      out.write(" \t\t\t\t\t},\n");
      out.write(" \t\t\t\t    error: function (xhr,st,err){\n");
      out.write(" \t\t\t\t    \t$(\"#synch-buttons-div\").show();\n");
      out.write("\t \t\t\t\t\t$(\"#synch-progress-bar-div\").hide();\n");
      out.write(" \t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write(" \t\t\t\t\t}\n");
      out.write(" \t\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction softRestartInstance(){\n");
      out.write("\t\t\t$(\"#soft-restart-buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#soft-restart-progress-bar-div\").show();\n");
      out.write("\t\t\t$(\"#buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#progress-bar-div\").show();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\turl: '");
      out.print( ControllerConstants.SOFT_RESTART_INSTANCE );
      out.write("',\n");
      out.write(" \t\t\t\t    cache: false,\n");
      out.write(" \t\t\t\t\tasync: true,\n");
      out.write(" \t\t\t\t\tdataType: 'json',\n");
      out.write(" \t\t\t\t\ttype: \"POST\",\n");
      out.write(" \t\t\t\t\tdata: {\n");
      out.write(" \t\t\t\t\t\tid: ckIntanceSelected.join()\n");
      out.write(" \t\t\t\t\t},\n");
      out.write(" \t\t\t\t\tsuccess: function(data){\n");
      out.write(" \t\t\t\t\t\t$(\"#soft-restart-buttons-div\").show();\n");
      out.write(" \t\t\t\t\t\t$(\"#soft-restart-progress-bar-div\").hide();\n");
      out.write(" \t\t\t\t\t\t$(\"#buttons-div\").show();\n");
      out.write(" \t\t\t\t\t\t$(\"#progress-bar-div\").hide();\n");
      out.write(" \t\t\t\t\t\tvar response = eval(data);\n");
      out.write(" \t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write(" \t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t\t    \t\n");
      out.write(" \t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write(" \t\t\t\t    \t\tresetSearchInstanceCriteria();\n");
      out.write(" \t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write(" \t\t\t\t    \t\tclearResponseMsg();\n");
      out.write(" \t\t\t\t    \t\tclearErrorMsg();\n");
      out.write(" \t\t\t\t    \t\tshowSuccessMsg(response.msg);\n");
      out.write(" \t\t\t\t    \t\tckIntanceSelected = new Array();\n");
      out.write(" \t\t\t\t    \t\tcloseFancyBox();\n");
      out.write(" \t\t\t\t    \t\tclearSelection();\n");
      out.write(" \t\t\t\t    \t}else{\n");
      out.write(" \t\t\t\t    \t\tshowErrorMsgPopUp(response.msg);\n");
      out.write("\t\t\t\t    \t\tclearSelection();\n");
      out.write(" \t\t\t\t    \t}\n");
      out.write(" \t\t\t\t\t},\n");
      out.write(" \t\t\t\t    error: function (xhr,st,err){\n");
      out.write(" \t\t\t\t    \t$(\"#soft-restart-buttons-div\").show();\n");
      out.write(" \t\t\t\t\t\t$(\"#soft-restart-progress-bar-div\").hide();\n");
      out.write(" \t\t\t\t\t\t$(\"#buttons-div\").show();\n");
      out.write(" \t\t\t\t\t\t$(\"#progress-bar-div\").hide();\n");
      out.write(" \t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write(" \t\t\t\t\t}\n");
      out.write(" \t\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction syncPublishInstance(){\n");
      out.write("\t\t\t$(\"#sync-publish-buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#sync-publish-progress-bar-div\").show();\n");
      out.write("\t\t\t$(\"#buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#progress-bar-div\").show();\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\tvar instanceId = ckIntanceSelected.join();\n");
      out.write("\t\t\tif(instanceId!=undefined && instanceId!=\"\"){\n");
      out.write("\t\t\t\t$(\"#syncPublishInstanceId\").val(instanceId);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\turl: '");
      out.print( ControllerConstants.SYNC_PUBLISH_INSTANCE );
      out.write("',\n");
      out.write(" \t\t\t\t    cache: false,\n");
      out.write(" \t\t\t\t\tasync: true,\n");
      out.write(" \t\t\t\t\tdataType: 'json',\n");
      out.write(" \t\t\t\t\ttype: \"POST\",\n");
      out.write(" \t\t\t\t\tdata: {\n");
      out.write(" \t\t\t\t\t\tid: $(\"#syncPublishInstanceId\").val(),\n");
      out.write(" \t\t\t\t\t\tdescription : $(\"#descSyncPublish\").val(),\n");
      out.write(" \t\t\t\t\t\tserverInstancesStatus:'ACTIVE'\n");
      out.write(" \t\t\t\t\t},\n");
      out.write(" \t\t\t\t\tsuccess: function(data){\n");
      out.write(" \t\t\t\t\t\t$(\"#sync-publish-buttons-div\").show();\n");
      out.write(" \t\t\t\t\t\t$(\"#sync-publish-progress-bar-div\").hide();\n");
      out.write(" \t\t\t\t\t\t$(\"#buttons-div\").show();\n");
      out.write(" \t\t\t\t\t\t$(\"#progress-bar-div\").hide();\n");
      out.write(" \t\t\t\t\t\tvar response = eval(data);\n");
      out.write(" \t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write(" \t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write(" \t\t\t\t    \t$(\"#descSyncPublish\").val(\"\");\n");
      out.write(" \t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write(" \t\t\t\t    \t\tresetSearchInstanceCriteria();\n");
      out.write(" \t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write(" \t\t\t\t    \t\tclearResponseMsg();\n");
      out.write(" \t\t\t\t    \t\tclearErrorMsg();\n");
      out.write(" \t\t\t\t    \t\tshowSuccessMsg(response.msg);\n");
      out.write(" \t\t\t\t    \t\tckIntanceSelected = new Array();\n");
      out.write(" \t\t\t\t    \t\tcloseFancyBox();\n");
      out.write(" \t\t\t\t    \t\tclearSelection();\n");
      out.write(" \t\t\t\t    \t}else{\n");
      out.write(" \t\t\t\t    \t\tshowErrorMsgPopUp(response.msg);\n");
      out.write("\t\t\t\t    \t\tclearSelection();\n");
      out.write(" \t\t\t\t    \t}\n");
      out.write(" \t\t\t\t\t},\n");
      out.write(" \t\t\t\t    error: function (xhr,st,err){\n");
      out.write(" \t\t\t\t    \t$(\"#sync-publish-buttons-div\").show();\n");
      out.write(" \t\t\t\t\t\t$(\"#sync-publish-progress-bar-div\").hide();\n");
      out.write(" \t\t\t\t\t\t$(\"#buttons-div\").show();\n");
      out.write(" \t\t\t\t\t\t$(\"#progress-bar-div\").hide();\n");
      out.write(" \t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write(" \t\t\t\t\t}\n");
      out.write(" \t\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction reloadConfig(){\n");
      out.write("\t\t\t$(\"#reload-config-buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#reload-config-progress-bar-div\").show();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl: '");
      out.print( ControllerConstants.SERVER_INSTANCE_RELOAD_CONFIG );
      out.write("',\n");
      out.write("\t\t\t\t    cache: false,\n");
      out.write("\t\t\t\t\tasync: true,\n");
      out.write("\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t\tid: ckIntanceSelected.join()\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\t$(\"#reload-config-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#reload-config-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write("\t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t    \t\n");
      out.write("\t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write("\t\t\t\t    \t\tresetSearchInstanceCriteria();\n");
      out.write("\t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t\t    \t\tclearResponseMsg();\n");
      out.write("\t\t\t\t    \t\tclearErrorMsg();\n");
      out.write("\t\t\t\t    \t\tshowSuccessMsg(response.msg);\n");
      out.write("\t\t\t\t    \t\tckIntanceSelected = new Array();\n");
      out.write("\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t\tclearSelection();\n");
      out.write("\t\t\t\t    \t}else{\n");
      out.write("\t\t\t\t    \t\tshowErrorMsg(response.msg);\n");
      out.write("\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t\tclearSelection();\n");
      out.write("\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t    \t$(\"#reload-config-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#reload-config-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction stopInstance(){\n");
      out.write("\t\t\t$(\"#stop-buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#stop-progress-bar-div\").show();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl: '");
      out.print( ControllerConstants.STOP_SERVER_INSTANCE );
      out.write("',\n");
      out.write("\t\t\t\t    cache: false,\n");
      out.write("\t\t\t\t\tasync: true,\n");
      out.write("\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\t\ttimeout : 15000,\n");
      out.write("\t\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t\tid: ckIntanceSelected.join()\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\t$(\"#stop-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#stop-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write("\t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t    \t\n");
      out.write("\t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write("\t\t\t\t    \t\t//resetSearchInstanceCriteria();\n");
      out.write("\t\t\t\t    \t\tsearchInstanceCriteria();\n");
      out.write("\t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t\t    \t\tclearResponseMsg();\n");
      out.write("\t\t\t\t    \t\tclearErrorMsg();\n");
      out.write("\t\t\t\t    \t\tshowSuccessMsg(response.msg);\n");
      out.write("\t\t\t\t    \t\tckIntanceSelected = new Array();\n");
      out.write("\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t\tclearSelection();\n");
      out.write("\t\t\t\t    \t}else{\n");
      out.write("\t\t\t\t    \t\tshowErrorMsg(response.msg);\n");
      out.write("\t\t\t\t\t\t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t\tclearSelection();\n");
      out.write("\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t    \tif(st == \"timeout\"){\n");
      out.write("\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t\tresetSearchInstanceCriteria();\n");
      out.write("\t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t\t    \t\tclearResponseMsg();\n");
      out.write("\t\t\t\t    \t\tclearErrorMsg();\n");
      out.write("\t\t\t\t    \t\tshowSuccessMsg(\"A shutdown call has been initiated to the server it should update in a while,if not try reloading the page to view the changes.\");\n");
      out.write("\t\t\t\t    \t\t$.ajax({\n");
      out.write("\t\t\t\t\t\t\t\turl: '");
      out.print( ControllerConstants.STOP_SERVER_INSTANCE );
      out.write("',\n");
      out.write("\t\t\t\t\t\t\t\t    cache: false,\n");
      out.write("\t\t\t\t\t\t\t\t\tasync: true,\n");
      out.write("\t\t\t\t\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\t\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\t\t\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t\t\t\t\t\tid: ckIntanceSelected.join()\n");
      out.write("\t\t\t\t\t\t\t\t\t},\n");
      out.write("\t\t\t\t\t\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\t\t\t\t\t$(\"#stop-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t\t\t\t\t$(\"#stop-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t\t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write("\t\t\t\t\t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t\t\t\t\t    \t\n");
      out.write("\t\t\t\t\t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write("\t\t\t\t\t\t\t\t    \t\t//resetSearchInstanceCriteria();\n");
      out.write("\t\t\t\t\t\t\t\t    \t\tsearchInstanceCriteria();\n");
      out.write("\t\t\t\t\t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t\t\t\t\t\t    \t\tclearResponseMsg();\n");
      out.write("\t\t\t\t\t\t\t\t    \t\tclearErrorMsg();\n");
      out.write("\t\t\t\t\t\t\t\t    \t\tshowSuccessMsg(response.msg);\n");
      out.write("\t\t\t\t\t\t\t\t    \t\tckIntanceSelected = new Array();\n");
      out.write("\t\t\t\t\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t\t\t\t\t    \t\tclearSelection();\n");
      out.write("\t\t\t\t\t\t\t\t    \t}else{\n");
      out.write("\t\t\t\t\t\t\t\t    \t\tshowErrorMsg(response.msg);\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tcloseFancyBox();\n");
      out.write("\t\t\t\t\t\t\t\t    \t\tclearSelection();\n");
      out.write("\t\t\t\t\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t\t\t\t\t},\n");
      out.write("\t\t\t\t\t\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t\t\t\t\t    \t$(\"#stop-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t\t\t\t\t$(\"#stop-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t    \t}\n");
      out.write("\t\t\t\t    \t$(\"#stop-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#stop-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction startInstance(){\n");
      out.write("\t\t\t$(\"#start-buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#stop-progress-bar-div\").show();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl: '");
      out.print( ControllerConstants.START_SERVER_INSTANCE );
      out.write("',\n");
      out.write("\t\t\t\t    cache: false,\n");
      out.write("\t\t\t\t\tasync: true,\n");
      out.write("\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t\tid: ckIntanceSelected.join()\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\t$(\"#start-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#stop-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write("\t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t    \t\n");
      out.write("\t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write("\t\t\t\t    \t\t//resetSearchInstanceCriteria();\n");
      out.write("\t\t\t\t    \t\tsearchInstanceCriteria();\n");
      out.write("\t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t\t    \t\tclearResponseMsg();\n");
      out.write("\t\t\t\t    \t\tclearErrorMsg();\n");
      out.write("\t\t\t\t    \t\tshowSuccessMsg(response.msg);\n");
      out.write("\t\t\t\t    \t\tckIntanceSelected = new Array();\n");
      out.write("\t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t\tclearSelection();\n");
      out.write("\t\t\t\t    \t}else{\n");
      out.write("\t\t\t\t    \t\t$('#'+ckIntanceSelected.join()+'_INACTIVE').bootstrapToggle('off');\n");
      out.write("\t\t\t\t    \t\tshowErrorMsgPopUp(response.msg);\n");
      out.write("\t\t\t\t    \t\t$(\"#btnStart\").hide();\n");
      out.write("\t\t\t\t    \t\t$(\"#startNote\").hide();\t\t\t\t    \t\t\n");
      out.write("\t\t\t\t    \t\tclearSelection();\n");
      out.write("\t\t\t\t    \t}\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t    \t$(\"#start-buttons-div\").show();\n");
      out.write("\t\t\t\t\t\t$(\"#start-progress-bar-div\").hide();\n");
      out.write("\t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction clearSelection(){\n");
      out.write("\t\t\tvar grid = $(\"#instanceList\");\n");
      out.write("\t\t\tvar rowIds = grid.getDataIDs();\n");
      out.write("\t\t\t// iterate through the rows and deselect each of them\n");
      out.write("\t\t\tfor(var i=0,len=rowIds.length;i< len;i++){\n");
      out.write("\t\t\t\tjQuery(\"#instanceList\").find('#'+rowIds[i]+' input[type=checkbox]').prop('checked',false);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tckIntanceSelected = new Array();\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction checkInstanceState(rowId){\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif($(jQuery('#instanceList').jqGrid ('getCell', rowId, 'status')).find(\".checkboxbg\").length > 0){\n");
      out.write("\t\t\t\treturn $(jQuery('#instanceList').jqGrid ('getCell', rowId, 'status')).find(\".checkboxbg\").prop('id').split('_')[1];\t\n");
      out.write("\t\t\t} else {\n");
      out.write("\t\t\t\treturn $(jQuery('#instanceList').jqGrid ('getCell', rowId, 'status')).find(\"img\").prop('id').split('_')[1];\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction restartInstance(){\n");
      out.write("\t\t\t$(\"#buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#progress-bar-div\").show();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\turl: '");
      out.print( ControllerConstants.RESTART_SERVER_INSTANCE );
      out.write("',\n");
      out.write(" \t\t\t\t    cache: false,\n");
      out.write(" \t\t\t\t\tasync: true,\n");
      out.write(" \t\t\t\t\tdataType: 'json',\n");
      out.write(" \t\t\t\t\ttype: \"POST\",\n");
      out.write(" \t\t\t\t\ttimeout : 15000,\n");
      out.write(" \t\t\t\t\tdata: {\n");
      out.write(" \t\t\t\t\t\tid: ckIntanceSelected.join()\n");
      out.write(" \t\t\t\t\t},\n");
      out.write(" \t\t\t\t\tsuccess: function(data){\n");
      out.write(" \t\t\t\t\t\t$(\"#buttons-div\").show();\n");
      out.write(" \t\t\t\t\t\t$(\"#progress-bar-div\").hide();\n");
      out.write(" \t\t\t\t\t\tvar response = eval(data);\n");
      out.write(" \t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write(" \t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\n");
      out.write(" \t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write(" \t\t\t\t    \t\t//resetSearchInstanceCriteria();\n");
      out.write(" \t\t\t\t    \t\tsearchInstanceCriteria();\n");
      out.write(" \t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write(" \t\t\t\t    \t\tclearResponseMsg();\n");
      out.write(" \t\t\t\t    \t\tclearErrorMsg();\n");
      out.write(" \t\t\t\t    \t\tshowSuccessMsg(response.msg);\n");
      out.write(" \t\t\t\t    \t\tckIntanceSelected = new Array();\n");
      out.write(" \t\t\t\t    \t\tcloseFancyBox();\n");
      out.write(" \t\t\t\t    \t\tclearSelection();\n");
      out.write(" \t\t\t\t    \t}else{\n");
      out.write(" \t\t\t\t    \t\t$('#'+ckIntanceSelected.join()+'_ACTIVE').bootstrapToggle('off');\n");
      out.write(" \t\t\t\t    \t\t$('#'+ckIntanceSelected.join()+'_ACTIVE').attr('id',ckIntanceSelected.join()+'_INACTIVE');\n");
      out.write(" \t\t\t\t    \t\tshowErrorMsgPopUp(response.msg);\n");
      out.write("\t\t\t\t    \t\t$(\"#btnStart\").hide();\n");
      out.write("\t\t\t\t    \t\t$(\"#startNote\").hide();\t\t\t\t    \t\t\n");
      out.write(" \t\t\t\t    \t\t/* closeFancyBox(); */\n");
      out.write("\t\t\t\t    \t\tclearSelection();\n");
      out.write(" \t\t\t\t    \t}\n");
      out.write(" \t\t\t\t\t},\n");
      out.write(" \t\t\t\t    error: function (xhr,st,err){\n");
      out.write(" \t\t\t\t    \tif(st == \"timeout\"){\n");
      out.write(" \t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write(" \t\t\t\t    \t\tclearResponseMsg();\n");
      out.write(" \t\t\t\t    \t\tclearErrorMsg();\n");
      out.write(" \t\t\t\t    \t\tcloseFancyBox();\n");
      out.write(" \t\t\t\t    \t\tclearSelection();\n");
      out.write(" \t\t\t\t    \t\tshowSuccessMsg(\"A restart call has been initiated to the server it should update in a while,if not try reloading the page to view the changes.\");\n");
      out.write(" \t\t\t\t    \t\t$.ajax({\n");
      out.write(" \t\t\t\t\t\t\t\turl: '");
      out.print( ControllerConstants.RESTART_SERVER_INSTANCE );
      out.write("',\n");
      out.write(" \t\t\t \t\t\t\t    cache: false,\n");
      out.write(" \t\t\t \t\t\t\t\tasync: true,\n");
      out.write(" \t\t\t \t\t\t\t\tdataType: 'json',\n");
      out.write(" \t\t\t \t\t\t\t\ttype: \"POST\",\n");
      out.write(" \t\t\t \t\t\t\t\tdata: {\n");
      out.write(" \t\t\t \t\t\t\t\t\tid: ckIntanceSelected.join()\n");
      out.write(" \t\t\t \t\t\t\t\t},\n");
      out.write(" \t\t\t \t\t\t\t\tsuccess: function(data){\n");
      out.write(" \t\t\t \t\t\t\t\t\t$(\"#buttons-div\").show();\n");
      out.write(" \t\t\t \t\t\t\t\t\t$(\"#progress-bar-div\").hide();\n");
      out.write(" \t\t\t \t\t\t\t\t\tvar response = eval(data);\n");
      out.write(" \t\t\t \t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write(" \t\t\t \t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\n");
      out.write(" \t\t\t \t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write(" \t\t\t \t\t\t\t    \t\t//resetSearchInstanceCriteria();\n");
      out.write(" \t\t\t \t\t\t\t    \t\tsearchInstanceCriteria();\n");
      out.write(" \t\t\t \t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write(" \t\t\t \t\t\t\t    \t\tclearResponseMsg();\n");
      out.write(" \t\t\t \t\t\t\t    \t\tclearErrorMsg();\n");
      out.write(" \t\t\t \t\t\t\t    \t\tshowSuccessMsg(response.msg);\n");
      out.write(" \t\t\t \t\t\t\t    \t\tckIntanceSelected = new Array();\n");
      out.write(" \t\t\t \t\t\t\t    \t\tcloseFancyBox();\n");
      out.write(" \t\t\t \t\t\t\t    \t\tclearSelection();\n");
      out.write(" \t\t\t \t\t\t\t    \t}else{\n");
      out.write(" \t\t\t \t\t\t\t    \t\t$('#'+ckIntanceSelected.join()+'_ACTIVE').bootstrapToggle('off');\n");
      out.write(" \t\t\t \t\t\t\t    \t\t$('#'+ckIntanceSelected.join()+'_ACTIVE').attr('id',ckIntanceSelected.join()+'_INACTIVE');\n");
      out.write(" \t\t\t \t\t\t\t    \t\tshowErrorMsgPopUp(response.msg);\n");
      out.write(" \t\t\t\t\t\t\t    \t\t$(\"#btnStart\").hide();\n");
      out.write(" \t\t\t\t\t\t\t    \t\t$(\"#startNote\").hide();\t\t\t\t    \t\t\n");
      out.write(" \t\t\t \t\t\t\t    \t\t/* closeFancyBox(); */\n");
      out.write(" \t\t\t\t\t\t\t    \t\tclearSelection();\n");
      out.write(" \t\t\t \t\t\t\t    \t}\n");
      out.write(" \t\t\t \t\t\t\t\t},\n");
      out.write(" \t\t\t \t\t\t\t    error: function (xhr,st,err){\n");
      out.write(" \t\t\t \t\t\t\t\t\t$(\"#buttons-div\").show();\n");
      out.write(" \t\t\t \t\t\t\t\t\t$(\"#progress-bar-div\").hide();\n");
      out.write(" \t\t\t \t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write(" \t\t\t \t\t\t\t\t}\n");
      out.write(" \t\t\t \t\t\t\t});\n");
      out.write(" \t\t\t\t    \t}\n");
      out.write(" \t\t\t\t    \t\n");
      out.write(" \t\t\t\t\t\t$(\"#buttons-div\").show();\n");
      out.write(" \t\t\t\t\t\t$(\"#progress-bar-div\").hide();\n");
      out.write(" \t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write(" \t\t\t\t\t}\n");
      out.write(" \t\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\tfunction copyConfig(){\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tvar copyToIds=\"\";\n");
      out.write("\t\t\tvar copyFromId=\"\";\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tvar copyFromRes = $(\"#tblCopyFrom tr:has(:checked)\");\n");
      out.write("\t\t\tvar result = $(\"#tblCopyTo tr:has(:checked)\");\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tif(result.length<1){\n");
      out.write("\t\t\t\t$(\"#lessWarn\").show();\n");
      out.write("\t\t\t\t$(\"#moreWarn\").hide();\n");
      out.write("\t\t\t\t$(\"#copyMessage\").html(\"");
      if (_jspx_meth_spring_005fmessage_005f98(_jspx_page_context))
        return;
      out.write("\");\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t} else if(copyFromRes.length<1){\n");
      out.write("\t\t\t\t$(\"#lessWarn\").show();\n");
      out.write("\t\t\t\t$(\"#moreWarn\").hide();\n");
      out.write("\t\t\t\t$(\"#copyMessage\").html(\"");
      if (_jspx_meth_spring_005fmessage_005f99(_jspx_page_context))
        return;
      out.write("\");\n");
      out.write("\t\t\t\treturn;\n");
      out.write("\t\t\t} else{\n");
      out.write("\t\t\t\t$(\"#copy-config-buttons-div\").hide();\n");
      out.write("\t\t\t\t$(\"#copy-config-progress-bar-div\").show();\n");
      out.write("\t\t\t\tvar valuesFrom = $('#tblCopyFrom tr input:checked').map(function() {\n");
      out.write("\t\t\t        return this.value;\n");
      out.write("\t\t\t    }).get();\n");
      out.write("\t\t\t\tcopyFromId=valuesFrom.toString();\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tvar values = $('#tblCopyTo tr input:checked').map(function() {\n");
      out.write("\t\t\t        return this.value;\n");
      out.write("\t\t\t    }).get();\n");
      out.write("\t\t\t\tcopyToIds=values.toString();\n");
      out.write("\t\t\t \n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t $.ajax({\n");
      out.write("\t\t\t\turl: '");
      out.print( ControllerConstants.COPY_SERVER_INSTANCE_CONFIG );
      out.write("',\n");
      out.write("\t\t\t\t    cache: false,\n");
      out.write("\t\t\t\t\tasync: true,\n");
      out.write("\t\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t\tcopyFromId: copyFromId,\n");
      out.write("\t\t\t\t\t\tcopyToIds: copyToIds\n");
      out.write("\t\t\t\t\t},\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t\t$(\"#copy-config-buttons-div\").show();\n");
      out.write(" \t\t\t\t\t\t$(\"#copy-config-progress-bar-div\").hide();\n");
      out.write(" \t\t\t\t\t\tvar response = eval(data);\n");
      out.write(" \t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write(" \t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write(" \t\t\t\t    \t\n");
      out.write("\t\t\t\t    \t\n");
      out.write(" \t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write(" \t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write(" \t\t\t\t    \t\tclearResponseMsg();\n");
      out.write(" \t\t\t\t    \t\tclearErrorMsg();\n");
      out.write(" \t\t\t\t    \t\tckIntanceSelected = new Array();\n");
      out.write(" \t\t\t\t    \t\t//closeFancyBox();\n");
      out.write(" \t\t\t\t    \t\tclearSelection();\n");
      out.write(" \t\t\t\t    \t\t$('#copyMessage').html('<span class=\"title\" style=\"color:black;font-weight:bolder\">'+response.msg+'</span>');\n");
      out.write(" \t\t\t\t    \t\t\n");
      out.write("\t\t\t\t\t\t\tvar responseCode = data.code;\n");
      out.write(" \t\t\t\t    \t\t\n");
      out.write("\t\t\t    \t\t\tvar response = data.object;\n");
      out.write("\t\t\t    \t\t\t$.each(response, function(key,val){\n");
      out.write("\t\t\t    \t\t\t\tvar resObj =val;\n");
      out.write("\t\t\t    \t\t\t    $('#status_'+key).text(resObj.msg);\n");
      out.write("\t\t\t    \t\t\t});\n");
      out.write("\t\t\t    \t\t\t$(\".status\").show();\n");
      out.write("\t\t\t    \t\t\t$(\"#btncopyConfigPopUp\").hide();\n");
      out.write("\t\t\t    \t\t\t$(\"#copyConfigCancel\").hide();\n");
      out.write("\t\t\t    \t\t\t$(\"#btnCopyClose\").show();\n");
      out.write("\t\t\t    \t\t\t\n");
      out.write(" \t\t\t\t    \t}else{\n");
      out.write(" \t\t\t\t    \t\t$('#copyMessage').html('<span class=\"title\" style=\"color:#FF0000;\">'+response.msg+'</span>');\n");
      out.write(" \t\t\t\t    \t\tshowErrorMsg(response.msg);\n");
      out.write(" \t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t\tclearSelection();\n");
      out.write(" \t\t\t\t    \t}\n");
      out.write(" \t\t\t\t\t},\n");
      out.write(" \t\t\t\t    error: function (xhr,st,err){\n");
      out.write(" \t\t\t\t\t\t$(\"#buttons-div\").show();\n");
      out.write(" \t\t\t\t\t\t$(\"#progress-bar-div\").hide();\n");
      out.write(" \t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write(" \t\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write(" \t\t\t\t\t});\n");
      out.write(" \t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tfunction clearMessage(){\n");
      out.write("\t\t\t$(\"#copyMessage\").html('');\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\n");
      out.write("\t\t\n");
      out.write("\t\tfunction goToApplyLicense(serverInstanceId, licenseAction){\n");
      out.write("\t\t\t $('#license_intance_id').val(serverInstanceId);\n");
      out.write("\t\t\t $('#license_action').val(licenseAction);\n");
      out.write("\t\t\t $(\"#apply_license_form\").submit();\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\tfunction loadInstanceStatus(rowObject){\n");
      out.write("\t\t\tvar serverInstanceId = rowObject[\"id\"];\n");
      out.write("\t\t\tvar syncDivId = rowObject[\"host\"] +\"_\"+ rowObject[\"port\"] + \"_sync_btn\";\n");
      out.write("\t\t\tclearErrorMsg2();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\turl: 'loadServerInstanceStatus',\n");
      out.write("\t\t\t\tcache: false,\n");
      out.write("\t\t\t\tasync: true,\n");
      out.write("\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t\"serverInstanceId\": serverInstanceId\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\tsuccess: function(data){ \n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t\t\tvar responseObject = response.object;\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tvar instanceStatus = responseObject.status;\n");
      out.write("\t\t\t\t\tvar toggleId = serverInstanceId + \"_\" + instanceStatus;\n");
      out.write("\t\t\t\t\tvar toggleIdDiv = rowObject[\"host\"] +\"_\"+ rowObject[\"port\"] + \"_toggle_btn\";\n");
      out.write("\t\t\t\t\tvar syncDivId = rowObject[\"host\"] +\"_\"+ rowObject[\"port\"] + \"_sync_btn\";\n");
      out.write("\t\t\t\t\tif(rowObject[\"syncStatus\"] == false){\n");
      out.write("\t\t\t\t\t\t$(\"#\"+serverInstanceId).find('td[aria-describedby=\"instanceList_syncStatus\"]').html('<div id=\"'+syncDivId+'\"><img id=\"synch_'+rowObject[\"id\"]+'\" src=\"img/orange.png\" style=\"cursor: pointer;disabled:false\" onclick =\"synchInstanceById('+\"'\" + rowObject[\"id\"]+ \"'\"+')\" /></div>');\n");
      out.write("\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t$(\"#\"+serverInstanceId).find('td[aria-describedby=\"instanceList_syncStatus\"]').html('<div id=\"'+syncDivId+'\"><img id=\"synch_'+rowObject[\"id\"]+'\" src=\"img/grey.png\" style=\"cursor: pointer;disabled:true\"/></div>');\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t$(\"#\"+serverInstanceId).find('td[aria-describedby=\"instanceList_\"]').html(\"<input type='checkbox' name='\"+rowObject[\"host\"]+\"_\"+rowObject[\"port\"]+\"_chkbox\"+\"' id='\"+rowObject[\"host\"]+\"_\"+rowObject[\"port\"]+\"_chkbox\"+\"' style='cursor:pointer;disabled:true' onclick=\\\"addRowId(\\'\"+rowObject[\"host\"]+\"_\"+rowObject[\"port\"]+\"_chkbox\"+\"\\', \\'\"+rowObject[\"id\"]+\"\\')\\\"; />\");\n");
      out.write("\t\t\t\t\tvar chkboxId= rowObject[\"host\"]+\"_\"+rowObject[\"port\"]+\"_chkbox\";\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"\"+chkboxId).disabled= false;\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tif(response.code == '200'){\n");
      out.write("\t\t\t\t\t\tif(instanceStatus == 'ACTIVE'){\n");
      out.write("\t\t\t\t\t\t\t");
      if (_jspx_meth_sec_005fauthorize_005f9(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t\t\t\t\t");
      if (_jspx_meth_sec_005fauthorize_005f10(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t \t\t\t}else{\n");
      out.write("\t\t\t \t\t\t\t");
      if (_jspx_meth_sec_005fauthorize_005f11(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t \t\t\t\t");
      if (_jspx_meth_sec_005fauthorize_005f12(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t \t\t\t}\n");
      out.write("\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t");
      if (_jspx_meth_sec_005fauthorize_005f13(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t\t\t\t");
      if (_jspx_meth_sec_005fauthorize_005f14(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tvar licenseAction =  responseObject.licenseAction;\n");
      out.write("\t\t\t\t\tvar licenseDuration =  responseObject.licenseDuration;\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tvar activationLink;\n");
      out.write("\t\t\t\t\tvar startTimeLink;\n");
      out.write("\t\t\t\t\tif(licenseDuration == 'Registered'){\n");
      out.write("\t\t\t\t\t\tactivationLink = \"<span>\"+licenseDuration+\"</span>\";\n");
      out.write("\t\t\t\t\t}else if(licenseDuration == 'Trial'){\n");
      out.write("\t\t\t\t\t\tactivationLink = \"<a href='#' class='link' onclick=goToApplyLicense('\"+serverInstanceId+\"','\"+licenseAction+\"')>\"+licenseDuration+\"</a>\";\n");
      out.write("\t\t\t\t\t}else if(licenseDuration == 'Upload'){\n");
      out.write("\t\t\t\t\t\tactivationLink = \"<a href='#' class='link' onclick=goToApplyLicense('\"+serverInstanceId+\"','\"+licenseAction+\"')>\"+licenseDuration+\"</a>\";\n");
      out.write("\t\t\t\t\t}else if(licenseDuration == 'NO_LICENSE' ){\n");
      out.write("\t\t\t\t\t\tactivationLink = \"<span  title='");
      if (_jspx_meth_spring_005fmessage_005f100(_jspx_page_context))
        return;
      out.write("'>-</span>\";\n");
      out.write("\t\t\t\t\t}else{\n");
      out.write("\t\t\t\t\t\tactivationLink = \"<a href='#' class='link' onclick=goToApplyLicense('\"+serverInstanceId+\"','\"+licenseAction+\"')>\"+licenseDuration+\"</a>\";\t\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\tstartTimeLink = \"<span>\"+responseObject.serverStartTime+\"</span>\";\n");
      out.write("\t\t\t\t\t$('#license_'+serverInstanceId).html(activationLink);\n");
      out.write("\t\t\t\t\t$('#serverStartTime_'+serverInstanceId).html(startTimeLink);\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t// enable checkbox for server instance in row\n");
      out.write("\t\t\t\t\tvar chkboxId= rowObject[\"host\"]+\"_\"+rowObject[\"port\"]+\"_chkbox\"\n");
      out.write("\t\t\t\t\t//document.getElementById(chkboxId).disabled= false;\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t// enable synch flag after loading server instance status if has access right than\n");
      out.write("\t\t\t\t\t");
      if (_jspx_meth_sec_005fauthorize_005f15(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t$('.checkboxbg').bootstrapToggle();\n");
      out.write("\t\t\t\t\t$('.checkboxbg').change(function(){\n");
      out.write("\t    \t\t\t\tinstanceActiveInactiveToggleChanged(this);\n");
      out.write("\t    \t\t\t});\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t\t\thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\t$( document ).ready(function() {\n");
      out.write("\t\t\t$(\"#server-manager-block input\").keypress(function (event) {\n");
      out.write("\t\t\t    if (event.which == 13) {\n");
      out.write("\t\t\t        event.preventDefault();\n");
      out.write("\t\t\t        $(this).blur();\n");
      out.write("\t\t\t        searchInstanceCriteria();\n");
      out.write("\t\t\t    }\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\tfunction reloadCache(){\n");
      out.write("\t\t\tclearAllMessages();\n");
      out.write("\t\t\t$(\"#reload-cache-buttons-div\").hide();\n");
      out.write("\t\t\t$(\"#reload-cache-progress-bar-div\").show();\n");
      out.write("\t\t\t$.ajax({\n");
      out.write("\t\t\t\t\turl: '");
      out.print( ControllerConstants.SERVER_INSTANCE_RELOAD_CACHE );
      out.write("',\n");
      out.write(" \t\t\t\t    cache: false,\n");
      out.write(" \t\t\t\t\tasync: true,\n");
      out.write(" \t\t\t\t\tdataType: 'json',\n");
      out.write(" \t\t\t\t\ttype: \"POST\",\n");
      out.write(" \t\t\t\t\tdata: {\n");
      out.write(" \t\t\t\t\t\tid: ckIntanceSelected.join()\n");
      out.write(" \t\t\t\t\t},\n");
      out.write(" \t\t\t\t\tsuccess: function(data){\n");
      out.write(" \t\t\t\t\t\t$(\"#reload-cache-buttons-div\").show();\n");
      out.write(" \t\t\t\t\t\t$(\"#reload-cache-progress-bar-div\").hide();\n");
      out.write(" \t\t\t\t\t\tvar response = eval(data);\n");
      out.write(" \t\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write(" \t\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\t\t\t    \t\n");
      out.write(" \t\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write(" \t\t\t\t    \t\tresetSearchInstanceCriteria();\n");
      out.write(" \t\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write(" \t\t\t\t    \t\tclearResponseMsg();\n");
      out.write(" \t\t\t\t    \t\tclearErrorMsg();\n");
      out.write(" \t\t\t\t    \t\tshowSuccessMsg(response.msg);\n");
      out.write(" \t\t\t\t    \t\tckIntanceSelected = new Array();\n");
      out.write(" \t\t\t\t    \t\tcloseFancyBox();\n");
      out.write(" \t\t\t\t    \t\tclearSelection();\n");
      out.write(" \t\t\t\t    \t}else{\n");
      out.write(" \t\t\t\t    \t\tshowErrorMsg(response.msg);\n");
      out.write(" \t\t\t\t    \t\tcloseFancyBox();\n");
      out.write("\t\t\t\t    \t\tclearSelection();\n");
      out.write(" \t\t\t\t    \t}\n");
      out.write(" \t\t\t\t\t},\n");
      out.write(" \t\t\t\t    error: function (xhr,st,err){\n");
      out.write(" \t\t\t\t\t\t$(\"#reload-cache-buttons-div\").show();\n");
      out.write(" \t\t\t\t\t\t$(\"#reload-cache-progress-bar-div\").hide();\n");
      out.write(" \t\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write(" \t\t\t\t\t}\n");
      out.write(" \t\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("  \n");
      out.write(" \n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_spring_005fmessage_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f0 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f0_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f0.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(25,3) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f0.setCode("serverManagement.page.heading");
      int[] _jspx_push_body_count_spring_005fmessage_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f0 = _jspx_th_spring_005fmessage_005f0.doStartTag();
        if (_jspx_th_spring_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f0);
      _jspx_th_spring_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f1 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f1_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f1.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(32,4) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f1.setCode("serverManagement.search.server.type");
      // /WEB-INF/jsp/server/serverMgmt.jsp(32,4) name = var type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f1.setVar("label");
      int[] _jspx_push_body_count_spring_005fmessage_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f1 = _jspx_th_spring_005fmessage_005f1.doStartTag();
        if (_jspx_th_spring_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f1);
      _jspx_th_spring_005fmessage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f1, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f2 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f2_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f2.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(33,4) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f2.setCode("serverManagement.search.server.type.tooltip");
      // /WEB-INF/jsp/server/serverMgmt.jsp(33,4) name = var type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f2.setVar("tooltip");
      int[] _jspx_push_body_count_spring_005fmessage_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f2 = _jspx_th_spring_005fmessage_005f2.doStartTag();
        if (_jspx_th_spring_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f2);
      _jspx_th_spring_005fmessage_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f2, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f3 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f3_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f3.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(41,45) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f3.setCode("serverManagement.search.server.type.allServerType.option");
      int[] _jspx_push_body_count_spring_005fmessage_005f3 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f3 = _jspx_th_spring_005fmessage_005f3.doStartTag();
        if (_jspx_th_spring_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f3[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f3.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f3.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f3);
      _jspx_th_spring_005fmessage_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f3, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(43,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("serverType");
      // /WEB-INF/jsp/server/serverMgmt.jsp(43,6) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/server/serverMgmt.jsp(43,6) '${SERVER_TYPE_LIST}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${SERVER_TYPE_LIST}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("\t\t\t\t\t\t\t<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serverType.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serverType.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\n");
            out.write("\t\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f4 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f4_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f4.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(55,12) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f4.setCode("serverManager.server");
      // /WEB-INF/jsp/server/serverMgmt.jsp(55,12) name = var type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f4.setVar("label");
      int[] _jspx_push_body_count_spring_005fmessage_005f4 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f4 = _jspx_th_spring_005fmessage_005f4.doStartTag();
        if (_jspx_th_spring_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f4[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f4.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f4.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f4);
      _jspx_th_spring_005fmessage_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f4, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f5 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f5_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f5.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f5.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(56,12) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f5.setCode("serverManagement.search.server.name.tooltip");
      // /WEB-INF/jsp/server/serverMgmt.jsp(56,12) name = var type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f5.setVar("tooltip");
      int[] _jspx_push_body_count_spring_005fmessage_005f5 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f5 = _jspx_th_spring_005fmessage_005f5.doStartTag();
        if (_jspx_th_spring_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f5[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f5.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f5.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f5);
      _jspx_th_spring_005fmessage_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f5, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f6(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f6 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f6_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f6.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f6.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(65,15) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f6.setCode("serverManagement.search.server.host.ip");
      // /WEB-INF/jsp/server/serverMgmt.jsp(65,15) name = var type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f6.setVar("label");
      int[] _jspx_push_body_count_spring_005fmessage_005f6 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f6 = _jspx_th_spring_005fmessage_005f6.doStartTag();
        if (_jspx_th_spring_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f6[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f6.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f6.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f6);
      _jspx_th_spring_005fmessage_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f6, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f7(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f7 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f7_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f7.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f7.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(66,15) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f7.setCode("serverManagement.search.server.host.ip.tooltip");
      // /WEB-INF/jsp/server/serverMgmt.jsp(66,15) name = var type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f7.setVar("tooltip");
      int[] _jspx_push_body_count_spring_005fmessage_005f7 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f7 = _jspx_th_spring_005fmessage_005f7.doStartTag();
        if (_jspx_th_spring_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f7[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f7.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f7.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f7);
      _jspx_th_spring_005fmessage_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f7, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f8(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f8 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f8_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f8.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f8.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(78,12) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f8.setCode("serverManager.server.instance");
      // /WEB-INF/jsp/server/serverMgmt.jsp(78,12) name = var type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f8.setVar("label");
      int[] _jspx_push_body_count_spring_005fmessage_005f8 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f8 = _jspx_th_spring_005fmessage_005f8.doStartTag();
        if (_jspx_th_spring_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f8[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f8.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f8.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f8);
      _jspx_th_spring_005fmessage_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f8, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f9(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f9 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f9_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f9.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f9.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(79,12) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f9.setCode("serverManagement.search.server.instance.name.tooltip");
      // /WEB-INF/jsp/server/serverMgmt.jsp(79,12) name = var type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f9.setVar("tooltip");
      int[] _jspx_push_body_count_spring_005fmessage_005f9 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f9 = _jspx_th_spring_005fmessage_005f9.doStartTag();
        if (_jspx_th_spring_005fmessage_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f9[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f9.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f9.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f9);
      _jspx_th_spring_005fmessage_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f9, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f10(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f10 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f10_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f10.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f10.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(88,15) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f10.setCode("addServerInstance.instance.port");
      // /WEB-INF/jsp/server/serverMgmt.jsp(88,15) name = var type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f10.setVar("label");
      int[] _jspx_push_body_count_spring_005fmessage_005f10 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f10 = _jspx_th_spring_005fmessage_005f10.doStartTag();
        if (_jspx_th_spring_005fmessage_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f10[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f10.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f10.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f10);
      _jspx_th_spring_005fmessage_005f10_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f10, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f10_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f11(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f11 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f11_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f11.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f11.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(89,15) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f11.setCode("serverManagement.search.server.host.port.tooltip");
      // /WEB-INF/jsp/server/serverMgmt.jsp(89,15) name = var type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f11.setVar("tooltip");
      int[] _jspx_push_body_count_spring_005fmessage_005f11 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f11 = _jspx_th_spring_005fmessage_005f11.doStartTag();
        if (_jspx_th_spring_005fmessage_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f11[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f11.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f11.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f11);
      _jspx_th_spring_005fmessage_005f11_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f11, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f11_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f12(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f12 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f12_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f12.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f12.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(98,15) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f12.setCode("serverManagement.grid.column.server.sync");
      // /WEB-INF/jsp/server/serverMgmt.jsp(98,15) name = var type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f12.setVar("tooltip");
      int[] _jspx_push_body_count_spring_005fmessage_005f12 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f12 = _jspx_th_spring_005fmessage_005f12.doStartTag();
        if (_jspx_th_spring_005fmessage_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f12[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f12.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f12.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fvar_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f12);
      _jspx_th_spring_005fmessage_005f12_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f12, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f12_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f13(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f13 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f13_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f13.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f13.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(101,156) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f13.setCode("synchronize.search.status.sync");
      int[] _jspx_push_body_count_spring_005fmessage_005f13 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f13 = _jspx_th_spring_005fmessage_005f13.doStartTag();
        if (_jspx_th_spring_005fmessage_005f13.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f13[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f13.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f13.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f13);
      _jspx_th_spring_005fmessage_005f13_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f13, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f13_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f14(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f14 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f14_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f14.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f14.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(102,174) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f14.setCode("synchronize.search.status.notsync");
      int[] _jspx_push_body_count_spring_005fmessage_005f14 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f14 = _jspx_th_spring_005fmessage_005f14.doStartTag();
        if (_jspx_th_spring_005fmessage_005f14.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f14[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f14.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f14.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f14);
      _jspx_th_spring_005fmessage_005f14_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f14, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f14_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f0 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f0_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f0.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f0.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(116,8) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f0.setAccess("hasAuthority('VIEW_SERVER_AND_SERVER_INSTANCES')");
      int _jspx_eval_sec_005fauthorize_005f0 = _jspx_th_sec_005fauthorize_005f0.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("   \t\t\t\t\t<button id=\"searchServerBtn\" class=\"btn btn-grey btn-xs\" onclick=\"searchInstanceCriteria();\">");
        if (_jspx_meth_spring_005fmessage_005f15(_jspx_th_sec_005fauthorize_005f0, _jspx_page_context))
          return true;
        out.write("</button>\n");
        out.write("    \t\t\t\t<button id=\"resetServerBtn\" class=\"btn btn-grey btn-xs\" onclick=\"resetSearchInstanceCriteria();\">");
        if (_jspx_meth_spring_005fmessage_005f16(_jspx_th_sec_005fauthorize_005f0, _jspx_page_context))
          return true;
        out.write("</button>\n");
        out.write("    \t\t\t");
      }
      if (_jspx_th_sec_005fauthorize_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f0);
      _jspx_th_sec_005fauthorize_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f0, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f15(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f15 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f15_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f15.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f15.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f0);
      // /WEB-INF/jsp/server/serverMgmt.jsp(117,101) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f15.setCode("btn.label.search");
      int[] _jspx_push_body_count_spring_005fmessage_005f15 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f15 = _jspx_th_spring_005fmessage_005f15.doStartTag();
        if (_jspx_th_spring_005fmessage_005f15.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f15[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f15.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f15.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f15);
      _jspx_th_spring_005fmessage_005f15_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f15, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f15_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f16(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f16 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f16_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f16.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f16.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f0);
      // /WEB-INF/jsp/server/serverMgmt.jsp(118,105) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f16.setCode("btn.label.reset");
      int[] _jspx_push_body_count_spring_005fmessage_005f16 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f16 = _jspx_th_spring_005fmessage_005f16.doStartTag();
        if (_jspx_th_spring_005fmessage_005f16.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f16[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f16.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f16.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f16);
      _jspx_th_spring_005fmessage_005f16_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f16, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f16_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f17(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f17 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f17_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f17.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f17.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(126,8) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f17.setCode("serverManagement.grid.heading");
      int[] _jspx_push_body_count_spring_005fmessage_005f17 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f17 = _jspx_th_spring_005fmessage_005f17.doStartTag();
        if (_jspx_th_spring_005fmessage_005f17.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f17[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f17.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f17.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f17);
      _jspx_th_spring_005fmessage_005f17_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f17, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f17_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f1 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f1_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f1.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f1.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(129,15) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f1.setAccess("hasAuthority('DELETE_SERVER_AND_SERVER_INSTANCES')");
      int _jspx_eval_sec_005fauthorize_005f1 = _jspx_th_sec_005fauthorize_005f1.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t\t\t          \t\t<span class=\"title2rightfield-icon1-text\">\n");
        out.write("\t\t\t\t          \t\t<a href=\"#\" onclick=\"deleteServerInstancePopup('server_mgmt','','','','');\"> <i class=\"fa fa-trash\"></i></a>\n");
        out.write("\t\t\t\t          \t\t<a href=\"#\" id=\"deleteServerInstanceTxt\" onclick=\"deleteServerInstancePopup('server_mgmt','','','','');\">");
        if (_jspx_meth_spring_005fmessage_005f18(_jspx_th_sec_005fauthorize_005f1, _jspx_page_context))
          return true;
        out.write("</a>\n");
        out.write("\t\t\t\t          \t\t</span>\n");
        out.write("\t\t\t\t          \t");
      }
      if (_jspx_th_sec_005fauthorize_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f1);
      _jspx_th_sec_005fauthorize_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f1, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f18(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f18 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f18_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f18.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f18.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f1);
      // /WEB-INF/jsp/server/serverMgmt.jsp(132,121) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f18.setCode("btn.label.delete");
      int[] _jspx_push_body_count_spring_005fmessage_005f18 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f18 = _jspx_th_spring_005fmessage_005f18.doStartTag();
        if (_jspx_th_spring_005fmessage_005f18.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f18[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f18.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f18.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f18);
      _jspx_th_spring_005fmessage_005f18_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f18, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f18_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f19(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f19 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f19_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f19.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f19.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(177,38) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f19.setCode("serverMgmt.synchronize.popup.header");
      int[] _jspx_push_body_count_spring_005fmessage_005f19 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f19 = _jspx_th_spring_005fmessage_005f19.doStartTag();
        if (_jspx_th_spring_005fmessage_005f19.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f19[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f19.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f19.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f19);
      _jspx_th_spring_005fmessage_005f19_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f19, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f19_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f20(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f20 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f20_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f20.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f20.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(198,34) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f20.setCode("label.important.note");
      int[] _jspx_push_body_count_spring_005fmessage_005f20 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f20 = _jspx_th_spring_005fmessage_005f20.doStartTag();
        if (_jspx_th_spring_005fmessage_005f20.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f20[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f20.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f20.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f20);
      _jspx_th_spring_005fmessage_005f20_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f20, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f20_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f21(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f21 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f21_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f21.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f21.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(199,15) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f21.setCode("serverMgmt.synchronize.popup.note.content");
      int[] _jspx_push_body_count_spring_005fmessage_005f21 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f21 = _jspx_th_spring_005fmessage_005f21.doStartTag();
        if (_jspx_th_spring_005fmessage_005f21.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f21[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f21.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f21.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f21);
      _jspx_th_spring_005fmessage_005f21_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f21, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f21_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f2 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f2_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f2.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f2.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(203,11) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f2.setAccess("hasAuthority('SERVER_INSTANCE_SYNCHRONIZATION')");
      int _jspx_eval_sec_005fauthorize_005f2 = _jspx_th_sec_005fauthorize_005f2.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t            \t<button type=\"button\" class=\"btn btn-grey btn-xs\" id=\"btnSynchPopup\" onclick=\"synchronizesInstance();\">");
        if (_jspx_meth_spring_005fmessage_005f22(_jspx_th_sec_005fauthorize_005f2, _jspx_page_context))
          return true;
        out.write("</button>\n");
        out.write("\t\t            ");
      }
      if (_jspx_th_sec_005fauthorize_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f2);
      _jspx_th_sec_005fauthorize_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f2, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f22(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f22 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f22_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f22.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f22.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f2);
      // /WEB-INF/jsp/server/serverMgmt.jsp(204,118) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f22.setCode("btn.label.synchronize");
      int[] _jspx_push_body_count_spring_005fmessage_005f22 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f22 = _jspx_th_spring_005fmessage_005f22.doStartTag();
        if (_jspx_th_spring_005fmessage_005f22.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f22[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f22.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f22.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f22);
      _jspx_th_spring_005fmessage_005f22_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f22, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f22_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f23(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f23 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f23_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f23.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f23.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(206,175) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f23.setCode("btn.label.cancel");
      int[] _jspx_push_body_count_spring_005fmessage_005f23 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f23 = _jspx_th_spring_005fmessage_005f23.doStartTag();
        if (_jspx_th_spring_005fmessage_005f23.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f23[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f23.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f23.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f23);
      _jspx_th_spring_005fmessage_005f23_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f23, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f23_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f24(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f24 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f24_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f24.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f24.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(207,197) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f24.setCode("btn.label.close");
      int[] _jspx_push_body_count_spring_005fmessage_005f24 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f24 = _jspx_th_spring_005fmessage_005f24.doStartTag();
        if (_jspx_th_spring_005fmessage_005f24.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f24[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f24.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f24.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f24);
      _jspx_th_spring_005fmessage_005f24_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f24, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f24_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f25(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f25 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f25_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f25.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f25.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(230,23) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f25.setCode("serverManagement.popup.host.ip.lbl");
      int[] _jspx_push_body_count_spring_005fmessage_005f25 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f25 = _jspx_th_spring_005fmessage_005f25.doStartTag();
        if (_jspx_th_spring_005fmessage_005f25.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f25[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f25.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f25.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f25);
      _jspx_th_spring_005fmessage_005f25_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f25, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f25_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f26(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f26 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f26_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f26.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f26.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(231,15) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f26.setCode("serverManagement.popup.instance.name.lbl");
      int[] _jspx_push_body_count_spring_005fmessage_005f26 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f26 = _jspx_th_spring_005fmessage_005f26.doStartTag();
        if (_jspx_th_spring_005fmessage_005f26.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f26[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f26.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f26.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f26);
      _jspx_th_spring_005fmessage_005f26_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f26, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f26_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f27(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f27 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f27_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f27.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f27.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(237,34) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f27.setCode("label.important.note");
      int[] _jspx_push_body_count_spring_005fmessage_005f27 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f27 = _jspx_th_spring_005fmessage_005f27.doStartTag();
        if (_jspx_th_spring_005fmessage_005f27.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f27[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f27.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f27.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f27);
      _jspx_th_spring_005fmessage_005f27_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f27, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f27_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f3 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f3_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f3.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f3.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(238,15) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f3.setAccess("hasAuthority('SERVER_INSTANCE_STOP')");
      int _jspx_eval_sec_005fauthorize_005f3 = _jspx_th_sec_005fauthorize_005f3.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t            \t\t\t<strong>");
        if (_jspx_meth_spring_005fmessage_005f28(_jspx_th_sec_005fauthorize_005f3, _jspx_page_context))
          return true;
        out.write("</strong> : ");
        if (_jspx_meth_spring_005fmessage_005f29(_jspx_th_sec_005fauthorize_005f3, _jspx_page_context))
          return true;
        out.write("<br/>\n");
        out.write("\t            \t\t");
      }
      if (_jspx_th_sec_005fauthorize_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f3);
      _jspx_th_sec_005fauthorize_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f3, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f28(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f3, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f28 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f28_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f28.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f28.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f3);
      // /WEB-INF/jsp/server/serverMgmt.jsp(239,24) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f28.setCode("btn.label.stop");
      int[] _jspx_push_body_count_spring_005fmessage_005f28 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f28 = _jspx_th_spring_005fmessage_005f28.doStartTag();
        if (_jspx_th_spring_005fmessage_005f28.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f28[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f28.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f28.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f28);
      _jspx_th_spring_005fmessage_005f28_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f28, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f28_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f29(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f3, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f29 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f29_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f29.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f29.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f3);
      // /WEB-INF/jsp/server/serverMgmt.jsp(239,91) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f29.setCode("serverMgmt.start.stop.instance.popup.stop.btn.content");
      int[] _jspx_push_body_count_spring_005fmessage_005f29 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f29 = _jspx_th_spring_005fmessage_005f29.doStartTag();
        if (_jspx_th_spring_005fmessage_005f29.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f29[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f29.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f29.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f29);
      _jspx_th_spring_005fmessage_005f29_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f29, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f29_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f30(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f30 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f30_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f30.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f30.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(241,28) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f30.setCode("btn.label.restart");
      int[] _jspx_push_body_count_spring_005fmessage_005f30 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f30 = _jspx_th_spring_005fmessage_005f30.doStartTag();
        if (_jspx_th_spring_005fmessage_005f30.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f30[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f30.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f30.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f30);
      _jspx_th_spring_005fmessage_005f30_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f30, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f30_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f31(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f31 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f31_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f31.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f31.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(241,98) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f31.setCode("serverMgmt.start.stop.instance.popup.restart.btn.content");
      int[] _jspx_push_body_count_spring_005fmessage_005f31 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f31 = _jspx_th_spring_005fmessage_005f31.doStartTag();
        if (_jspx_th_spring_005fmessage_005f31.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f31[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f31.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f31.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f31);
      _jspx_th_spring_005fmessage_005f31_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f31, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f31_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f4 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f4_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f4.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f4.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(245,11) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f4.setAccess("hasAuthority('SERVER_INSTANCE_STOP')");
      int _jspx_eval_sec_005fauthorize_005f4 = _jspx_th_sec_005fauthorize_005f4.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t            \t\t<button type=\"button\" class=\"btn btn-grey btn-xs \" onclick=\"stopPopup();\" id=\"btnStop\">");
        if (_jspx_meth_spring_005fmessage_005f32(_jspx_th_sec_005fauthorize_005f4, _jspx_page_context))
          return true;
        out.write("</button>\n");
        out.write("\t            \t");
      }
      if (_jspx_th_sec_005fauthorize_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f4);
      _jspx_th_sec_005fauthorize_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f4, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f32(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f4, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f32 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f32_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f32.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f32.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f4);
      // /WEB-INF/jsp/server/serverMgmt.jsp(246,102) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f32.setCode("btn.label.stop");
      int[] _jspx_push_body_count_spring_005fmessage_005f32 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f32 = _jspx_th_spring_005fmessage_005f32.doStartTag();
        if (_jspx_th_spring_005fmessage_005f32.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f32[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f32.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f32.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f32);
      _jspx_th_spring_005fmessage_005f32_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f32, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f32_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f5 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f5_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f5.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f5.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(248,14) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f5.setAccess("hasAuthority('SERVER_INSTANCE_START')");
      int _jspx_eval_sec_005fauthorize_005f5 = _jspx_th_sec_005fauthorize_005f5.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t            \t\t<button type=\"button\" class=\"btn btn-grey btn-xs \" id=\"btnStart\" onclick=\"startPopup();\">");
        if (_jspx_meth_spring_005fmessage_005f33(_jspx_th_sec_005fauthorize_005f5, _jspx_page_context))
          return true;
        out.write("</button>\n");
        out.write("\t            \t\t<button type=\"button\" class=\"btn btn-grey btn-xs \" data-dismiss=\"modal\" onclick=\"restartInstance();\" id=\"btnRestart\">");
        if (_jspx_meth_spring_005fmessage_005f34(_jspx_th_sec_005fauthorize_005f5, _jspx_page_context))
          return true;
        out.write("</button>\n");
        out.write("\t            \t");
      }
      if (_jspx_th_sec_005fauthorize_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f5);
      _jspx_th_sec_005fauthorize_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f5, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f33(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f33 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f33_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f33.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f33.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f5);
      // /WEB-INF/jsp/server/serverMgmt.jsp(249,104) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f33.setCode("btn.label.start");
      int[] _jspx_push_body_count_spring_005fmessage_005f33 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f33 = _jspx_th_spring_005fmessage_005f33.doStartTag();
        if (_jspx_th_spring_005fmessage_005f33.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f33[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f33.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f33.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f33);
      _jspx_th_spring_005fmessage_005f33_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f33, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f33_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f34(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f5, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f34 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f34_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f34.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f34.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f5);
      // /WEB-INF/jsp/server/serverMgmt.jsp(250,132) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f34.setCode("btn.label.restart");
      int[] _jspx_push_body_count_spring_005fmessage_005f34 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f34 = _jspx_th_spring_005fmessage_005f34.doStartTag();
        if (_jspx_th_spring_005fmessage_005f34.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f34[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f34.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f34.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f34);
      _jspx_th_spring_005fmessage_005f34_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f34, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f34_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f35(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f35 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f35_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f35.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f35.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(252,170) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f35.setCode("btn.label.cancel");
      int[] _jspx_push_body_count_spring_005fmessage_005f35 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f35 = _jspx_th_spring_005fmessage_005f35.doStartTag();
        if (_jspx_th_spring_005fmessage_005f35.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f35[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f35.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f35.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f35);
      _jspx_th_spring_005fmessage_005f35_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f35, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f35_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f36(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f36 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f36_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f36.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f36.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(269,38) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f36.setCode("serverManagement.warn.popup.header");
      int[] _jspx_push_body_count_spring_005fmessage_005f36 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f36 = _jspx_th_spring_005fmessage_005f36.doStartTag();
        if (_jspx_th_spring_005fmessage_005f36.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f36[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f36.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f36.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f36);
      _jspx_th_spring_005fmessage_005f36_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f36, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f36_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f37(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f37 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f37_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f37.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f37.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(273,12) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f37.setCode("serverMgmt.more.instance.checked.warning");
      int[] _jspx_push_body_count_spring_005fmessage_005f37 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f37 = _jspx_th_spring_005fmessage_005f37.doStartTag();
        if (_jspx_th_spring_005fmessage_005f37.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f37[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f37.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f37.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f37);
      _jspx_th_spring_005fmessage_005f37_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f37, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f37_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f38(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f38 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f38_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f38.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f38.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(276,12) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f38.setCode("serverMgmt.no.instance.checked.warning");
      int[] _jspx_push_body_count_spring_005fmessage_005f38 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f38 = _jspx_th_spring_005fmessage_005f38.doStartTag();
        if (_jspx_th_spring_005fmessage_005f38.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f38[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f38.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f38.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f38);
      _jspx_th_spring_005fmessage_005f38_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f38, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f38_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f39(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f39 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f39_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f39.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f39.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(280,148) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f39.setCode("btn.label.close");
      int[] _jspx_push_body_count_spring_005fmessage_005f39 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f39 = _jspx_th_spring_005fmessage_005f39.doStartTag();
        if (_jspx_th_spring_005fmessage_005f39.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f39[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f39.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f39.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f39);
      _jspx_th_spring_005fmessage_005f39_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f39, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f39_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f40(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f40 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f40_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f40.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f40.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(288,38) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f40.setCode("serverMgmt.copy.config.popup.header");
      int[] _jspx_push_body_count_spring_005fmessage_005f40 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f40 = _jspx_th_spring_005fmessage_005f40.doStartTag();
        if (_jspx_th_spring_005fmessage_005f40.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f40[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f40.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f40.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f40);
      _jspx_th_spring_005fmessage_005f40_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f40, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f40_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f41(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f41 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f41_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f41.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f41.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(299,71) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f41.setCode("label.important.note");
      int[] _jspx_push_body_count_spring_005fmessage_005f41 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f41 = _jspx_th_spring_005fmessage_005f41.doStartTag();
        if (_jspx_th_spring_005fmessage_005f41.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f41[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f41.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f41.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f41);
      _jspx_th_spring_005fmessage_005f41_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f41, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f41_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f42(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f42 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f42_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f42.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f42.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(302,5) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f42.setCode("serverMgmt.copy.config.popup.note.content");
      int[] _jspx_push_body_count_spring_005fmessage_005f42 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f42 = _jspx_th_spring_005fmessage_005f42.doStartTag();
        if (_jspx_th_spring_005fmessage_005f42.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f42[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f42.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f42.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f42);
      _jspx_th_spring_005fmessage_005f42_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f42, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f42_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f43(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f43 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f43_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f43.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f43.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(306,113) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f43.setCode("btn.label.copy.config");
      int[] _jspx_push_body_count_spring_005fmessage_005f43 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f43 = _jspx_th_spring_005fmessage_005f43.doStartTag();
        if (_jspx_th_spring_005fmessage_005f43.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f43[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f43.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f43.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f43);
      _jspx_th_spring_005fmessage_005f43_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f43, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f43_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f44(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f44 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f44_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f44.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f44.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(307,177) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f44.setCode("btn.label.cancel");
      int[] _jspx_push_body_count_spring_005fmessage_005f44 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f44 = _jspx_th_spring_005fmessage_005f44.doStartTag();
        if (_jspx_th_spring_005fmessage_005f44.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f44[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f44.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f44.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f44);
      _jspx_th_spring_005fmessage_005f44_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f44, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f44_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f45(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f45 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f45_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f45.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f45.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(308,196) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f45.setCode("btn.label.close");
      int[] _jspx_push_body_count_spring_005fmessage_005f45 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f45 = _jspx_th_spring_005fmessage_005f45.doStartTag();
        if (_jspx_th_spring_005fmessage_005f45.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f45[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f45.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f45.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f45);
      _jspx_th_spring_005fmessage_005f45_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f45, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f45_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f46(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f46 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f46_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f46.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f46.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(319,38) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f46.setCode("serverManagement.warn.popup.header");
      int[] _jspx_push_body_count_spring_005fmessage_005f46 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f46 = _jspx_th_spring_005fmessage_005f46.doStartTag();
        if (_jspx_th_spring_005fmessage_005f46.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f46[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f46.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f46.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f46);
      _jspx_th_spring_005fmessage_005f46_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f46, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f46_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f47(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f47 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f47_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f47.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f47.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(323,12) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f47.setCode("serverMgmt.instance.off.warning");
      int[] _jspx_push_body_count_spring_005fmessage_005f47 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f47 = _jspx_th_spring_005fmessage_005f47.doStartTag();
        if (_jspx_th_spring_005fmessage_005f47.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f47[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f47.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f47.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f47);
      _jspx_th_spring_005fmessage_005f47_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f47, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f47_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f48(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f48 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f48_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f48.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f48.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(327,130) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f48.setCode("btn.label.close");
      int[] _jspx_push_body_count_spring_005fmessage_005f48 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f48 = _jspx_th_spring_005fmessage_005f48.doStartTag();
        if (_jspx_th_spring_005fmessage_005f48.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f48[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f48.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f48.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f48);
      _jspx_th_spring_005fmessage_005f48_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f48, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f48_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f49(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f49 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f49_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f49.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f49.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(336,38) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f49.setCode("serverManagement.warn.popup.header");
      int[] _jspx_push_body_count_spring_005fmessage_005f49 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f49 = _jspx_th_spring_005fmessage_005f49.doStartTag();
        if (_jspx_th_spring_005fmessage_005f49.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f49[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f49.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f49.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f49);
      _jspx_th_spring_005fmessage_005f49_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f49, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f49_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f50(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f50 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f50_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f50.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f50.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(340,12) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f50.setCode("serverMgmt.instance.inactive.warning");
      int[] _jspx_push_body_count_spring_005fmessage_005f50 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f50 = _jspx_th_spring_005fmessage_005f50.doStartTag();
        if (_jspx_th_spring_005fmessage_005f50.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f50[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f50.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f50.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f50);
      _jspx_th_spring_005fmessage_005f50_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f50, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f50_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f51(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f51 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f51_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f51.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f51.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(344,130) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f51.setCode("btn.label.close");
      int[] _jspx_push_body_count_spring_005fmessage_005f51 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f51 = _jspx_th_spring_005fmessage_005f51.doStartTag();
        if (_jspx_th_spring_005fmessage_005f51.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f51[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f51.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f51.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f51);
      _jspx_th_spring_005fmessage_005f51_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f51, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f51_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f52(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f52 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f52_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f52.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f52.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(353,38) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f52.setCode("serverMgmt.stop.popup.header");
      int[] _jspx_push_body_count_spring_005fmessage_005f52 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f52 = _jspx_th_spring_005fmessage_005f52.doStartTag();
        if (_jspx_th_spring_005fmessage_005f52.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f52[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f52.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f52.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f52);
      _jspx_th_spring_005fmessage_005f52_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f52, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f52_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f53(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f53 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f53_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f53.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f53.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(357,72) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f53.setCode("label.important.note");
      int[] _jspx_push_body_count_spring_005fmessage_005f53 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f53 = _jspx_th_spring_005fmessage_005f53.doStartTag();
        if (_jspx_th_spring_005fmessage_005f53.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f53[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f53.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f53.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f53);
      _jspx_th_spring_005fmessage_005f53_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f53, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f53_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f54(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f54 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f54_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f54.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f54.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(360,6) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f54.setCode("serverMgmt.stop.popup.note.content");
      int[] _jspx_push_body_count_spring_005fmessage_005f54 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f54 = _jspx_th_spring_005fmessage_005f54.doStartTag();
        if (_jspx_th_spring_005fmessage_005f54.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f54[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f54.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f54.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f54);
      _jspx_th_spring_005fmessage_005f54_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f54, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f54_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f55(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f55 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f55_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f55.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f55.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(363,14) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f55.setCode("server.manager.and.server.detail.mismatch");
      int[] _jspx_push_body_count_spring_005fmessage_005f55 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f55 = _jspx_th_spring_005fmessage_005f55.doStartTag();
        if (_jspx_th_spring_005fmessage_005f55.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f55[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f55.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f55.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f55);
      _jspx_th_spring_005fmessage_005f55_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f55, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f55_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f56(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f56 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f56_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f56.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f56.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(366,20) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f56.setCode("serverManagement.popup.wish.continue.lbl");
      int[] _jspx_push_body_count_spring_005fmessage_005f56 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f56 = _jspx_th_spring_005fmessage_005f56.doStartTag();
        if (_jspx_th_spring_005fmessage_005f56.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f56[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f56.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f56.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f56);
      _jspx_th_spring_005fmessage_005f56_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f56, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f56_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f57(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f57 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f57_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f57.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f57.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(370,108) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f57.setCode("btn.label.yes");
      int[] _jspx_push_body_count_spring_005fmessage_005f57 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f57 = _jspx_th_spring_005fmessage_005f57.doStartTag();
        if (_jspx_th_spring_005fmessage_005f57.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f57[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f57.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f57.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f57);
      _jspx_th_spring_005fmessage_005f57_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f57, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f57_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f58(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f58 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f58_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f58.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f58.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(371,155) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f58.setCode("btn.label.no");
      int[] _jspx_push_body_count_spring_005fmessage_005f58 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f58 = _jspx_th_spring_005fmessage_005f58.doStartTag();
        if (_jspx_th_spring_005fmessage_005f58.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f58[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f58.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f58.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f58);
      _jspx_th_spring_005fmessage_005f58_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f58, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f58_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f59(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f59 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f59_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f59.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f59.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(432,25) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f59.setCode("serverManagement.grid.column.id");
      int[] _jspx_push_body_count_spring_005fmessage_005f59 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f59 = _jspx_th_spring_005fmessage_005f59.doStartTag();
        if (_jspx_th_spring_005fmessage_005f59.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f59[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f59.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f59.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f59);
      _jspx_th_spring_005fmessage_005f59_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f59, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f59_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f60(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f60 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f60_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f60.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f60.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(433,25) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f60.setCode("serverManagement.grid.column.server.name");
      int[] _jspx_push_body_count_spring_005fmessage_005f60 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f60 = _jspx_th_spring_005fmessage_005f60.doStartTag();
        if (_jspx_th_spring_005fmessage_005f60.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f60[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f60.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f60.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f60);
      _jspx_th_spring_005fmessage_005f60_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f60, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f60_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f61(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f61 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f61_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f61.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f61.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(434,25) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f61.setCode("serverManagement.grid.column.server.type");
      int[] _jspx_push_body_count_spring_005fmessage_005f61 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f61 = _jspx_th_spring_005fmessage_005f61.doStartTag();
        if (_jspx_th_spring_005fmessage_005f61.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f61[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f61.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f61.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f61);
      _jspx_th_spring_005fmessage_005f61_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f61, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f61_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f62(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f62 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f62_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f62.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f62.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(435,25) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f62.setCode("serverManagement.grid.column.server.instance");
      int[] _jspx_push_body_count_spring_005fmessage_005f62 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f62 = _jspx_th_spring_005fmessage_005f62.doStartTag();
        if (_jspx_th_spring_005fmessage_005f62.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f62[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f62.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f62.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f62);
      _jspx_th_spring_005fmessage_005f62_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f62, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f62_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f63(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f63 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f63_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f63.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f63.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(436,25) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f63.setCode("serverManagement.grid.column.server.hostIp");
      int[] _jspx_push_body_count_spring_005fmessage_005f63 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f63 = _jspx_th_spring_005fmessage_005f63.doStartTag();
        if (_jspx_th_spring_005fmessage_005f63.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f63[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f63.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f63.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f63);
      _jspx_th_spring_005fmessage_005f63_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f63, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f63_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f64(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f64 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f64_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f64.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f64.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(437,25) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f64.setCode("serverManagement.grid.column.server.port");
      int[] _jspx_push_body_count_spring_005fmessage_005f64 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f64 = _jspx_th_spring_005fmessage_005f64.doStartTag();
        if (_jspx_th_spring_005fmessage_005f64.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f64[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f64.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f64.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f64);
      _jspx_th_spring_005fmessage_005f64_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f64, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f64_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f65(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f65 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f65_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f65.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f65.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(438,25) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f65.setCode("serverManagement.grid.column.server.startTime");
      int[] _jspx_push_body_count_spring_005fmessage_005f65 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f65 = _jspx_th_spring_005fmessage_005f65.doStartTag();
        if (_jspx_th_spring_005fmessage_005f65.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f65[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f65.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f65.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f65);
      _jspx_th_spring_005fmessage_005f65_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f65, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f65_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f66(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f66 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f66_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f66.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f66.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(439,25) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f66.setCode("serverManagement.grid.column.server.license");
      int[] _jspx_push_body_count_spring_005fmessage_005f66 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f66 = _jspx_th_spring_005fmessage_005f66.doStartTag();
        if (_jspx_th_spring_005fmessage_005f66.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f66[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f66.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f66.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f66);
      _jspx_th_spring_005fmessage_005f66_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f66, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f66_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f67(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f67 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f67_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f67.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f67.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(440,25) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f67.setCode("serverManagement.grid.column.server.status");
      int[] _jspx_push_body_count_spring_005fmessage_005f67 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f67 = _jspx_th_spring_005fmessage_005f67.doStartTag();
        if (_jspx_th_spring_005fmessage_005f67.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f67[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f67.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f67.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f67);
      _jspx_th_spring_005fmessage_005f67_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f67, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f67_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f68(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f68 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f68_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f68.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f68.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(441,25) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f68.setCode("serverManagement.grid.column.server.sync");
      int[] _jspx_push_body_count_spring_005fmessage_005f68 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f68 = _jspx_th_spring_005fmessage_005f68.doStartTag();
        if (_jspx_th_spring_005fmessage_005f68.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f68[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f68.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f68.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f68);
      _jspx_th_spring_005fmessage_005f68_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f68, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f68_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(453,111) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Boolean.TRUE.toString() eq  MapCache.getConfigValueAsObject(BaseConstants.KUBERNETES_ENV)}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("hidden:true");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(455,113) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Boolean.TRUE.toString() eq  MapCache.getConfigValueAsObject(BaseConstants.KUBERNETES_ENV)}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("hidden:true");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f69(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f69 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f69_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f69.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f69.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(468,24) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f69.setCode("serverManagement.grid.caption");
      int[] _jspx_push_body_count_spring_005fmessage_005f69 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f69 = _jspx_th_spring_005fmessage_005f69.doStartTag();
        if (_jspx_th_spring_005fmessage_005f69.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f69[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f69.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f69.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f69);
      _jspx_th_spring_005fmessage_005f69_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f69, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f69_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f70(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f70 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f70_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f70.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f70.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(496,116) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f70.setCode("serverManagement.grid.empty.records");
      int[] _jspx_push_body_count_spring_005fmessage_005f70 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f70 = _jspx_th_spring_005fmessage_005f70.doStartTag();
        if (_jspx_th_spring_005fmessage_005f70.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f70[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f70.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f70.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f70);
      _jspx_th_spring_005fmessage_005f70_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f70, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f70_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f6(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f6 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f6_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f6.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f6.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(525,8) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f6.setAccess("hasAuthority('SERVER_INSTANCE_SYNCHRONIZATION')");
      int _jspx_eval_sec_005fauthorize_005f6 = _jspx_th_sec_005fauthorize_005f6.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f6 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t\t\t\t\t\t//\t$('#synch_'+instance.id).attr(\"onclick\",\"synchInstanceById('\"+instance.id+\"')\");\n");
        out.write("\t\t\t\t\t\t\t\t");
      }
      if (_jspx_th_sec_005fauthorize_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f6);
      _jspx_th_sec_005fauthorize_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f6, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f71(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f71 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f71_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f71.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f71.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(541,18) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f71.setCode("serverManagement.grid.pager.total.records.text");
      int[] _jspx_push_body_count_spring_005fmessage_005f71 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f71 = _jspx_th_spring_005fmessage_005f71.doStartTag();
        if (_jspx_th_spring_005fmessage_005f71.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f71[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f71.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f71.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f71);
      _jspx_th_spring_005fmessage_005f71_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f71, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f71_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f72(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f72 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f72_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f72.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f72.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(542,26) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f72.setCode("serverManagement.grid.empty.records");
      int[] _jspx_push_body_count_spring_005fmessage_005f72 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f72 = _jspx_th_spring_005fmessage_005f72.doStartTag();
        if (_jspx_th_spring_005fmessage_005f72.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f72[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f72.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f72.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f72);
      _jspx_th_spring_005fmessage_005f72_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f72, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f72_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f73(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f73 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f73_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f73.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f73.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(543,16) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f73.setCode("serverManagement.grid.loading.text");
      int[] _jspx_push_body_count_spring_005fmessage_005f73 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f73 = _jspx_th_spring_005fmessage_005f73.doStartTag();
        if (_jspx_th_spring_005fmessage_005f73.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f73[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f73.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f73.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f73);
      _jspx_th_spring_005fmessage_005f73_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f73, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f73_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f74(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f74 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f74_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f74.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f74.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(544,15) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f74.setCode("serverManagement.grid.pager.text");
      int[] _jspx_push_body_count_spring_005fmessage_005f74 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f74 = _jspx_th_spring_005fmessage_005f74.doStartTag();
        if (_jspx_th_spring_005fmessage_005f74.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f74[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f74.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f74.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f74);
      _jspx_th_spring_005fmessage_005f74_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f74, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f74_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f75(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f75 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f75_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f75.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f75.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(584,50) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f75.setCode("serverMgmt.start.stop.instance.popup.start.header");
      int[] _jspx_push_body_count_spring_005fmessage_005f75 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f75 = _jspx_th_spring_005fmessage_005f75.doStartTag();
        if (_jspx_th_spring_005fmessage_005f75.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f75[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f75.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f75.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f75);
      _jspx_th_spring_005fmessage_005f75_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f75, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f75_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f76(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f76 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f76_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f76.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f76.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(590,50) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f76.setCode("serverMgmt.start.stop.instance.popup.stop.header");
      int[] _jspx_push_body_count_spring_005fmessage_005f76 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f76 = _jspx_th_spring_005fmessage_005f76.doStartTag();
        if (_jspx_th_spring_005fmessage_005f76.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f76[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f76.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f76.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f76);
      _jspx_th_spring_005fmessage_005f76_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f76, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f76_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f7(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f7 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f7_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f7.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f7.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(628,3) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f7.setAccess("hasAuthority('VIEW_SERVER_AND_SERVER_INSTANCES')");
      int _jspx_eval_sec_005fauthorize_005f7 = _jspx_th_sec_005fauthorize_005f7.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f7 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t\t\treturn '<a class=\"link\" id=\"' + serverDetailDivId + '_name\" href=\"#\" onclick=\"viewServerInstance('+\"'\" + rowObject[\"id\"]+ \"'\"+')\">' + cellvalue + '</a>' ;\n");
        out.write("\t\t\t");
      }
      if (_jspx_th_sec_005fauthorize_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f7);
      _jspx_th_sec_005fauthorize_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f7, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f8(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f8 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f8_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f8.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f8.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(631,3) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f8.setAccess("!hasAuthority('VIEW_SERVER_AND_SERVER_INSTANCES')");
      int _jspx_eval_sec_005fauthorize_005f8 = _jspx_th_sec_005fauthorize_005f8.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f8 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t\t\treturn cellvalue;\n");
        out.write("\t\t\t");
      }
      if (_jspx_th_sec_005fauthorize_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f8);
      _jspx_th_sec_005fauthorize_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f8, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f77(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f77 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f77_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f77.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f77.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(836,24) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f77.setCode("server.instance.sync.header.label.instance.name");
      int[] _jspx_push_body_count_spring_005fmessage_005f77 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f77 = _jspx_th_spring_005fmessage_005f77.doStartTag();
        if (_jspx_th_spring_005fmessage_005f77.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f77[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f77.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f77.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f77);
      _jspx_th_spring_005fmessage_005f77_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f77, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f77_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f78(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f78 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f78_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f78.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f78.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(837,24) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f78.setCode("server.instance.sync.header.label.server.ip");
      int[] _jspx_push_body_count_spring_005fmessage_005f78 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f78 = _jspx_th_spring_005fmessage_005f78.doStartTag();
        if (_jspx_th_spring_005fmessage_005f78.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f78[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f78.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f78.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f78);
      _jspx_th_spring_005fmessage_005f78_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f78, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f78_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f79(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f79 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f79_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f79.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f79.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(838,24) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f79.setCode("server.instance.sync.header.label.server.port");
      int[] _jspx_push_body_count_spring_005fmessage_005f79 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f79 = _jspx_th_spring_005fmessage_005f79.doStartTag();
        if (_jspx_th_spring_005fmessage_005f79.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f79[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f79.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f79.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f79);
      _jspx_th_spring_005fmessage_005f79_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f79, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f79_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f80(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f80 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f80_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f80.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f80.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(839,39) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f80.setCode("server.instance.sync.header.label.server.status");
      int[] _jspx_push_body_count_spring_005fmessage_005f80 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f80 = _jspx_th_spring_005fmessage_005f80.doStartTag();
        if (_jspx_th_spring_005fmessage_005f80.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f80[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f80.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f80.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f80);
      _jspx_th_spring_005fmessage_005f80_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f80, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f80_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f81(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f81 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f81_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f81.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f81.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(886,23) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f81.setCode("server.instance.sync.header.label.instance.name");
      int[] _jspx_push_body_count_spring_005fmessage_005f81 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f81 = _jspx_th_spring_005fmessage_005f81.doStartTag();
        if (_jspx_th_spring_005fmessage_005f81.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f81[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f81.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f81.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f81);
      _jspx_th_spring_005fmessage_005f81_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f81, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f81_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f82(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f82 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f82_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f82.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f82.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(887,23) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f82.setCode("server.instance.sync.header.label.server.ip");
      int[] _jspx_push_body_count_spring_005fmessage_005f82 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f82 = _jspx_th_spring_005fmessage_005f82.doStartTag();
        if (_jspx_th_spring_005fmessage_005f82.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f82[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f82.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f82.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f82);
      _jspx_th_spring_005fmessage_005f82_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f82, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f82_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f83(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f83 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f83_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f83.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f83.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(888,23) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f83.setCode("server.instance.sync.header.label.server.port");
      int[] _jspx_push_body_count_spring_005fmessage_005f83 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f83 = _jspx_th_spring_005fmessage_005f83.doStartTag();
        if (_jspx_th_spring_005fmessage_005f83.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f83[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f83.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f83.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f83);
      _jspx_th_spring_005fmessage_005f83_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f83, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f83_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f84(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f84 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f84_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f84.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f84.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(889,38) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f84.setCode("server.instance.sync.header.label.server.status");
      int[] _jspx_push_body_count_spring_005fmessage_005f84 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f84 = _jspx_th_spring_005fmessage_005f84.doStartTag();
        if (_jspx_th_spring_005fmessage_005f84.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f84[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f84.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f84.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f84);
      _jspx_th_spring_005fmessage_005f84_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f84, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f84_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f85(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f85 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f85_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f85.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f85.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(986,151) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f85.setCode("server.instance.copy.from.label");
      int[] _jspx_push_body_count_spring_005fmessage_005f85 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f85 = _jspx_th_spring_005fmessage_005f85.doStartTag();
        if (_jspx_th_spring_005fmessage_005f85.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f85[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f85.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f85.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f85);
      _jspx_th_spring_005fmessage_005f85_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f85, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f85_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f86(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f86 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f86_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f86.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f86.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(986,244) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f86.setCode("server.instance.sync.header.label.instance.name");
      int[] _jspx_push_body_count_spring_005fmessage_005f86 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f86 = _jspx_th_spring_005fmessage_005f86.doStartTag();
        if (_jspx_th_spring_005fmessage_005f86.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f86[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f86.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f86.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f86);
      _jspx_th_spring_005fmessage_005f86_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f86, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f86_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f87(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f87 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f87_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f87.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f87.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(986,353) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f87.setCode("server.instance.sync.header.label.server.ip");
      int[] _jspx_push_body_count_spring_005fmessage_005f87 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f87 = _jspx_th_spring_005fmessage_005f87.doStartTag();
        if (_jspx_th_spring_005fmessage_005f87.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f87[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f87.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f87.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f87);
      _jspx_th_spring_005fmessage_005f87_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f87, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f87_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f88(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f88 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f88_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f88.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f88.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(986,458) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f88.setCode("server.instance.sync.header.label.server.port");
      int[] _jspx_push_body_count_spring_005fmessage_005f88 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f88 = _jspx_th_spring_005fmessage_005f88.doStartTag();
        if (_jspx_th_spring_005fmessage_005f88.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f88[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f88.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f88.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f88);
      _jspx_th_spring_005fmessage_005f88_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f88, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f88_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f89(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f89 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f89_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f89.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f89.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(991,112) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f89.setCode("server.instance.copy.to.label");
      int[] _jspx_push_body_count_spring_005fmessage_005f89 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f89 = _jspx_th_spring_005fmessage_005f89.doStartTag();
        if (_jspx_th_spring_005fmessage_005f89.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f89[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f89.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f89.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f89);
      _jspx_th_spring_005fmessage_005f89_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f89, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f89_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f90(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f90 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f90_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f90.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f90.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(991,203) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f90.setCode("server.instance.sync.header.label.instance.name");
      int[] _jspx_push_body_count_spring_005fmessage_005f90 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f90 = _jspx_th_spring_005fmessage_005f90.doStartTag();
        if (_jspx_th_spring_005fmessage_005f90.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f90[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f90.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f90.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f90);
      _jspx_th_spring_005fmessage_005f90_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f90, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f90_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f91(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f91 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f91_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f91.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f91.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(991,312) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f91.setCode("server.instance.sync.header.label.server.ip");
      int[] _jspx_push_body_count_spring_005fmessage_005f91 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f91 = _jspx_th_spring_005fmessage_005f91.doStartTag();
        if (_jspx_th_spring_005fmessage_005f91.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f91[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f91.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f91.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f91);
      _jspx_th_spring_005fmessage_005f91_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f91, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f91_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f92(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f92 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f92_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f92.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f92.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(991,417) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f92.setCode("server.instance.sync.header.label.server.port");
      int[] _jspx_push_body_count_spring_005fmessage_005f92 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f92 = _jspx_th_spring_005fmessage_005f92.doStartTag();
        if (_jspx_th_spring_005fmessage_005f92.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f92[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f92.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f92.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f92);
      _jspx_th_spring_005fmessage_005f92_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f92, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f92_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f93(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f93 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f93_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f93.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f93.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(991,539) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f93.setCode("server.instance.sync.header.label.server.copy.status");
      int[] _jspx_push_body_count_spring_005fmessage_005f93 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f93 = _jspx_th_spring_005fmessage_005f93.doStartTag();
        if (_jspx_th_spring_005fmessage_005f93.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f93[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f93.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f93.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f93);
      _jspx_th_spring_005fmessage_005f93_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f93, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f93_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f94(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f94 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f94_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f94.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f94.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(1032,23) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f94.setCode("server.instance.sync.header.label.instance.name");
      int[] _jspx_push_body_count_spring_005fmessage_005f94 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f94 = _jspx_th_spring_005fmessage_005f94.doStartTag();
        if (_jspx_th_spring_005fmessage_005f94.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f94[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f94.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f94.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f94);
      _jspx_th_spring_005fmessage_005f94_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f94, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f94_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f95(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f95 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f95_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f95.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f95.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(1033,23) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f95.setCode("server.instance.sync.header.label.server.ip");
      int[] _jspx_push_body_count_spring_005fmessage_005f95 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f95 = _jspx_th_spring_005fmessage_005f95.doStartTag();
        if (_jspx_th_spring_005fmessage_005f95.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f95[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f95.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f95.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f95);
      _jspx_th_spring_005fmessage_005f95_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f95, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f95_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f96(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f96 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f96_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f96.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f96.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(1034,23) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f96.setCode("server.instance.sync.header.label.server.port");
      int[] _jspx_push_body_count_spring_005fmessage_005f96 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f96 = _jspx_th_spring_005fmessage_005f96.doStartTag();
        if (_jspx_th_spring_005fmessage_005f96.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f96[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f96.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f96.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f96);
      _jspx_th_spring_005fmessage_005f96_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f96, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f96_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f97(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f97 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f97_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f97.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f97.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(1035,38) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f97.setCode("server.instance.sync.header.label.server.status");
      int[] _jspx_push_body_count_spring_005fmessage_005f97 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f97 = _jspx_th_spring_005fmessage_005f97.doStartTag();
        if (_jspx_th_spring_005fmessage_005f97.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f97[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f97.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f97.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f97);
      _jspx_th_spring_005fmessage_005f97_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f97, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f97_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f98(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f98 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f98_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f98.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f98.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(1541,28) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f98.setCode("serverMgmt.no.to.instance.checked.warning");
      int[] _jspx_push_body_count_spring_005fmessage_005f98 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f98 = _jspx_th_spring_005fmessage_005f98.doStartTag();
        if (_jspx_th_spring_005fmessage_005f98.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f98[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f98.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f98.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f98);
      _jspx_th_spring_005fmessage_005f98_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f98, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f98_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f99(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f99 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f99_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f99.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f99.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(1546,28) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f99.setCode("serverMgmt.no.from.instance.checked.warning");
      int[] _jspx_push_body_count_spring_005fmessage_005f99 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f99 = _jspx_th_spring_005fmessage_005f99.doStartTag();
        if (_jspx_th_spring_005fmessage_005f99.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f99[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f99.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f99.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f99);
      _jspx_th_spring_005fmessage_005f99_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f99, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f99_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f9(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f9 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f9_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f9.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f9.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(1665,7) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f9.setAccess("hasAuthority('SERVER_INSTANCE_STOP')");
      int _jspx_eval_sec_005fauthorize_005f9 = _jspx_th_sec_005fauthorize_005f9.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f9 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t\t\t\t\t\t$('#loader_'+serverInstanceId).html('<div id=\"'+toggleIdDiv+'\"><input class=\"checkboxbg\" id=' + toggleId + ' data-on=\"On\" data-off=\"Off\" checked type=\"checkbox\" data-size=\"mini\"></div>');\n");
        out.write("\t\t\t\t\t\t\t");
      }
      if (_jspx_th_sec_005fauthorize_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f9);
      _jspx_th_sec_005fauthorize_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f9, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f10(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f10 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f10_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f10.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f10.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(1668,7) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f10.setAccess("!hasAuthority('SERVER_INSTANCE_STOP')");
      int _jspx_eval_sec_005fauthorize_005f10 = _jspx_th_sec_005fauthorize_005f10.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f10 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t\t\t\t\t\t$('#loader_'+serverInstanceId).html('<div id=\"'+toggleIdDiv+'\"><input class=\"checkboxbg\" id=' + toggleId + ' data-on=\"On\" data-off=\"Off\" checked type=\"checkbox\" data-size=\"mini\" disabled></div>');\n");
        out.write("\t\t\t\t\t\t\t");
      }
      if (_jspx_th_sec_005fauthorize_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f10);
      _jspx_th_sec_005fauthorize_005f10_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f10, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f10_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f11(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f11 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f11_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f11.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f11.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(1672,8) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f11.setAccess("hasAuthority('SERVER_INSTANCE_START')");
      int _jspx_eval_sec_005fauthorize_005f11 = _jspx_th_sec_005fauthorize_005f11.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f11 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t\t \t\t\t\t$('#loader_'+serverInstanceId).html('<div id=\"'+toggleIdDiv+'\"><input class=\"checkboxbg\" id=' + toggleId + ' data-on=\"On\" data-off=\"Off\" type=\"checkbox\" data-size=\"mini\"></div>');\n");
        out.write("\t\t\t \t\t\t\t");
      }
      if (_jspx_th_sec_005fauthorize_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f11);
      _jspx_th_sec_005fauthorize_005f11_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f11, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f11_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f12(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f12 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f12_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f12.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f12.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(1675,8) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f12.setAccess("!hasAuthority('SERVER_INSTANCE_START')");
      int _jspx_eval_sec_005fauthorize_005f12 = _jspx_th_sec_005fauthorize_005f12.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f12 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t\t \t\t\t\t$('#loader_'+serverInstanceId).html('<div id=\"'+toggleIdDiv+'\"><input class=\"checkboxbg\" id=' + toggleId + ' data-on=\"On\" data-off=\"Off\" type=\"checkbox\" data-size=\"mini\" disabled></div>');\n");
        out.write("\t\t\t \t\t\t\t");
      }
      if (_jspx_th_sec_005fauthorize_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f12);
      _jspx_th_sec_005fauthorize_005f12_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f12, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f12_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f13(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f13 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f13_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f13.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f13.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(1680,6) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f13.setAccess("hasAuthority('SERVER_INSTANCE_START')");
      int _jspx_eval_sec_005fauthorize_005f13 = _jspx_th_sec_005fauthorize_005f13.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f13 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t\t\t\t\t$('#loader_'+serverInstanceId).html('<div id=\"'+toggleIdDiv+'\"><input class=\"checkboxbg\" id=' + toggleId + ' data-on=\"On\" data-off=\"Off\" type=\"checkbox\" data-size=\"mini\"></div>');\n");
        out.write("\t\t\t\t\t\t");
      }
      if (_jspx_th_sec_005fauthorize_005f13.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f13);
      _jspx_th_sec_005fauthorize_005f13_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f13, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f13_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f14(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f14 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f14_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f14.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f14.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(1683,6) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f14.setAccess("!hasAuthority('SERVER_INSTANCE_START')");
      int _jspx_eval_sec_005fauthorize_005f14 = _jspx_th_sec_005fauthorize_005f14.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f14 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t\t\t\t\t$('#loader_'+serverInstanceId).html('<div id=\"'+toggleIdDiv+'\"><input class=\"checkboxbg\" id=' + toggleId + ' data-on=\"On\" data-off=\"Off\" type=\"checkbox\" data-size=\"mini\" disabled></div>');\n");
        out.write("\t\t\t\t\t\t");
      }
      if (_jspx_th_sec_005fauthorize_005f14.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f14);
      _jspx_th_sec_005fauthorize_005f14_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f14, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f14_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f100(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f100 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f100_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f100.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f100.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(1700,38) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f100.setCode("engine.trial.license.msg");
      int[] _jspx_push_body_count_spring_005fmessage_005f100 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f100 = _jspx_th_spring_005fmessage_005f100.doStartTag();
        if (_jspx_th_spring_005fmessage_005f100.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f100[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f100.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f100.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f100);
      _jspx_th_spring_005fmessage_005f100_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f100, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f100_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f15(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f15 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f15_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f15.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f15.setParent(null);
      // /WEB-INF/jsp/server/serverMgmt.jsp(1713,5) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f15.setAccess("hasAuthority('SERVER_INSTANCE_SYNCHRONIZATION')");
      int _jspx_eval_sec_005fauthorize_005f15 = _jspx_th_sec_005fauthorize_005f15.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f15 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t\t\t\t//$('#synch_'+serverInstanceId).attr(\"onclick\",\"synchInstanceById('\"+serverInstanceId+\"')\");\n");
        out.write("\t\t\t\t\t");
      }
      if (_jspx_th_sec_005fauthorize_005f15.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f15);
      _jspx_th_sec_005fauthorize_005f15_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f15, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f15_reused);
    }
    return false;
  }
}
