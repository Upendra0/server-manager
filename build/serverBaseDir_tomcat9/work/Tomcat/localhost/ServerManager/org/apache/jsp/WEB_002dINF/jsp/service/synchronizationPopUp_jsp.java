/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.34
 * Generated at: 2023-11-13 06:50:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.service;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.elitecore.sm.common.constants.ControllerConstants;

public final class synchronizationPopUp_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/home/upendra/.gradle/caches/modules-2/files-2.1/org.springframework.security/spring-security-taglibs/5.5.7/757234463d9633361d863c14e1b81dd82e16482e/spring-security-taglibs-5.5.7.jar!/META-INF/security.tld", Long.valueOf(1652702070000L));
    _jspx_dependants.put("file:/home/upendra/.gradle/caches/modules-2/files-2.1/org.springframework.security/spring-security-taglibs/5.5.7/757234463d9633361d863c14e1b81dd82e16482e/spring-security-taglibs-5.5.7.jar", Long.valueOf(1679656227262L));
    _jspx_dependants.put("file:/home/upendra/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/5.3.20/8ac1b72a1f5c41fdc2cb3340cd94f795af260301/spring-webmvc-5.3.20.jar", Long.valueOf(1679656233526L));
    _jspx_dependants.put("jar:file:/home/upendra/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/5.3.20/8ac1b72a1f5c41fdc2cb3340cd94f795af260301/spring-webmvc-5.3.20.jar!/META-INF/spring.tld", Long.valueOf(1652232424000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.elitecore.sm.common.constants.ControllerConstants");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.release();
    _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"modal-content\">\n");
      out.write("\t\t        <div class=\"modal-header padding10\">\n");
      out.write("\t\t            <h4 class=\"modal-title\">");
      if (_jspx_meth_spring_005fmessage_005f0(_jspx_page_context))
        return;
      out.write("</h4>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div class=\"modal-body padding10 inline-form\">\n");
      out.write("\t        \t\t<div id=\"divSyncMsg\">\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<div id=\"divSyncAllMsg\" >\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t        <p>\n");
      out.write("\t\t\t        \t<input type='hidden' id=\"syncServiceId\" value=\"\"/>\n");
      out.write("\t\t\t        \t<input type='hidden' id=\"service_status\" value=\"\" />\n");
      out.write("\t\t\t        \t<input type='hidden' id=\"syncServiceName\" value=\"\" />\n");
      out.write("\t\t\t        \t<input type='hidden' id=\"syncServiceInstanceId\" value=\"\" />\n");
      out.write("\t\t\t        \t\n");
      out.write("\t\t\t        \t<table style='width:100%'>\n");
      out.write("\t\t\t        \t\t<tr>\n");
      out.write("\t\t\t        \t\t\t<td width=\"100%\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<div id=\"divServiceList\">\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t        \t\t\t</td>\n");
      out.write("\t\t\t        \t\t</tr>\n");
      out.write("\t\t\t        \t</table>\n");
      out.write("\t\t\t        </p>\n");
      out.write("\t\t\t\t\t<p id=\"synchronizeSvcPopUpMsg\" class=\"synchronizeSvcPopUpMsgClass\">\t           \t\n");
      out.write("\t\t\t           \t<span class=\"note\">");
      if (_jspx_meth_spring_005fmessage_005f1(_jspx_page_context))
        return;
      out.write("</span><br/><br/>\n");
      out.write("\t\t\t           \t");
      if (_jspx_meth_spring_005fmessage_005f2(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t        </p>\n");
      out.write("\t\t\t        <p id=\"synchronizeSvcPopUpNote\" style=\"display:none\">\t           \t\n");
      out.write("\t\t\t           \t<span class=\"note\">");
      if (_jspx_meth_spring_005fmessage_005f3(_jspx_page_context))
        return;
      out.write("</span><br/><br/>\n");
      out.write("\t\t\t           \t");
      if (_jspx_meth_spring_005fmessage_005f4(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t\t        </p>\n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div id=\"synch-popup-buttons-div\" class=\"modal-footer padding10\">\n");
      out.write("\t\t        \t");
      if (_jspx_meth_sec_005fauthorize_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t\t            <button type=\"button\" class=\"btn btn-grey btn-xs \" id=\"cancelSyncBtn\" data-dismiss=\"modal\" onclick=\"closeFancyBox();\">");
      if (_jspx_meth_spring_005fmessage_005f6(_jspx_page_context))
        return;
      out.write("</button>\n");
      out.write("\t\t           \n");
      out.write("\t\t            <button type=\"button\" class=\"btn btn-grey btn-xs \" id=\"service-synchCloseBtn\" data-dismiss=\"modal\" onclick=\"closeFancyBox();searchInstanceCriteria();\" style=\"display: none;\">");
      if (_jspx_meth_spring_005fmessage_005f7(_jspx_page_context))
        return;
      out.write("</button>\n");
      out.write("\t\t            <button type=\"button\" class=\"btn btn-grey btn-xs \" id=\"server-synchCloseBtn\" data-dismiss=\"modal\" onclick=\"closeFancyBox();clearServiceSummaryInstanceGrid();\" style=\"display: none;\">");
      if (_jspx_meth_spring_005fmessage_005f8(_jspx_page_context))
        return;
      out.write("</button>\n");
      out.write("\t\t            <button type=\"button\" class=\"btn btn-grey btn-xs \" id=\"summary-synchCloseBtn\" data-dismiss=\"modal\" onclick=\"closeFancyBox();loadServiceSummaryPage();\" style=\"display: none;\">");
      if (_jspx_meth_spring_005fmessage_005f9(_jspx_page_context))
        return;
      out.write("</button>\n");
      out.write("\t\t            \n");
      out.write("\t\t            \n");
      out.write("\t\t        </div>\n");
      out.write("\t\t        <div id=\"synch-popup-progress-bar-div\" class=\"modal-footer padding10 text-left\" style=\"display: none;\">\n");
      out.write("\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/processing-bar.jsp", out, false);
      out.write("\n");
      out.write("\t\t\t\t</div>\t\n");
      out.write("\t\t    </div>\n");
      out.write("\t\t    <!-- /.modal-content -->\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write(" function syncServiceInstanceById(id){\n");
      out.write("\t\n");
      out.write("\tclearAllMessages();\n");
      out.write("\t$(\"#syncPopupBtn\").show();\n");
      out.write("\t$(\"#cancelSyncBtn\").show();\n");
      out.write("\t$(\"#server-synchCloseBtn\").hide();\n");
      out.write("\t$(\"#service-synchCloseBtn\").hide();\n");
      out.write("\t$(\"#summary-synchCloseBtn\").hide();\n");
      out.write("\t$(\"#synchronizeSvcPopUpNote\").hide();\n");
      out.write("   \n");
      out.write("\tvar rowId = id;\n");
      out.write("\tvar serviceId , serviceName,serviceInstanceId;\n");
      out.write("  \tif(currentTab == 'SERVICE_MANAGEMENT'){\n");
      out.write("  \t\tvar rowData = jQuery(\"#serviceInstanceList\").getRowData(id); \n");
      out.write("  \t    var ch = jQuery(\"#serviceInstanceList\").find('#'+id+' input[type=checkbox]').prop('checked',true);\n");
      out.write("\t\tserviceId= jQuery('#serviceInstanceList').jqGrid ('getCell',rowId, 'servInstanceId' );\n");
      out.write("\t\tserviceInstanceId=jQuery('#serviceInstanceList').jqGrid ('getCell',rowId, 'servInstanceId' );\n");
      out.write("\t\tparent.ckIntanceSelected[0] = id;\n");
      out.write("  \t  \t\n");
      out.write("  \t    serviceName = $(jQuery('#serviceInstanceList').jqGrid ('getCell', id, 'serviceName')).closest(\"a\").html();\n");
      out.write("  \t}\n");
      out.write("\n");
      out.write("  \tif(currentTab == 'COLLECTION_SERVICE_SUMMARY'){\n");
      out.write("\t\t serviceId = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\t\t serviceName ='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\t\t serviceInstanceId='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceInstanceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("  \t// same variable used for Netflow Collection & Netflow Binary Collection & Syslog Collection service\n");
      out.write("  \tif(currentTab == 'NETFLOW_COLLECTION_SERVICE_SUMMARY'){\n");
      out.write("\t\t serviceId = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\t\t serviceName ='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\t\t serviceInstanceId='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceInstanceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\t}\n");
      out.write("  \t\n");
      out.write("  \tif(currentTab == 'UPDATE_INSTANCE_SUMMARY'){\n");
      out.write("  \t\tserviceId = id ;\n");
      out.write("  \t\tserviceName = $(\"#syncServiceName\").val();\n");
      out.write("  \t\tserviceInstanceId=$(\"#syncServiceInstanceId\").val();\n");
      out.write("\t}\n");
      out.write("  \t\n");
      out.write("  \tif(currentTab == 'IPLOG_SERVICE_SUMMARY'|| currentTab == 'PARSING_SERVICE_SUMMARY' || currentTab == 'CONSOLIDATION_SERVICE_SUMMARY'){\n");
      out.write("  \t\tserviceId = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\t\tserviceName ='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\t\tserviceInstanceId='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceInstanceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\t}\n");
      out.write("  \t\n");
      out.write("  \tif(currentTab == 'PROCESSING_SERVICE_SUMMARY'){\n");
      out.write("  \t\tserviceId = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\t\tserviceName ='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\t\tserviceInstanceId='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceInstanceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("  \t}\n");
      out.write("  \t\n");
      out.write("  \tif(currentTab == 'DISTRIBUTION_SERVICE_SUMMARY'){\n");
      out.write("  \t\tserviceId = id ;\n");
      out.write("  \t\tserviceName ='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("  \t\tserviceInstanceId='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceInstanceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\t}\n");
      out.write("  \t\n");
      out.write("  \tif(currentTab == 'AGGREGATION_SERVICE_SUMMARY'){\n");
      out.write("  \t\tserviceId = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\t\tserviceName ='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\t\tserviceInstanceId='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceInstanceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("  \t}\n");
      out.write("  \t\n");
      out.write("\tif(currentTab == 'DIAMETER_COLLECTION_SERVICE_SUMMARY'){\n");
      out.write("\t\t serviceId = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\t\t serviceName ='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\t\t serviceInstanceId='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceInstanceId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\t}\n");
      out.write("  \t\n");
      out.write("\t$(\"#divServiceList\").html('');\n");
      out.write("\t$('#divSyncAllMsg').html('');\n");
      out.write("\tvar tableString ='<table class=\"table table-hover\" style=\"width:100%\">';\n");
      out.write("\ttableString += \"<tr>\";\n");
      out.write("\ttableString += \"<th>");
      if (_jspx_meth_spring_005fmessage_005f10(_jspx_page_context))
        return;
      out.write("</th>\";\n");
      out.write("\ttableString += \"<th>");
      if (_jspx_meth_spring_005fmessage_005f11(_jspx_page_context))
        return;
      out.write("</th>\";\n");
      out.write("\ttableString += \"<th class='status'>");
      if (_jspx_meth_spring_005fmessage_005f12(_jspx_page_context))
        return;
      out.write("</th>\";\n");
      out.write("\ttableString += \"</tr>\";\n");
      out.write("\ttableString += \"<tr>\";\n");
      out.write("\ttableString += \"<td hidden='true'>\"+serviceId+\"</td>\";\n");
      out.write("\ttableString += \"<td>\"+serviceInstanceId+\"</td>\";\n");
      out.write("\ttableString += \"<td>\"+serviceName+\"</td>\";\n");
      out.write("\t\n");
      out.write("\ttableString += \"<td class='status' id='res_\"+rowId+\"'></td>\";\n");
      out.write("\ttableString += \"</tr>\";\n");
      out.write("\ttableString += \"</table>\"\n");
      out.write("\t$(\"#divServiceList\").html(tableString);\n");
      out.write("\t$('.status').hide();\n");
      out.write("\t\n");
      out.write("\t$('#divSyncMsg').html('');\n");
      out.write("\tif(currentTab == 'UPDATE_INSTANCE_SUMMARY'){\n");
      out.write("\t\t$(\"#syncServiceInstance\").click();\n");
      out.write("\t}else if(currentTab == 'DISTRIBUTION_SERVICE_SUMMARY'){\n");
      out.write("\t\t$(\"#synchronize_service_link\").click();\t\n");
      out.write("\t}else{\n");
      out.write("\t\t$(\"#synchronize\").click();\t\n");
      out.write("\t}\n");
      out.write("\t// set instnce id to synchronize\n");
      out.write("\t$(\"#syncServiceId\").val(serviceId);\n");
      out.write("}\n");
      out.write("\n");
      out.write("function syncServiceInstances(){\n");
      out.write("\t\n");
      out.write("\t$(\"#synch-popup-buttons-div\").hide();\n");
      out.write("\t$(\"#synch-popup-progress-bar-div\").show();\n");
      out.write("\tclearAllMessages();\n");
      out.write("\tvar serviceInstanceStatus = \"\" ;\n");
      out.write("\t\n");
      out.write("\tvar rowId;\n");
      out.write("\tif(currentTab == 'SERVICE_MANAGEMENT'){\n");
      out.write("\t\trowId = $(\"#syncServiceId\").val();\n");
      out.write("\t\t$.each(parent.ckIntanceSelected, function(key,val){\n");
      out.write("\t\t\tserviceInstanceStatus += checkInstanceState(val) + \",\";\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tif(currentTab == 'COLLECTION_SERVICE_SUMMARY'){\n");
      out.write("\t\tserviceInstanceStatus+= $(\"#serviceStatus\").val();\n");
      out.write("\t\tparent.ckIntanceSelected[0] = $(\"#serviceId\").val();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tif(currentTab == 'NETFLOW_COLLECTION_SERVICE_SUMMARY'){\n");
      out.write("\t\tserviceInstanceStatus+= $(\"#serviceStatus\").val();\n");
      out.write("\t\tparent.ckIntanceSelected[0] = $(\"#serviceId\").val();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tif(currentTab == 'IPLOG_SERVICE_SUMMARY' || currentTab == 'PARSING_SERVICE_SUMMARY'){\n");
      out.write("\t\tserviceInstanceStatus+= $(\"#serviceStatus\").val();\n");
      out.write("\t\tparent.ckIntanceSelected[0] = $(\"#serviceId\").val();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\tif(currentTab == 'PROCESSING_SERVICE_SUMMARY'){\n");
      out.write("\t\tserviceInstanceStatus+= $(\"#serviceStatus\").val();\n");
      out.write("\t\tparent.ckIntanceSelected[0] = $(\"#serviceId\").val();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tif(currentTab == 'CONSOLIDATION_SERVICE_SUMMARY'){\n");
      out.write("\t\tserviceInstanceStatus+= $(\"#serviceStatus\").val();\n");
      out.write("\t\tparent.ckIntanceSelected[0] = $(\"#serviceId\").val();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tif(currentTab == 'UPDATE_INSTANCE_SUMMARY'){\n");
      out.write("\t\tckIntanceSelected[0] = $(\"#syncServiceId\").val();\n");
      out.write("\t\tserviceInstanceStatus+= checkServiceInstanceStatus(ckIntanceSelected[0]);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tif(currentTab == 'DISTRIBUTION_SERVICE_SUMMARY'){\n");
      out.write("\t\tparent.ckIntanceSelected[0] = $(\"#syncServiceId\").val();\n");
      out.write("\t\tserviceInstanceStatus = $(\"#serviceStatus\").val();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tif(currentTab == 'AGGREGATION_SERVICE_SUMMARY'){\n");
      out.write("\t\tparent.ckIntanceSelected[0] = $(\"#syncServiceId\").val();\n");
      out.write("\t\tserviceInstanceStatus = $(\"#serviceStatus\").val();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tif(currentTab == 'DIAMETER_COLLECTION_SERVICE_SUMMARY'){\n");
      out.write("\t\tserviceInstanceStatus+= $(\"#serviceStatus\").val();\n");
      out.write("\t\tparent.ckIntanceSelected[0] = $(\"#serviceId\").val();\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t$(\".status\").show();\n");
      out.write("\t$(\"#syncPopupBtn\").show();\n");
      out.write("\t$(\"#cancelSyncBtn\").show();\n");
      out.write("\t$(\"#synchCloseBtn\").hide();\n");
      out.write("\t\n");
      out.write("\t$.ajax({\n");
      out.write("\t\t\turl: '");
      out.print( ControllerConstants.SYNC_SERVICE_INSTANCE );
      out.write("',\n");
      out.write("\t\t\t    cache: false,\n");
      out.write("\t\t\t\tasync: true,\n");
      out.write("\t\t\t\tdataType: 'json',\n");
      out.write("\t\t\t\ttype: \"POST\",\n");
      out.write("\t\t\t\tdata: {\n");
      out.write("\t\t\t\t\t'serviceInstanceId': parent.ckIntanceSelected.join(),\n");
      out.write("\t\t\t\t\t'serviceInstancesStatus':serviceInstanceStatus\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\tsuccess: function(data){\n");
      out.write("\t\t\t\t\t//$(\"#synch-popup-buttons-div\").hide();\n");
      out.write("\t\t\t\t\t//$(\"#synch-popup-progress-bar-div\").show();\n");
      out.write("\t\t\t\t\tvar response = eval(data);\n");
      out.write("\t\t\t    \tresponse.msg = decodeMessage(response.msg);\n");
      out.write("\t\t\t    \tresponse.msg = replaceAll(\"+\",\" \",response.msg);\n");
      out.write("\t\n");
      out.write("\t\t\t    \t$('#divSyncMsg').find('.title').html(response.msg);\n");
      out.write("\t\t\t    \tif(response.code == 200 || response.code == \"200\") {\n");
      out.write("\t\t\t    \t\t\n");
      out.write("\t\t\t    \t\tclearResponseMsgDiv();\n");
      out.write("\t\t\t    \t\tclearResponseMsg();\n");
      out.write("\t\t\t    \t\tclearErrorMsg();\n");
      out.write("\t\t\t    \t\t$(\"#synchronizeSvcPopUpMsg\").hide();\n");
      out.write("\t\t\t    \t\tparent.ckIntanceSelected = new Array();\n");
      out.write("\n");
      out.write("\t\t\t    \t\tvar responseCode = data.code;\n");
      out.write("\t\t\t    \t\tif(currentTab == 'SERVICE_MANAGEMENT' || currentTab == 'COLLECTION_SERVICE_SUMMARY' || currentTab == 'NETFLOW_COLLECTION_SERVICE_SUMMARY' || currentTab == 'IPLOG_SERVICE_SUMMARY' || currentTab == 'PARSING_SERVICE_SUMMARY'|| currentTab == 'DISTRIBUTION_SERVICE_SUMMARY' || currentTab == 'PROCESSING_SERVICE_SUMMARY' || currentTab == 'CONSOLIDATION_SERVICE_SUMMARY' || currentTab == 'DIAMETER_COLLECTION_SERVICE_SUMMARY'){\n");
      out.write("\t\t\t    \t\t\t$('#divSyncMsg').html('<span class=\"title\" style=\"color:black;font-weight:bolder\">'+response.msg+'</span>');\t\n");
      out.write("\t\t\t    \t\t}else if(currentTab == 'UPDATE_INSTANCE_SUMMARY'){\n");
      out.write("\t\t\t    \t\t\t$('#divSyncAllMsg').html('<span class=\"title\" style=\"color:black;font-weight:bolder\">'+response.msg+'</span>');\t\n");
      out.write("\t\t    \t\t\t}\n");
      out.write("\t\t\t    \t\t\n");
      out.write("\t\t    \t\t\tvar response = data.object;\n");
      out.write("\t\t    \t\t\t$.each(response, function(key,val){\n");
      out.write("\t\t    \t\t\t\tvar resObj = val;\n");
      out.write("\t\t    \t\t\t\tif(resObj.code == \"702\") {\n");
      out.write("\t\t    \t\t\t\t\t$('#res_'+key).text(resObj.msg+\" Click the link to Configure License Circle \");\n");
      out.write("\t\t    \t\t\t\t\t$('#res_'+key).append(\"<form method='get' action='initCircleConfigurationManager'><a href='#' onclick='parentNode.submit()' >Configure</a></form>\");\n");
      out.write("\t\t    \t\t\t\t}else {\n");
      out.write("\t\t    \t\t\t\t\t$('#res_'+key).text(resObj.msg);\n");
      out.write("\t\t    \t\t\t\t}\t\t    \t\t\t    \n");
      out.write("\t\t    \t\t\t});\n");
      out.write("\t\t    \t\t\t$(\".status\").show();\n");
      out.write("\t\t    \t\t\t\n");
      out.write("\t\t    \t\t\t\n");
      out.write("\t\t    \t\t\t$(\"#synch-popup-progress-bar-div\").hide();\n");
      out.write("\t\t    \t\t\t$(\"#synch-popup-buttons-div\").show();\n");
      out.write("\t\t    \t\t\t$(\"#syncPopupBtn\").hide();\n");
      out.write("\t\t    \t\t\t$(\"#cancelSyncBtn\").hide();\n");
      out.write("\t\t    \t\t\t$(\"#synchronizeSvcPopUpNote\").show();\n");
      out.write("\t\t    \t\t\tif(currentTab == 'SERVICE_MANAGEMENT'){\n");
      out.write("\t\t    \t\t\t\t$(\"#service-synchCloseBtn\").show(); \n");
      out.write("\t\t    \t\t\t}else if(currentTab == 'UPDATE_INSTANCE_SUMMARY'){\n");
      out.write("\t\t    \t\t\t\t$(\"#server-synchCloseBtn\").show();\n");
      out.write("\t\t    \t\t\t}else if (currentTab == 'COLLECTION_SERVICE_SUMMARY' ||  currentTab == 'DISTRIBUTION_SERVICE_SUMMARY'){\n");
      out.write("\t\t    \t\t\t\t$(\"#summary-synchCloseBtn\").show();\n");
      out.write("\t\t    \t\t\t} else if (currentTab == 'NETFLOW_COLLECTION_SERVICE_SUMMARY'){\n");
      out.write("\t\t    \t\t\t\t$(\"#summary-synchCloseBtn\").show();\n");
      out.write("\t\t    \t\t\t} else if (currentTab == 'IPLOG_SERVICE_SUMMARY'|| currentTab == 'PARSING_SERVICE_SUMMARY' || currentTab == 'PROCESSING_SERVICE_SUMMARY' || currentTab == 'CONSOLIDATION_SERVICE_SUMMARY'\n");
      out.write("\t\t    \t\t\t\t\t|| currentTab == 'AGGREGATION_SERVICE_SUMMARY' || currentTab == 'DIAMETER_COLLECTION_SERVICE_SUMMARY'){\n");
      out.write("\t\t    \t\t\t\t$(\"#summary-synchCloseBtn\").show();\n");
      out.write("\t\t    \t\t\t}\n");
      out.write("\t\t\t    \t}else{\n");
      out.write("\t\t\t    \t\tshowErrorMsg(response.msg);\n");
      out.write("\t\t\t    \t}\n");
      out.write("\t\t\t    \n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t    error: function (xhr,st,err){\n");
      out.write("\t\t\t    \t$(\"#synch-popup-buttons-div\").show();\n");
      out.write("\t\t\t\t\t$(\"#synch-popup-progress-bar-div\").hide();\n");
      out.write("\t\t\t    \thandleGenericError(xhr,st,err);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}); \n");
      out.write("}\n");
      out.write("\n");
      out.write("function loadServiceSummaryPage(){\n");
      out.write("\t$(\"#synchronizeSvcPopUpMsg\").show();\n");
      out.write("\t$(\"#synchronizeSvcPopUpNote\").hide();\n");
      out.write("\tif(currentTab == 'COLLECTION_SERVICE_SUMMARY'){\n");
      out.write("\t\t$(\"#collection_service_summary\").click();\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("</script>\t    \n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_spring_005fmessage_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f0 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f0_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f0.setParent(null);
      // /WEB-INF/jsp/service/synchronizationPopUp.jsp(6,38) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f0.setCode("serviceMgmt.synchronize.popup.header");
      int[] _jspx_push_body_count_spring_005fmessage_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f0 = _jspx_th_spring_005fmessage_005f0.doStartTag();
        if (_jspx_th_spring_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f0);
      _jspx_th_spring_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f1 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f1_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f1.setParent(null);
      // /WEB-INF/jsp/service/synchronizationPopUp.jsp(30,34) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f1.setCode("label.important.note");
      int[] _jspx_push_body_count_spring_005fmessage_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f1 = _jspx_th_spring_005fmessage_005f1.doStartTag();
        if (_jspx_th_spring_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f1);
      _jspx_th_spring_005fmessage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f1, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f2 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f2_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f2.setParent(null);
      // /WEB-INF/jsp/service/synchronizationPopUp.jsp(31,15) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f2.setCode("serviceMgmt.synchronize.popup.note.content");
      int[] _jspx_push_body_count_spring_005fmessage_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f2 = _jspx_th_spring_005fmessage_005f2.doStartTag();
        if (_jspx_th_spring_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f2);
      _jspx_th_spring_005fmessage_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f2, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f3 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f3_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f3.setParent(null);
      // /WEB-INF/jsp/service/synchronizationPopUp.jsp(34,34) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f3.setCode("label.important.note");
      int[] _jspx_push_body_count_spring_005fmessage_005f3 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f3 = _jspx_th_spring_005fmessage_005f3.doStartTag();
        if (_jspx_th_spring_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f3[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f3.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f3.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f3);
      _jspx_th_spring_005fmessage_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f3, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f4 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f4_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f4.setParent(null);
      // /WEB-INF/jsp/service/synchronizationPopUp.jsp(35,15) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f4.setCode("serviceMgmt.synchronize.popup.note.kafka.data.source.content");
      int[] _jspx_push_body_count_spring_005fmessage_005f4 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f4 = _jspx_th_spring_005fmessage_005f4.doStartTag();
        if (_jspx_th_spring_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f4[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f4.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f4.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f4);
      _jspx_th_spring_005fmessage_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f4, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f0 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f0_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f0.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f0.setParent(null);
      // /WEB-INF/jsp/service/synchronizationPopUp.jsp(39,11) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f0.setAccess("hasAuthority('SYNCHRONIZE_SERVICE_INSTANCE')");
      int _jspx_eval_sec_005fauthorize_005f0 = _jspx_th_sec_005fauthorize_005f0.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\n");
        out.write("\t\t            \t<button type=\"button\" class=\"btn btn-grey btn-xs\" id=\"syncPopupBtn\" onclick=\"syncServiceInstances();\">");
        if (_jspx_meth_spring_005fmessage_005f5(_jspx_th_sec_005fauthorize_005f0, _jspx_page_context))
          return true;
        out.write("</button>\n");
        out.write("\t\t            ");
      }
      if (_jspx_th_sec_005fauthorize_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f0);
      _jspx_th_sec_005fauthorize_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f0, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_sec_005fauthorize_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f5 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f5_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f5.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_sec_005fauthorize_005f0);
      // /WEB-INF/jsp/service/synchronizationPopUp.jsp(40,117) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f5.setCode("btn.label.synchronize");
      int[] _jspx_push_body_count_spring_005fmessage_005f5 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f5 = _jspx_th_spring_005fmessage_005f5.doStartTag();
        if (_jspx_th_spring_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f5[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f5.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f5.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f5);
      _jspx_th_spring_005fmessage_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f5, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f6(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f6 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f6_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f6.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f6.setParent(null);
      // /WEB-INF/jsp/service/synchronizationPopUp.jsp(42,132) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f6.setCode("btn.label.cancel");
      int[] _jspx_push_body_count_spring_005fmessage_005f6 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f6 = _jspx_th_spring_005fmessage_005f6.doStartTag();
        if (_jspx_th_spring_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f6[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f6.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f6.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f6);
      _jspx_th_spring_005fmessage_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f6, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f7(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f7 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f7_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f7.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f7.setParent(null);
      // /WEB-INF/jsp/service/synchronizationPopUp.jsp(44,188) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f7.setCode("btn.label.close");
      int[] _jspx_push_body_count_spring_005fmessage_005f7 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f7 = _jspx_th_spring_005fmessage_005f7.doStartTag();
        if (_jspx_th_spring_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f7[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f7.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f7.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f7);
      _jspx_th_spring_005fmessage_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f7, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f8(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f8 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f8_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f8.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f8.setParent(null);
      // /WEB-INF/jsp/service/synchronizationPopUp.jsp(45,196) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f8.setCode("btn.label.close");
      int[] _jspx_push_body_count_spring_005fmessage_005f8 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f8 = _jspx_th_spring_005fmessage_005f8.doStartTag();
        if (_jspx_th_spring_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f8[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f8.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f8.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f8);
      _jspx_th_spring_005fmessage_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f8, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f9(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f9 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f9_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f9.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f9.setParent(null);
      // /WEB-INF/jsp/service/synchronizationPopUp.jsp(46,188) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f9.setCode("btn.label.close");
      int[] _jspx_push_body_count_spring_005fmessage_005f9 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f9 = _jspx_th_spring_005fmessage_005f9.doStartTag();
        if (_jspx_th_spring_005fmessage_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f9[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f9.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f9.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f9);
      _jspx_th_spring_005fmessage_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f9, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f10(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f10 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f10_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f10.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f10.setParent(null);
      // /WEB-INF/jsp/service/synchronizationPopUp.jsp(133,21) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f10.setCode("serviceManagement.grid.column.service.id");
      int[] _jspx_push_body_count_spring_005fmessage_005f10 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f10 = _jspx_th_spring_005fmessage_005f10.doStartTag();
        if (_jspx_th_spring_005fmessage_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f10[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f10.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f10.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f10);
      _jspx_th_spring_005fmessage_005f10_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f10, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f10_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f11(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f11 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f11_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f11.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f11.setParent(null);
      // /WEB-INF/jsp/service/synchronizationPopUp.jsp(134,21) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f11.setCode("serviceManager.add.service.name");
      int[] _jspx_push_body_count_spring_005fmessage_005f11 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f11 = _jspx_th_spring_005fmessage_005f11.doStartTag();
        if (_jspx_th_spring_005fmessage_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f11[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f11.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f11.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f11);
      _jspx_th_spring_005fmessage_005f11_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f11, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f11_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f12(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f12 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    boolean _jspx_th_spring_005fmessage_005f12_reused = false;
    try {
      _jspx_th_spring_005fmessage_005f12.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fmessage_005f12.setParent(null);
      // /WEB-INF/jsp/service/synchronizationPopUp.jsp(135,36) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fmessage_005f12.setCode("serviceMgmt.synchronize.popup.status");
      int[] _jspx_push_body_count_spring_005fmessage_005f12 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fmessage_005f12 = _jspx_th_spring_005fmessage_005f12.doStartTag();
        if (_jspx_th_spring_005fmessage_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fmessage_005f12[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fmessage_005f12.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fmessage_005f12.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f12);
      _jspx_th_spring_005fmessage_005f12_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fmessage_005f12, _jsp_getInstanceManager(), _jspx_th_spring_005fmessage_005f12_reused);
    }
    return false;
  }
}
